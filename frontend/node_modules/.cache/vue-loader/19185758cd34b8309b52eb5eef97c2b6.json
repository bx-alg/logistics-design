{"remainingRequest":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bx/logistics-design/frontend/src/views/inventory/analysis.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/bx/logistics-design/frontend/src/views/inventory/analysis.vue","mtime":1748583981599},{"path":"/Users/bx/logistics-design/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1747185535160},{"path":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/index.js","mtime":1747185534034}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCAqIGFzIGVjaGFydHMgZnJvbSAnZWNoYXJ0cycKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSW52ZW50b3J5QW5hbHlzaXMnLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmaWx0ZXJGb3JtOiB7CiAgICAgICAgd2FyZWhvdXNlSWQ6ICdhbGwnLAogICAgICAgIGNhdGVnb3J5OiAnYWxsJwogICAgICB9LAogICAgICBkYXRlUmFuZ2U6IFsKICAgICAgICB0aGlzLmdldERhdGVCZWZvcmUoMzApLAogICAgICAgIHRoaXMuZ2V0Q3VycmVudERhdGUoKQogICAgICBdLAogICAgICB0cmVuZFRpbWVVbml0OiAnZGF5JywKICAgICAgd2FyZWhvdXNlT3B0aW9uczogWwogICAgICAgIHsgbGFiZWw6ICflhajpg6jku5PlupMnLCB2YWx1ZTogJ2FsbCcgfSwKICAgICAgICB7IGxhYmVsOiAn57uH6YeM5oiQ5ZOB5LuTJywgdmFsdWU6ICdmaW5pc2hlZCcgfSwKICAgICAgICB7IGxhYmVsOiAn57uH6YeM6Z2i5paZ5LuTJywgdmFsdWU6ICdyYXcnIH0sCiAgICAgICAgeyBsYWJlbDogJ+e7h+mHjOi+heaWmeS7kycsIHZhbHVlOiAnYWNjZXNzb3J5JyB9LAogICAgICAgIHsgbGFiZWw6ICfnu4fph4zlqbTlhL/mnI3ku5MnLCB2YWx1ZTogJ2JhYnknIH0sCiAgICAgICAgeyBsYWJlbDogJ+e7h+mHjOWHuuWPo+S7kycsIHZhbHVlOiAnZXhwb3J0JyB9CiAgICAgIF0sCiAgICAgIGNhdGVnb3J5T3B0aW9uczogWwogICAgICAgIHsgbGFiZWw6ICflhajpg6jliIbnsbsnLCB2YWx1ZTogJ2FsbCcgfSwKICAgICAgICB7IGxhYmVsOiAn5LiK6KGjJywgdmFsdWU6ICd0b3BzJyB9LAogICAgICAgIHsgbGFiZWw6ICfoo6TlrZAnLCB2YWx1ZTogJ3BhbnRzJyB9LAogICAgICAgIHsgbGFiZWw6ICfoo5noo4UnLCB2YWx1ZTogJ2RyZXNzZXMnIH0sCiAgICAgICAgeyBsYWJlbDogJ+Wll+ijhScsIHZhbHVlOiAnc3VpdHMnIH0sCiAgICAgICAgeyBsYWJlbDogJ+WptOWEv+ijhScsIHZhbHVlOiAnYmFieScgfSwKICAgICAgICB7IGxhYmVsOiAn6Z2i5paZJywgdmFsdWU6ICdmYWJyaWMnIH0sCiAgICAgICAgeyBsYWJlbDogJ+i+heaWmScsIHZhbHVlOiAnYWNjZXNzb3JpZXMnIH0KICAgICAgXSwKICAgICAgc2xvd01vdmluZ0xpc3Q6IFsKICAgICAgICB7IHJhbms6IDEsIHByb2R1Y3ROYW1lOiAn5YS/56ul5Yas5a2j5qOJ5pyNJywgZGF5czogMTIwLCBxdWFudGl0eTogMTU4LCB2YWx1ZTogMjM3MDAgfSwKICAgICAgICB7IHJhbms6IDIsIHByb2R1Y3ROYW1lOiAn5YS/56ul576957uS5pyNJywgZGF5czogOTUsIHF1YW50aXR5OiA4NSwgdmFsdWU6IDI1NTAwIH0sCiAgICAgICAgeyByYW5rOiAzLCBwcm9kdWN0TmFtZTogJ+WEv+erpeavm+ihoycsIGRheXM6IDg1LCBxdWFudGl0eTogMTQyLCB2YWx1ZTogMTQyMDAgfSwKICAgICAgICB7IHJhbms6IDQsIHByb2R1Y3ROYW1lOiAn5YS/56ul56eL6KOkJywgZGF5czogODAsIHF1YW50aXR5OiAxNzUsIHZhbHVlOiA4NzUwIH0sCiAgICAgICAgeyByYW5rOiA1LCBwcm9kdWN0TmFtZTogJ+WEv+erpemprOeUsicsIGRheXM6IDc2LCBxdWFudGl0eTogOTgsIHZhbHVlOiA3ODQwIH0sCiAgICAgICAgeyByYW5rOiA2LCBwcm9kdWN0TmFtZTogJ+WEv+erpei/nuW4veWkluWllycsIGRheXM6IDcyLCBxdWFudGl0eTogMTI2LCB2YWx1ZTogMTUxMjAgfSwKICAgICAgICB7IHJhbms6IDcsIHByb2R1Y3ROYW1lOiAn5YS/56ul6ZKI57uH6KGrJywgZGF5czogNjgsIHF1YW50aXR5OiAxNTYsIHZhbHVlOiAxMjQ4MCB9CiAgICAgIF0sCiAgICAgIGNoYXJ0czogewogICAgICAgIHR1cm5vdmVyUmF0ZUNoYXJ0OiBudWxsLAogICAgICAgIGludmVudG9yeVN0cnVjdHVyZUNoYXJ0OiBudWxsLAogICAgICAgIGludmVudG9yeVRyZW5kQ2hhcnQ6IG51bGwsCiAgICAgICAgaW52ZW50b3J5U3RhdHVzQ2hhcnQ6IG51bGwKICAgICAgfQogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuaW5pdENoYXJ0cygpCiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5yZXNpemVDaGFydHMpCiAgfSwKICBiZWZvcmVEZXN0cm95KCkgewogICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMucmVzaXplQ2hhcnRzKQogICAgdGhpcy5kZXN0cm95Q2hhcnRzKCkKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldEN1cnJlbnREYXRlKCkgewogICAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpCiAgICAgIGNvbnN0IHllYXIgPSBub3cuZ2V0RnVsbFllYXIoKQogICAgICBjb25zdCBtb250aCA9IChub3cuZ2V0TW9udGgoKSArIDEpLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKQogICAgICBjb25zdCBkYXkgPSBub3cuZ2V0RGF0ZSgpLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKQogICAgICByZXR1cm4gYCR7eWVhcn0tJHttb250aH0tJHtkYXl9YAogICAgfSwKICAgIGdldERhdGVCZWZvcmUoZGF5cykgewogICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoKQogICAgICBkYXRlLnNldERhdGUoZGF0ZS5nZXREYXRlKCkgLSBkYXlzKQogICAgICBjb25zdCB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpCiAgICAgIGNvbnN0IG1vbnRoID0gKGRhdGUuZ2V0TW9udGgoKSArIDEpLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKQogICAgICBjb25zdCBkYXkgPSBkYXRlLmdldERhdGUoKS50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJykKICAgICAgcmV0dXJuIGAke3llYXJ9LSR7bW9udGh9LSR7ZGF5fWAKICAgIH0sCiAgICBpbml0Q2hhcnRzKCkgewogICAgICAvLyDliJ3lp4vljJblupPlrZjlkajovaznjoflm77ooagKICAgICAgdGhpcy5jaGFydHMudHVybm92ZXJSYXRlQ2hhcnQgPSBlY2hhcnRzLmluaXQodGhpcy4kcmVmcy50dXJub3ZlclJhdGVDaGFydCkKICAgICAgdGhpcy5jaGFydHMudHVybm92ZXJSYXRlQ2hhcnQuc2V0T3B0aW9uKHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogJ+i/kTEy5Liq5pyI5bqT5a2Y5ZGo6L2s546HJywKICAgICAgICAgIGxlZnQ6ICdjZW50ZXInCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycsCiAgICAgICAgICBheGlzUG9pbnRlcjogewogICAgICAgICAgICB0eXBlOiAnc2hhZG93JwogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgZ3JpZDogewogICAgICAgICAgbGVmdDogJzMlJywKICAgICAgICAgIHJpZ2h0OiAnNCUnLAogICAgICAgICAgYm90dG9tOiAnMyUnLAogICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB4QXhpczogewogICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JywKICAgICAgICAgIGRhdGE6IFsnNuaciCcsICc35pyIJywgJzjmnIgnLCAnOeaciCcsICcxMOaciCcsICcxMeaciCcsICcxMuaciCcsICcx5pyIJywgJzLmnIgnLCAnM+aciCcsICc05pyIJywgJzXmnIgnXQogICAgICAgIH0sCiAgICAgICAgeUF4aXM6IHsKICAgICAgICAgIHR5cGU6ICd2YWx1ZScsCiAgICAgICAgICBuYW1lOiAn5ZGo6L2s546H77yI5qyhL+aciO+8iScKICAgICAgICB9LAogICAgICAgIHNlcmllczogWwogICAgICAgICAgewogICAgICAgICAgICBuYW1lOiAn5ZGo6L2s546HJywKICAgICAgICAgICAgdHlwZTogJ2JhcicsCiAgICAgICAgICAgIGRhdGE6IFszLjIsIDMuNSwgMy44LCA0LjEsIDQuMCwgMy45LCAzLjYsIDMuNSwgMy4zLCAzLjgsIDQuMCwgNC4yXSwKICAgICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjNDA5RUZGJwogICAgICAgICAgICB9LAogICAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICAgICAgY29sb3I6ICcjNjZiMWZmJwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIF0KICAgICAgfSkKCiAgICAgIC8vIOWIneWni+WMluW6k+WtmOe7k+aehOWbvuihqAogICAgICB0aGlzLmNoYXJ0cy5pbnZlbnRvcnlTdHJ1Y3R1cmVDaGFydCA9IGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLmludmVudG9yeVN0cnVjdHVyZUNoYXJ0KQogICAgICB0aGlzLmNoYXJ0cy5pbnZlbnRvcnlTdHJ1Y3R1cmVDaGFydC5zZXRPcHRpb24oewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0OiAn5bqT5a2Y57uT5p6E5YiG5biDJywKICAgICAgICAgIGxlZnQ6ICdjZW50ZXInCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAnaXRlbScsCiAgICAgICAgICBmb3JtYXR0ZXI6ICd7YX0gPGJyLz57Yn06IHtjfSAoe2R9JSknCiAgICAgICAgfSwKICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgIG9yaWVudDogJ3ZlcnRpY2FsJywKICAgICAgICAgIGxlZnQ6IDEwLAogICAgICAgICAgZGF0YTogWyfkuIrooaMnLCAn6KOk5a2QJywgJ+ijmeijhScsICflpZfoo4UnLCAn5am05YS/6KOFJywgJ+mdouaWmScsICfovoXmlpknXQogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIG5hbWU6ICflupPlrZjljaDmr5QnLAogICAgICAgICAgICB0eXBlOiAncGllJywKICAgICAgICAgICAgcmFkaXVzOiBbJzUwJScsICc3MCUnXSwKICAgICAgICAgICAgYXZvaWRMYWJlbE92ZXJsYXA6IGZhbHNlLAogICAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICAgIHNob3c6IGZhbHNlLAogICAgICAgICAgICAgIHBvc2l0aW9uOiAnY2VudGVyJwogICAgICAgICAgICB9LAogICAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICAgICAgZm9udFNpemU6ICcxOCcsCiAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiAnYm9sZCcKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxhYmVsTGluZTogewogICAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGRhdGE6IFsKICAgICAgICAgICAgICB7IHZhbHVlOiAzNSwgbmFtZTogJ+S4iuihoycgfSwKICAgICAgICAgICAgICB7IHZhbHVlOiAyNSwgbmFtZTogJ+ijpOWtkCcgfSwKICAgICAgICAgICAgICB7IHZhbHVlOiAxNSwgbmFtZTogJ+ijmeijhScgfSwKICAgICAgICAgICAgICB7IHZhbHVlOiAxMCwgbmFtZTogJ+Wll+ijhScgfSwKICAgICAgICAgICAgICB7IHZhbHVlOiA4LCBuYW1lOiAn5am05YS/6KOFJyB9LAogICAgICAgICAgICAgIHsgdmFsdWU6IDQsIG5hbWU6ICfpnaLmlpknIH0sCiAgICAgICAgICAgICAgeyB2YWx1ZTogMywgbmFtZTogJ+i+heaWmScgfQogICAgICAgICAgICBdCiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9KQoKICAgICAgLy8g5Yid5aeL5YyW5bqT5a2Y5Y+Y5Yqo6LaL5Yq/5Zu+6KGoCiAgICAgIHRoaXMudXBkYXRlVHJlbmRDaGFydCgpCgogICAgICAvLyDliJ3lp4vljJblupPlrZjnirbmgIHlm77ooagKICAgICAgdGhpcy5jaGFydHMuaW52ZW50b3J5U3RhdHVzQ2hhcnQgPSBlY2hhcnRzLmluaXQodGhpcy4kcmVmcy5pbnZlbnRvcnlTdGF0dXNDaGFydCkKICAgICAgdGhpcy5jaGFydHMuaW52ZW50b3J5U3RhdHVzQ2hhcnQuc2V0T3B0aW9uKHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogJ+W6k+WtmOeKtuaAgeWIhuW4gycsCiAgICAgICAgICBsZWZ0OiAnY2VudGVyJwogICAgICAgIH0sCiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgdHJpZ2dlcjogJ2l0ZW0nLAogICAgICAgICAgZm9ybWF0dGVyOiAne2F9IDxici8+e2J9OiB7Y30gKHtkfSUpJwogICAgICAgIH0sCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBvcmllbnQ6ICd2ZXJ0aWNhbCcsCiAgICAgICAgICBsZWZ0OiAxMCwKICAgICAgICAgIGRhdGE6IFsn5bqT5a2Y5YWF6LazJywgJ+W6k+WtmOato+W4uCcsICflupPlrZjlgY/kvY4nLCAn5bqT5a2Y57Sn57y6JywgJ+W6k+WtmOi2hemHjyddCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgbmFtZTogJ+W6k+WtmOeKtuaAgScsCiAgICAgICAgICAgIHR5cGU6ICdwaWUnLAogICAgICAgICAgICByYWRpdXM6ICc1NSUnLAogICAgICAgICAgICBjZW50ZXI6IFsnNTAlJywgJzYwJSddLAogICAgICAgICAgICBkYXRhOiBbCiAgICAgICAgICAgICAgeyB2YWx1ZTogMzUsIG5hbWU6ICflupPlrZjlhYXotrMnLCBpdGVtU3R5bGU6IHsgY29sb3I6ICcjNjdDMjNBJyB9IH0sCiAgICAgICAgICAgICAgeyB2YWx1ZTogNDAsIG5hbWU6ICflupPlrZjmraPluLgnLCBpdGVtU3R5bGU6IHsgY29sb3I6ICcjNDA5RUZGJyB9IH0sCiAgICAgICAgICAgICAgeyB2YWx1ZTogMTUsIG5hbWU6ICflupPlrZjlgY/kvY4nLCBpdGVtU3R5bGU6IHsgY29sb3I6ICcjRTZBMjNDJyB9IH0sCiAgICAgICAgICAgICAgeyB2YWx1ZTogNSwgbmFtZTogJ+W6k+WtmOe0p+e8uicsIGl0ZW1TdHlsZTogeyBjb2xvcjogJyNGNTZDNkMnIH0gfSwKICAgICAgICAgICAgICB7IHZhbHVlOiA1LCBuYW1lOiAn5bqT5a2Y6LaF6YePJywgaXRlbVN0eWxlOiB7IGNvbG9yOiAnIzkwOTM5OScgfSB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgICAgICBzaGFkb3dCbHVyOiAxMCwKICAgICAgICAgICAgICAgIHNoYWRvd09mZnNldFg6IDAsCiAgICAgICAgICAgICAgICBzaGFkb3dDb2xvcjogJ3JnYmEoMCwgMCwgMCwgMC41KScKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0pCiAgICB9LAogICAgdXBkYXRlVHJlbmRDaGFydCgpIHsKICAgICAgaWYgKCF0aGlzLiRyZWZzLmludmVudG9yeVRyZW5kQ2hhcnQpIHJldHVybgoKICAgICAgaWYgKCF0aGlzLmNoYXJ0cy5pbnZlbnRvcnlUcmVuZENoYXJ0KSB7CiAgICAgICAgdGhpcy5jaGFydHMuaW52ZW50b3J5VHJlbmRDaGFydCA9IGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLmludmVudG9yeVRyZW5kQ2hhcnQpCiAgICAgIH0KCiAgICAgIGxldCB4QXhpc0RhdGEgPSBbXQogICAgICBsZXQgaW5ib3VuZERhdGEgPSBbXQogICAgICBsZXQgb3V0Ym91bmREYXRhID0gW10KICAgICAgbGV0IHN0b2NrRGF0YSA9IFtdCgogICAgICAvLyDmoLnmja7ml7bpl7TljZXkvY3nlJ/miJDkuI3lkIznmoTmlbDmja4KICAgICAgaWYgKHRoaXMudHJlbmRUaW1lVW5pdCA9PT0gJ2RheScpIHsKICAgICAgICBmb3IgKGxldCBpID0gMTsgaSA8PSAzMDsgaSsrKSB7CiAgICAgICAgICB4QXhpc0RhdGEucHVzaChgJHtpfeaXpWApCiAgICAgICAgICBpbmJvdW5kRGF0YS5wdXNoKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMCArIDUwKSkKICAgICAgICAgIG91dGJvdW5kRGF0YS5wdXNoKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDgwICsgNDApKQogICAgICAgICAgc3RvY2tEYXRhLnB1c2goNTAwMCArIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDAgLSA1MDApKQogICAgICAgIH0KICAgICAgfSBlbHNlIGlmICh0aGlzLnRyZW5kVGltZVVuaXQgPT09ICdtb250aCcpIHsKICAgICAgICB4QXhpc0RhdGEgPSBbJzHmnIgnLCAnMuaciCcsICcz5pyIJywgJzTmnIgnLCAnNeaciCcsICc25pyIJywgJzfmnIgnLCAnOOaciCcsICc55pyIJywgJzEw5pyIJywgJzEx5pyIJywgJzEy5pyIJ10KICAgICAgICBpbmJvdW5kRGF0YSA9IFsxMjUwLCAxNDIwLCAxNTgwLCAxMzIwLCAxNDUwLCAxNjIwLCAxMzgwLCAxNTIwLCAxNjgwLCAxNDIwLCAxNTIwLCAxNjUwXQogICAgICAgIG91dGJvdW5kRGF0YSA9IFsxMTUwLCAxMzIwLCAxNDgwLCAxMzUwLCAxMzgwLCAxNTUwLCAxNDIwLCAxNDgwLCAxNjIwLCAxMzgwLCAxNDgwLCAxNTgwXQogICAgICAgIHN0b2NrRGF0YSA9IFs1MjAwLCA1MzAwLCA1NDAwLCA1MzcwLCA1NDQwLCA1NTEwLCA1NDcwLCA1NTEwLCA1NTcwLCA1NjEwLCA1NjUwLCA1NzIwXQogICAgICB9IGVsc2UgaWYgKHRoaXMudHJlbmRUaW1lVW5pdCA9PT0gJ3F1YXJ0ZXInKSB7CiAgICAgICAgeEF4aXNEYXRhID0gWydRMScsICdRMicsICdRMycsICdRNCddCiAgICAgICAgaW5ib3VuZERhdGEgPSBbNDI1MCwgNDM5MCwgNDU4MCwgNDc5MF0KICAgICAgICBvdXRib3VuZERhdGEgPSBbMzk1MCwgNDI1MCwgNDQ4MCwgNDY1MF0KICAgICAgICBzdG9ja0RhdGEgPSBbNTMwMCwgNTQ0MCwgNTU0MCwgNTY4MF0KICAgICAgfQoKICAgICAgdGhpcy5jaGFydHMuaW52ZW50b3J5VHJlbmRDaGFydC5zZXRPcHRpb24oewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0OiAn5bqT5a2Y5Y+Y5Yqo6LaL5Yq/JywKICAgICAgICAgIGxlZnQ6ICdjZW50ZXInCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycsCiAgICAgICAgICBheGlzUG9pbnRlcjogewogICAgICAgICAgICB0eXBlOiAnY3Jvc3MnLAogICAgICAgICAgICBjcm9zc1N0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjOTk5JwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB0b29sYm94OiB7CiAgICAgICAgICBmZWF0dXJlOiB7CiAgICAgICAgICAgIGRhdGFWaWV3OiB7IHNob3c6IHRydWUsIHJlYWRPbmx5OiBmYWxzZSB9LAogICAgICAgICAgICBtYWdpY1R5cGU6IHsgc2hvdzogdHJ1ZSwgdHlwZTogWydsaW5lJywgJ2JhciddIH0sCiAgICAgICAgICAgIHJlc3RvcmU6IHsgc2hvdzogdHJ1ZSB9LAogICAgICAgICAgICBzYXZlQXNJbWFnZTogeyBzaG93OiB0cnVlIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgZGF0YTogWyflhaXlupPph48nLCAn5Ye65bqT6YePJywgJ+W6k+WtmOmHjyddLAogICAgICAgICAgYm90dG9tOiAxMAogICAgICAgIH0sCiAgICAgICAgeEF4aXM6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JywKICAgICAgICAgICAgZGF0YTogeEF4aXNEYXRhLAogICAgICAgICAgICBheGlzUG9pbnRlcjogewogICAgICAgICAgICAgIHR5cGU6ICdzaGFkb3cnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgIHlBeGlzOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIHR5cGU6ICd2YWx1ZScsCiAgICAgICAgICAgIG5hbWU6ICflhaUv5Ye65bqT6YePJywKICAgICAgICAgICAgbWluOiAwLAogICAgICAgICAgICBheGlzTGFiZWw6IHsKICAgICAgICAgICAgICBmb3JtYXR0ZXI6ICd7dmFsdWV9JwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICB0eXBlOiAndmFsdWUnLAogICAgICAgICAgICBuYW1lOiAn5bqT5a2Y6YePJywKICAgICAgICAgICAgbWluOiAwLAogICAgICAgICAgICBheGlzTGFiZWw6IHsKICAgICAgICAgICAgICBmb3JtYXR0ZXI6ICd7dmFsdWV9JwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICBzZXJpZXM6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgbmFtZTogJ+WFpeW6k+mHjycsCiAgICAgICAgICAgIHR5cGU6ICdiYXInLAogICAgICAgICAgICBkYXRhOiBpbmJvdW5kRGF0YSwKICAgICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjNDA5RUZGJwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICBuYW1lOiAn5Ye65bqT6YePJywKICAgICAgICAgICAgdHlwZTogJ2JhcicsCiAgICAgICAgICAgIGRhdGE6IG91dGJvdW5kRGF0YSwKICAgICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjNjdDMjNBJwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICBuYW1lOiAn5bqT5a2Y6YePJywKICAgICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgICB5QXhpc0luZGV4OiAxLAogICAgICAgICAgICBkYXRhOiBzdG9ja0RhdGEsCiAgICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnI0U2QTIzQycKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIF0KICAgICAgfSkKICAgIH0sCiAgICByZWZyZXNoRGF0YSgpIHsKICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfmlbDmja7lt7Lmm7TmlrAnKQogICAgICB0aGlzLnVwZGF0ZVRyZW5kQ2hhcnQoKQogICAgfSwKICAgIHJlc2l6ZUNoYXJ0cygpIHsKICAgICAgZm9yIChjb25zdCBrZXkgaW4gdGhpcy5jaGFydHMpIHsKICAgICAgICBpZiAodGhpcy5jaGFydHNba2V5XSkgewogICAgICAgICAgdGhpcy5jaGFydHNba2V5XS5yZXNpemUoKQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGRlc3Ryb3lDaGFydHMoKSB7CiAgICAgIGZvciAoY29uc3Qga2V5IGluIHRoaXMuY2hhcnRzKSB7CiAgICAgICAgaWYgKHRoaXMuY2hhcnRzW2tleV0pIHsKICAgICAgICAgIHRoaXMuY2hhcnRzW2tleV0uZGlzcG9zZSgpCiAgICAgICAgICB0aGlzLmNoYXJ0c1trZXldID0gbnVsbAogICAgICAgIH0KICAgICAgfQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIHRyZW5kVGltZVVuaXQoKSB7CiAgICAgIHRoaXMudXBkYXRlVHJlbmRDaGFydCgpCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["analysis.vue"],"names":[],"mappingsfile":"analysis.vue","sourceRoot":"src/views/inventory","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-card class=\"filter-container\">\n      <div slot=\"header\">\n        <span>库存分析</span>\n      </div>\n      <div class=\"filter-item-container\">\n        <div class=\"filter-item\">\n          <span class=\"label\">仓库：</span>\n          <el-select v-model=\"filterForm.warehouseId\" placeholder=\"请选择\" style=\"width: 180px\">\n            <el-option v-for=\"item in warehouseOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\n          </el-select>\n        </div>\n        <div class=\"filter-item\">\n          <span class=\"label\">商品类别：</span>\n          <el-select v-model=\"filterForm.category\" placeholder=\"请选择\" style=\"width: 180px\">\n            <el-option v-for=\"item in categoryOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\n          </el-select>\n        </div>\n        <div class=\"filter-item\">\n          <span class=\"label\">时间范围：</span>\n          <el-date-picker\n            v-model=\"dateRange\"\n            type=\"daterange\"\n            align=\"right\"\n            unlink-panels\n            range-separator=\"至\"\n            start-placeholder=\"开始日期\"\n            end-placeholder=\"结束日期\"\n            value-format=\"yyyy-MM-dd\"\n            style=\"width: 280px\"\n          />\n        </div>\n        <el-button type=\"primary\" icon=\"el-icon-refresh\" @click=\"refreshData\">刷新数据</el-button>\n      </div>\n    </el-card>\n\n    <div class=\"chart-container\">\n      <el-row :gutter=\"20\">\n        <el-col :span=\"12\">\n          <el-card shadow=\"hover\">\n            <div slot=\"header\">\n              <span>库存周转率分析</span>\n            </div>\n            <div ref=\"turnoverRateChart\" style=\"height: 350px;\"></div>\n          </el-card>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-card shadow=\"hover\">\n            <div slot=\"header\">\n              <span>库存结构分析</span>\n            </div>\n            <div ref=\"inventoryStructureChart\" style=\"height: 350px;\"></div>\n          </el-card>\n        </el-col>\n      </el-row>\n\n      <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\n        <el-col :span=\"24\">\n          <el-card shadow=\"hover\">\n            <div slot=\"header\">\n              <span>库存变动趋势</span>\n              <el-radio-group v-model=\"trendTimeUnit\" size=\"mini\" style=\"float: right;\">\n                <el-radio-button label=\"day\">日</el-radio-button>\n                <el-radio-button label=\"month\">月</el-radio-button>\n                <el-radio-button label=\"quarter\">季</el-radio-button>\n              </el-radio-group>\n            </div>\n            <div ref=\"inventoryTrendChart\" style=\"height: 350px;\"></div>\n          </el-card>\n        </el-col>\n      </el-row>\n\n      <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\n        <el-col :span=\"12\">\n          <el-card shadow=\"hover\">\n            <div slot=\"header\">\n              <span>库存状态分布</span>\n            </div>\n            <div ref=\"inventoryStatusChart\" style=\"height: 350px;\"></div>\n          </el-card>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-card shadow=\"hover\">\n            <div slot=\"header\">\n              <span>滞销商品排行</span>\n            </div>\n            <el-table :data=\"slowMovingList\" border style=\"width: 100%\">\n              <el-table-column prop=\"rank\" label=\"排名\" width=\"80\" align=\"center\" />\n              <el-table-column prop=\"productName\" label=\"商品名称\" align=\"center\" />\n              <el-table-column prop=\"days\" label=\"滞销天数\" align=\"center\" />\n              <el-table-column prop=\"quantity\" label=\"库存数量\" align=\"center\" />\n              <el-table-column prop=\"value\" label=\"库存金额\" align=\"center\">\n                <template slot-scope=\"scope\">\n                  ¥ {{ scope.row.value }}\n                </template>\n              </el-table-column>\n            </el-table>\n          </el-card>\n        </el-col>\n      </el-row>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\n\nexport default {\n  name: 'InventoryAnalysis',\n  data() {\n    return {\n      filterForm: {\n        warehouseId: 'all',\n        category: 'all'\n      },\n      dateRange: [\n        this.getDateBefore(30),\n        this.getCurrentDate()\n      ],\n      trendTimeUnit: 'day',\n      warehouseOptions: [\n        { label: '全部仓库', value: 'all' },\n        { label: '织里成品仓', value: 'finished' },\n        { label: '织里面料仓', value: 'raw' },\n        { label: '织里辅料仓', value: 'accessory' },\n        { label: '织里婴儿服仓', value: 'baby' },\n        { label: '织里出口仓', value: 'export' }\n      ],\n      categoryOptions: [\n        { label: '全部分类', value: 'all' },\n        { label: '上衣', value: 'tops' },\n        { label: '裤子', value: 'pants' },\n        { label: '裙装', value: 'dresses' },\n        { label: '套装', value: 'suits' },\n        { label: '婴儿装', value: 'baby' },\n        { label: '面料', value: 'fabric' },\n        { label: '辅料', value: 'accessories' }\n      ],\n      slowMovingList: [\n        { rank: 1, productName: '儿童冬季棉服', days: 120, quantity: 158, value: 23700 },\n        { rank: 2, productName: '儿童羽绒服', days: 95, quantity: 85, value: 25500 },\n        { rank: 3, productName: '儿童毛衣', days: 85, quantity: 142, value: 14200 },\n        { rank: 4, productName: '儿童秋裤', days: 80, quantity: 175, value: 8750 },\n        { rank: 5, productName: '儿童马甲', days: 76, quantity: 98, value: 7840 },\n        { rank: 6, productName: '儿童连帽外套', days: 72, quantity: 126, value: 15120 },\n        { rank: 7, productName: '儿童针织衫', days: 68, quantity: 156, value: 12480 }\n      ],\n      charts: {\n        turnoverRateChart: null,\n        inventoryStructureChart: null,\n        inventoryTrendChart: null,\n        inventoryStatusChart: null\n      }\n    }\n  },\n  mounted() {\n    this.initCharts()\n    window.addEventListener('resize', this.resizeCharts)\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.resizeCharts)\n    this.destroyCharts()\n  },\n  methods: {\n    getCurrentDate() {\n      const now = new Date()\n      const year = now.getFullYear()\n      const month = (now.getMonth() + 1).toString().padStart(2, '0')\n      const day = now.getDate().toString().padStart(2, '0')\n      return `${year}-${month}-${day}`\n    },\n    getDateBefore(days) {\n      const date = new Date()\n      date.setDate(date.getDate() - days)\n      const year = date.getFullYear()\n      const month = (date.getMonth() + 1).toString().padStart(2, '0')\n      const day = date.getDate().toString().padStart(2, '0')\n      return `${year}-${month}-${day}`\n    },\n    initCharts() {\n      // 初始化库存周转率图表\n      this.charts.turnoverRateChart = echarts.init(this.$refs.turnoverRateChart)\n      this.charts.turnoverRateChart.setOption({\n        title: {\n          text: '近12个月库存周转率',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          data: ['6月', '7月', '8月', '9月', '10月', '11月', '12月', '1月', '2月', '3月', '4月', '5月']\n        },\n        yAxis: {\n          type: 'value',\n          name: '周转率（次/月）'\n        },\n        series: [\n          {\n            name: '周转率',\n            type: 'bar',\n            data: [3.2, 3.5, 3.8, 4.1, 4.0, 3.9, 3.6, 3.5, 3.3, 3.8, 4.0, 4.2],\n            itemStyle: {\n              color: '#409EFF'\n            },\n            emphasis: {\n              itemStyle: {\n                color: '#66b1ff'\n              }\n            }\n          }\n        ]\n      })\n\n      // 初始化库存结构图表\n      this.charts.inventoryStructureChart = echarts.init(this.$refs.inventoryStructureChart)\n      this.charts.inventoryStructureChart.setOption({\n        title: {\n          text: '库存结构分布',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 10,\n          data: ['上衣', '裤子', '裙装', '套装', '婴儿装', '面料', '辅料']\n        },\n        series: [\n          {\n            name: '库存占比',\n            type: 'pie',\n            radius: ['50%', '70%'],\n            avoidLabelOverlap: false,\n            label: {\n              show: false,\n              position: 'center'\n            },\n            emphasis: {\n              label: {\n                show: true,\n                fontSize: '18',\n                fontWeight: 'bold'\n              }\n            },\n            labelLine: {\n              show: false\n            },\n            data: [\n              { value: 35, name: '上衣' },\n              { value: 25, name: '裤子' },\n              { value: 15, name: '裙装' },\n              { value: 10, name: '套装' },\n              { value: 8, name: '婴儿装' },\n              { value: 4, name: '面料' },\n              { value: 3, name: '辅料' }\n            ]\n          }\n        ]\n      })\n\n      // 初始化库存变动趋势图表\n      this.updateTrendChart()\n\n      // 初始化库存状态图表\n      this.charts.inventoryStatusChart = echarts.init(this.$refs.inventoryStatusChart)\n      this.charts.inventoryStatusChart.setOption({\n        title: {\n          text: '库存状态分布',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 10,\n          data: ['库存充足', '库存正常', '库存偏低', '库存紧缺', '库存超量']\n        },\n        series: [\n          {\n            name: '库存状态',\n            type: 'pie',\n            radius: '55%',\n            center: ['50%', '60%'],\n            data: [\n              { value: 35, name: '库存充足', itemStyle: { color: '#67C23A' } },\n              { value: 40, name: '库存正常', itemStyle: { color: '#409EFF' } },\n              { value: 15, name: '库存偏低', itemStyle: { color: '#E6A23C' } },\n              { value: 5, name: '库存紧缺', itemStyle: { color: '#F56C6C' } },\n              { value: 5, name: '库存超量', itemStyle: { color: '#909399' } }\n            ],\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }\n        ]\n      })\n    },\n    updateTrendChart() {\n      if (!this.$refs.inventoryTrendChart) return\n\n      if (!this.charts.inventoryTrendChart) {\n        this.charts.inventoryTrendChart = echarts.init(this.$refs.inventoryTrendChart)\n      }\n\n      let xAxisData = []\n      let inboundData = []\n      let outboundData = []\n      let stockData = []\n\n      // 根据时间单位生成不同的数据\n      if (this.trendTimeUnit === 'day') {\n        for (let i = 1; i <= 30; i++) {\n          xAxisData.push(`${i}日`)\n          inboundData.push(Math.floor(Math.random() * 100 + 50))\n          outboundData.push(Math.floor(Math.random() * 80 + 40))\n          stockData.push(5000 + Math.floor(Math.random() * 1000 - 500))\n        }\n      } else if (this.trendTimeUnit === 'month') {\n        xAxisData = ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']\n        inboundData = [1250, 1420, 1580, 1320, 1450, 1620, 1380, 1520, 1680, 1420, 1520, 1650]\n        outboundData = [1150, 1320, 1480, 1350, 1380, 1550, 1420, 1480, 1620, 1380, 1480, 1580]\n        stockData = [5200, 5300, 5400, 5370, 5440, 5510, 5470, 5510, 5570, 5610, 5650, 5720]\n      } else if (this.trendTimeUnit === 'quarter') {\n        xAxisData = ['Q1', 'Q2', 'Q3', 'Q4']\n        inboundData = [4250, 4390, 4580, 4790]\n        outboundData = [3950, 4250, 4480, 4650]\n        stockData = [5300, 5440, 5540, 5680]\n      }\n\n      this.charts.inventoryTrendChart.setOption({\n        title: {\n          text: '库存变动趋势',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            crossStyle: {\n              color: '#999'\n            }\n          }\n        },\n        toolbox: {\n          feature: {\n            dataView: { show: true, readOnly: false },\n            magicType: { show: true, type: ['line', 'bar'] },\n            restore: { show: true },\n            saveAsImage: { show: true }\n          }\n        },\n        legend: {\n          data: ['入库量', '出库量', '库存量'],\n          bottom: 10\n        },\n        xAxis: [\n          {\n            type: 'category',\n            data: xAxisData,\n            axisPointer: {\n              type: 'shadow'\n            }\n          }\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            name: '入/出库量',\n            min: 0,\n            axisLabel: {\n              formatter: '{value}'\n            }\n          },\n          {\n            type: 'value',\n            name: '库存量',\n            min: 0,\n            axisLabel: {\n              formatter: '{value}'\n            }\n          }\n        ],\n        series: [\n          {\n            name: '入库量',\n            type: 'bar',\n            data: inboundData,\n            itemStyle: {\n              color: '#409EFF'\n            }\n          },\n          {\n            name: '出库量',\n            type: 'bar',\n            data: outboundData,\n            itemStyle: {\n              color: '#67C23A'\n            }\n          },\n          {\n            name: '库存量',\n            type: 'line',\n            yAxisIndex: 1,\n            data: stockData,\n            itemStyle: {\n              color: '#E6A23C'\n            }\n          }\n        ]\n      })\n    },\n    refreshData() {\n      this.$message.success('数据已更新')\n      this.updateTrendChart()\n    },\n    resizeCharts() {\n      for (const key in this.charts) {\n        if (this.charts[key]) {\n          this.charts[key].resize()\n        }\n      }\n    },\n    destroyCharts() {\n      for (const key in this.charts) {\n        if (this.charts[key]) {\n          this.charts[key].dispose()\n          this.charts[key] = null\n        }\n      }\n    }\n  },\n  watch: {\n    trendTimeUnit() {\n      this.updateTrendChart()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.filter-container {\n  margin-bottom: 20px;\n}\n.filter-item-container {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n}\n.filter-item {\n  display: flex;\n  align-items: center;\n  margin-right: 30px;\n  margin-bottom: 10px;\n}\n.label {\n  margin-right: 10px;\n}\n.chart-container {\n  margin-top: 20px;\n}\n</style> "]}]}