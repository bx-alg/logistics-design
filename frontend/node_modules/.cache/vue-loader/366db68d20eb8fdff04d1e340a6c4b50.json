{"remainingRequest":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bx/logistics-design/frontend/src/views/order/tracking.vue?vue&type=style&index=0&id=253678f2&scoped=true&lang=css","dependencies":[{"path":"/Users/bx/logistics-design/frontend/src/views/order/tracking.vue","mtime":1747835353345},{"path":"/Users/bx/logistics-design/frontend/node_modules/css-loader/dist/cjs.js","mtime":1747185535288},{"path":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1747185534140},{"path":"/Users/bx/logistics-design/frontend/node_modules/postcss-loader/src/index.js","mtime":1747185535100},{"path":"/Users/bx/logistics-design/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1747185535160},{"path":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/index.js","mtime":1747185534034}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5maWx0ZXItY29udGFpbmVyIHsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9Ci5maWx0ZXItaXRlbS1jb250YWluZXIgewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC13cmFwOiB3cmFwOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KLmZpbHRlci1pdGVtIHsKICBtYXJnaW4tcmlnaHQ6IDE1cHg7CiAgbWFyZ2luLWJvdHRvbTogMTBweDsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KLmZpbHRlci1pdGVtIC5sYWJlbCB7CiAgbWFyZ2luLXJpZ2h0OiA1cHg7Cn0KLnBhZ2luYXRpb24tY29udGFpbmVyIHsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHRleHQtYWxpZ246IHJpZ2h0Owp9Ci5zdGF0dXMtY2FyZCB7CiAgaGVpZ2h0OiAxMDBweDsKICBib3JkZXItcmFkaXVzOiA0cHg7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIHBhZGRpbmc6IDIwcHg7CiAgY29sb3I6ICNmZmY7Cn0KLnN0YXR1cy1jYXJkLndhaXRpbmcgewogIGJhY2tncm91bmQ6ICM5MDkzOTk7Cn0KLnN0YXR1cy1jYXJkLnByb2Nlc3NpbmcgewogIGJhY2tncm91bmQ6ICNFNkEyM0M7Cn0KLnN0YXR1cy1jYXJkLnNoaXBwZWQgewogIGJhY2tncm91bmQ6ICM0MDlFRkY7Cn0KLnN0YXR1cy1jYXJkLmNvbXBsZXRlZCB7CiAgYmFja2dyb3VuZDogIzY3QzIzQTsKfQouY2FyZC1pY29uIHsKICBmb250LXNpemU6IDQwcHg7CiAgbWFyZ2luLXJpZ2h0OiAyMHB4Owp9Ci5jYXJkLWNvbnRlbnQgewogIGZsZXg6IDE7Cn0KLmNhcmQtdGl0bGUgewogIGZvbnQtc2l6ZTogMTZweDsKICBtYXJnaW4tYm90dG9tOiAxMHB4Owp9Ci5jYXJkLXZhbHVlIHsKICBmb250LXNpemU6IDI4cHg7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0K"},{"version":3,"sources":["tracking.vue"],"names":[],"mappings":";AA+dA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tracking.vue","sourceRoot":"src/views/order","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-card class=\"filter-container\">\n      <div slot=\"header\">\n        <span>生产进度跟踪</span>\n      </div>\n      <div class=\"filter-item-container\">\n        <div class=\"filter-item\">\n          <span class=\"label\">订单编号：</span>\n          <el-input v-model=\"filterForm.orderNo\" placeholder=\"请输入订单编号\" style=\"width: 180px\" clearable />\n        </div>\n        <div class=\"filter-item\">\n          <span class=\"label\">客户名称：</span>\n          <el-input v-model=\"filterForm.customerName\" placeholder=\"请输入客户名称\" style=\"width: 180px\" clearable />\n        </div>\n        <div class=\"filter-item\">\n          <span class=\"label\">生产状态：</span>\n          <el-select v-model=\"filterForm.status\" placeholder=\"请选择\" style=\"width: 180px\" clearable>\n            <el-option\n              v-for=\"item in statusOptions\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            />\n          </el-select>\n        </div>\n        <div class=\"filter-item\">\n          <span class=\"label\">日期范围：</span>\n          <el-date-picker\n            v-model=\"dateRange\"\n            type=\"daterange\"\n            align=\"right\"\n            unlink-panels\n            range-separator=\"至\"\n            start-placeholder=\"开始日期\"\n            end-placeholder=\"结束日期\"\n            style=\"width: 300px\"\n            value-format=\"yyyy-MM-dd\"\n          />\n        </div>\n        <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">查询</el-button>\n        <el-button icon=\"el-icon-refresh\" @click=\"resetFilter\">重置</el-button>\n      </div>\n    </el-card>\n\n    <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\n      <el-col :span=\"24\">\n        <el-card shadow=\"hover\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>生产进度概览</span>\n          </div>\n          <el-row :gutter=\"20\">\n            <el-col :span=\"6\">\n              <div class=\"status-card waiting\">\n                <div class=\"card-icon\"><i class=\"el-icon-time\"></i></div>\n                <div class=\"card-content\">\n                  <div class=\"card-title\">待生产</div>\n                  <div class=\"card-value\">{{ summaryData.waiting }}</div>\n                </div>\n              </div>\n            </el-col>\n            <el-col :span=\"6\">\n              <div class=\"status-card processing\">\n                <div class=\"card-icon\"><i class=\"el-icon-goods\"></i></div>\n                <div class=\"card-content\">\n                  <div class=\"card-title\">生产中</div>\n                  <div class=\"card-value\">{{ summaryData.processing }}</div>\n                </div>\n              </div>\n            </el-col>\n            <el-col :span=\"6\">\n              <div class=\"status-card shipped\">\n                <div class=\"card-icon\"><i class=\"el-icon-truck\"></i></div>\n                <div class=\"card-content\">\n                  <div class=\"card-title\">已发货</div>\n                  <div class=\"card-value\">{{ summaryData.shipped }}</div>\n                </div>\n              </div>\n            </el-col>\n            <el-col :span=\"6\">\n              <div class=\"status-card completed\">\n                <div class=\"card-icon\"><i class=\"el-icon-circle-check\"></i></div>\n                <div class=\"card-content\">\n                  <div class=\"card-title\">已完成</div>\n                  <div class=\"card-value\">{{ summaryData.completed }}</div>\n                </div>\n              </div>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <el-card style=\"margin-top: 20px;\">\n      <div slot=\"header\">\n        <span>生产订单列表</span>\n      </div>\n      <el-table\n        v-loading=\"tableLoading\"\n        :data=\"tableData\"\n        border\n        style=\"width: 100%\"\n      >\n        <el-table-column prop=\"orderNo\" label=\"订单编号\" width=\"150\" />\n        <el-table-column prop=\"customerName\" label=\"客户名称\" width=\"180\" />\n        <el-table-column prop=\"productName\" label=\"主要产品\" width=\"180\" />\n        <el-table-column label=\"生产状态\" width=\"120\">\n          <template slot-scope=\"scope\">\n            <el-tag :type=\"getStatusType(scope.row.status)\">{{ getStatusName(scope.row.status) }}</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"生产进度\" width=\"280\">\n          <template slot-scope=\"scope\">\n            <el-progress \n              :percentage=\"scope.row.progress || 0\" \n              :status=\"getProgressStatus(scope.row.progress || 0)\" \n              :format=\"percentageFormat\"\n            />\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"startTime\" label=\"开始时间\" width=\"160\">\n          <template slot-scope=\"scope\">\n            {{ scope.row.startTime ? formatDateTime(scope.row.startTime) : '-' }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"estimatedEndTime\" label=\"预计完成时间\" width=\"160\">\n          <template slot-scope=\"scope\">\n            {{ scope.row.estimatedEndTime ? formatDateTime(scope.row.estimatedEndTime) : '-' }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"150\" fixed=\"right\">\n          <template slot-scope=\"scope\">\n            <el-button type=\"text\" @click=\"handleDetail(scope.row)\">详情</el-button>\n            <el-button \n              v-if=\"scope.row.status === 1 || scope.row.status === 2\" \n              type=\"text\" \n              @click=\"handleUpdateProgress(scope.row)\"\n            >更新进度</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <div class=\"pagination-container\">\n        <el-pagination\n          background\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"filterForm.pageNum\"\n          :page-sizes=\"[10, 20, 30, 50]\"\n          :page-size=\"filterForm.pageSize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"total\"\n        />\n      </div>\n    </el-card>\n\n    <!-- 进度更新对话框 -->\n    <el-dialog title=\"更新生产进度\" :visible.sync=\"progressDialogVisible\" width=\"500px\">\n      <el-form :model=\"progressForm\" ref=\"progressForm\" label-width=\"100px\">\n        <el-form-item label=\"订单编号\">\n          <span>{{ progressForm.orderNo }}</span>\n        </el-form-item>\n        <el-form-item label=\"产品名称\">\n          <span>{{ progressForm.productName }}</span>\n        </el-form-item>\n        <el-form-item label=\"当前进度\">\n          <el-progress \n            :percentage=\"progressForm.progress\" \n            :status=\"getProgressStatus(progressForm.progress)\" \n            :format=\"percentageFormat\"\n          />\n        </el-form-item>\n        <el-form-item label=\"新进度值\" prop=\"newProgress\">\n          <el-slider\n            v-model=\"progressForm.newProgress\"\n            :min=\"progressForm.progress\"\n            :max=\"100\"\n            :step=\"5\"\n            show-input\n          />\n        </el-form-item>\n        <el-form-item label=\"进度说明\" prop=\"description\">\n          <el-input type=\"textarea\" v-model=\"progressForm.description\" rows=\"3\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"progressDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"submitProgress\" :loading=\"submitLoading\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n// import { getProductionList, getProductionSummary, updateProgress } from '@/api/productionTracking'\nimport moment from 'moment'\n\nexport default {\n  name: 'ProductionTracking',\n  data() {\n    return {\n      // 筛选表单\n      filterForm: {\n        orderNo: '',\n        customerName: '',\n        status: '',\n        startDate: '',\n        endDate: '',\n        pageNum: 1,\n        pageSize: 10\n      },\n      dateRange: [],\n      statusOptions: [\n        { value: 0, label: '待生产' },\n        { value: 1, label: '生产准备中' },\n        { value: 2, label: '生产中' },\n        { value: 3, label: '已发货' },\n        { value: 4, label: '已完成' }\n      ],\n      // 表格数据\n      tableData: [],\n      tableLoading: false,\n      total: 0,\n      // 统计数据\n      summaryData: {\n        waiting: 0,\n        processing: 0,\n        shipped: 0,\n        completed: 0\n      },\n      // 进度更新表单\n      progressDialogVisible: false,\n      progressForm: {\n        id: null,\n        orderNo: '',\n        productName: '',\n        progress: 0,\n        newProgress: 0,\n        description: ''\n      },\n      submitLoading: false,\n      // 模拟数据\n      mockData: {\n        orders: [\n          {\n            id: 1,\n            orderNo: 'ORD20240301001',\n            customerName: '上海科技有限公司',\n            productName: '高精度传感器',\n            status: 0,\n            progress: 0,\n            startTime: '2024-03-01 09:00:00',\n            estimatedEndTime: '2024-03-10 18:00:00',\n            description: '待生产'\n          },\n          {\n            id: 2,\n            orderNo: 'ORD20240301002',\n            customerName: '北京智能科技公司',\n            productName: '工业控制器',\n            status: 1,\n            progress: 20,\n            startTime: '2024-03-01 10:30:00',\n            estimatedEndTime: '2024-03-12 18:00:00',\n            description: '生产准备中'\n          },\n          {\n            id: 3,\n            orderNo: 'ORD20240301003',\n            customerName: '广州电子有限公司',\n            productName: '电路板组件',\n            status: 2,\n            progress: 60,\n            startTime: '2024-03-01 11:00:00',\n            estimatedEndTime: '2024-03-08 18:00:00',\n            description: '生产中'\n          },\n          {\n            id: 4,\n            orderNo: 'ORD20240301004',\n            customerName: '深圳创新科技',\n            productName: '智能终端',\n            status: 3,\n            progress: 100,\n            startTime: '2024-03-01 13:00:00',\n            estimatedEndTime: '2024-03-05 18:00:00',\n            description: '已发货'\n          },\n          {\n            id: 5,\n            orderNo: 'ORD20240301005',\n            customerName: '杭州软件科技',\n            productName: '工业机器人',\n            status: 4,\n            progress: 100,\n            startTime: '2024-03-01 14:00:00',\n            estimatedEndTime: '2024-03-03 18:00:00',\n            description: '已完成'\n          }\n        ],\n        summary: {\n          waiting: 10,\n          processing: 15,\n          shipped: 8,\n          completed: 12\n        }\n      }\n    }\n  },\n  watch: {\n    dateRange(val) {\n      if (val && val.length === 2) {\n        this.filterForm.startDate = val[0]\n        this.filterForm.endDate = val[1]\n      } else {\n        this.filterForm.startDate = ''\n        this.filterForm.endDate = ''\n      }\n    }\n  },\n  created() {\n    this.fetchData()\n  },\n  methods: {\n    // 替换API调用方法\n    async fetchData() {\n      this.tableLoading = true\n      try {\n        // 模拟API延迟\n        await new Promise(resolve => setTimeout(resolve, 500))\n        \n        // 过滤数据\n        let filteredData = this.mockData.orders.filter(order => {\n          if (this.filterForm.orderNo && !order.orderNo.includes(this.filterForm.orderNo)) return false\n          if (this.filterForm.customerName && !order.customerName.includes(this.filterForm.customerName)) return false\n          if (this.filterForm.status !== '' && order.status !== this.filterForm.status) return false\n          if (this.filterForm.startDate && moment(order.startTime).isBefore(this.filterForm.startDate)) return false\n          if (this.filterForm.endDate && moment(order.startTime).isAfter(this.filterForm.endDate)) return false\n          return true\n        })\n\n        // 分页\n        const start = (this.filterForm.pageNum - 1) * this.filterForm.pageSize\n        const end = start + this.filterForm.pageSize\n        \n        this.tableData = filteredData.slice(start, end)\n        this.total = filteredData.length\n        this.summaryData = this.mockData.summary\n      } catch (error) {\n        console.error('获取数据失败:', error)\n        this.$message.error('获取数据失败')\n      } finally {\n        this.tableLoading = false\n      }\n    },\n    // 查询\n    handleFilter() {\n      this.filterForm.pageNum = 1\n      this.fetchData()\n    },\n    // 重置筛选条件\n    resetFilter() {\n      this.filterForm = {\n        orderNo: '',\n        customerName: '',\n        status: '',\n        startDate: '',\n        endDate: '',\n        pageNum: 1,\n        pageSize: 10\n      }\n      this.dateRange = []\n      this.fetchData()\n    },\n    // 更改每页显示条数\n    handleSizeChange(val) {\n      this.filterForm.pageSize = val\n      this.fetchData()\n    },\n    // 更改页码\n    handleCurrentChange(val) {\n      this.filterForm.pageNum = val\n      this.fetchData()\n    },\n    // 获取状态类型\n    getStatusType(status) {\n      const typeMap = {\n        0: 'info',\n        1: 'warning',\n        2: 'primary',\n        3: 'success',\n        4: 'success'\n      }\n      return typeMap[status] || 'info'\n    },\n    // 获取状态名称\n    getStatusName(status) {\n      const nameMap = {\n        0: '待生产',\n        1: '生产准备中',\n        2: '生产中',\n        3: '已发货',\n        4: '已完成'\n      }\n      return nameMap[status] || '未知'\n    },\n    // 获取进度条状态\n    getProgressStatus(progress) {\n      if (progress === 100) {\n        return 'success'\n      } else if (progress >= 80) {\n        return 'warning'\n      } else {\n        return undefined\n      }\n    },\n    // 添加日期格式化方法\n    formatDateTime(date) {\n      return moment(date).format('YYYY-MM-DD HH:mm')\n    },\n    // 修改进度格式化方法\n    percentageFormat(percentage) {\n      return (percentage || 0) + '%'\n    },\n    // 查看详情\n    handleDetail(row) {\n      this.$router.push({\n        name: 'OrderDetail',\n        params: { id: row.id }\n      })\n    },\n    // 更新进度\n    handleUpdateProgress(row) {\n      this.progressForm = {\n        id: row.id,\n        orderNo: row.orderNo,\n        productName: row.productName,\n        progress: row.progress,\n        newProgress: row.progress,\n        description: ''\n      }\n      this.progressDialogVisible = true\n    },\n    // 提交进度更新\n    async submitProgress() {\n      this.submitLoading = true\n      try {\n        // 模拟API延迟\n        await new Promise(resolve => setTimeout(resolve, 500))\n        \n        // 更新模拟数据\n        const order = this.mockData.orders.find(o => o.id === this.progressForm.id)\n        if (order) {\n          order.progress = this.progressForm.newProgress\n          order.description = this.progressForm.description\n          \n          // 根据进度更新状态\n          if (order.progress === 100) {\n            order.status = 3 // 已发货\n          } else if (order.progress >= 1) {\n            order.status = 2 // 生产中\n          }\n        }\n        \n        this.$message.success('进度更新成功')\n        this.progressDialogVisible = false\n        this.fetchData()\n      } catch (error) {\n        console.error('更新进度失败:', error)\n        this.$message.error('更新进度失败')\n      } finally {\n        this.submitLoading = false\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.filter-container {\n  margin-bottom: 20px;\n}\n.filter-item-container {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n}\n.filter-item {\n  margin-right: 15px;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n}\n.filter-item .label {\n  margin-right: 5px;\n}\n.pagination-container {\n  margin-top: 20px;\n  text-align: right;\n}\n.status-card {\n  height: 100px;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  padding: 20px;\n  color: #fff;\n}\n.status-card.waiting {\n  background: #909399;\n}\n.status-card.processing {\n  background: #E6A23C;\n}\n.status-card.shipped {\n  background: #409EFF;\n}\n.status-card.completed {\n  background: #67C23A;\n}\n.card-icon {\n  font-size: 40px;\n  margin-right: 20px;\n}\n.card-content {\n  flex: 1;\n}\n.card-title {\n  font-size: 16px;\n  margin-bottom: 10px;\n}\n.card-value {\n  font-size: 28px;\n  font-weight: bold;\n}\n</style> "]}]}