{"remainingRequest":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bx/logistics-design/frontend/src/views/order/forecast.vue?vue&type=style&index=0&id=7f3ee236&scoped=true&lang=css","dependencies":[{"path":"/Users/bx/logistics-design/frontend/src/views/order/forecast.vue","mtime":1747186326009},{"path":"/Users/bx/logistics-design/frontend/node_modules/css-loader/dist/cjs.js","mtime":1747185535288},{"path":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1747185534140},{"path":"/Users/bx/logistics-design/frontend/node_modules/postcss-loader/src/index.js","mtime":1747185535100},{"path":"/Users/bx/logistics-design/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1747185535160},{"path":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/index.js","mtime":1747185534034}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5maWx0ZXItY29udGFpbmVyIHsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9Ci5maWx0ZXItaXRlbS1jb250YWluZXIgewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC13cmFwOiB3cmFwOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KLmZpbHRlci1pdGVtIHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgbWFyZ2luLXJpZ2h0OiAzMHB4OwogIG1hcmdpbi1ib3R0b206IDEwcHg7Cn0KLmxhYmVsIHsKICBtYXJnaW4tcmlnaHQ6IDEwcHg7Cn0KLmNoYXJ0LWNvbnRhaW5lciB7CiAgbWFyZ2luLXRvcDogMjBweDsKfQo="},{"version":3,"sources":["forecast.vue"],"names":[],"mappings":";AA6SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"forecast.vue","sourceRoot":"src/views/order","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-card class=\"filter-container\">\n      <div slot=\"header\">\n        <span>销量预测</span>\n      </div>\n      <div class=\"filter-item-container\">\n        <div class=\"filter-item\">\n          <span class=\"label\">产品类别：</span>\n          <el-select v-model=\"filterForm.category\" placeholder=\"请选择\" style=\"width: 180px\">\n            <el-option v-for=\"item in categoryOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\n          </el-select>\n        </div>\n        <div class=\"filter-item\">\n          <span class=\"label\">预测周期：</span>\n          <el-select v-model=\"filterForm.period\" placeholder=\"请选择\" style=\"width: 180px\">\n            <el-option v-for=\"item in periodOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\n          </el-select>\n        </div>\n        <div class=\"filter-item\">\n          <span class=\"label\">预测算法：</span>\n          <el-select v-model=\"filterForm.algorithm\" placeholder=\"请选择\" style=\"width: 180px\">\n            <el-option v-for=\"item in algorithmOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\n          </el-select>\n        </div>\n        <el-button type=\"primary\" icon=\"el-icon-refresh\" @click=\"handleForecast\">生成预测</el-button>\n      </div>\n    </el-card>\n\n    <div class=\"chart-container\">\n      <el-row :gutter=\"20\">\n        <el-col :span=\"24\">\n          <el-card shadow=\"hover\">\n            <div slot=\"header\">\n              <span>销量预测图表</span>\n              <el-radio-group v-model=\"chartType\" size=\"mini\" style=\"float: right;\">\n                <el-radio-button label=\"line\">折线图</el-radio-button>\n                <el-radio-button label=\"bar\">柱状图</el-radio-button>\n              </el-radio-group>\n            </div>\n            <div ref=\"forecastChart\" style=\"height: 400px;\"></div>\n          </el-card>\n        </el-col>\n      </el-row>\n\n      <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\n        <el-col :span=\"12\">\n          <el-card shadow=\"hover\">\n            <div slot=\"header\">\n              <span>产品预测排行</span>\n            </div>\n            <el-table :data=\"topProductsList\" border style=\"width: 100%\">\n              <el-table-column prop=\"rank\" label=\"排名\" width=\"80\" align=\"center\" />\n              <el-table-column prop=\"productName\" label=\"产品名称\" align=\"center\" />\n              <el-table-column prop=\"forecast\" label=\"预测销量\" align=\"center\" />\n              <el-table-column prop=\"growth\" label=\"增长率\" align=\"center\">\n                <template slot-scope=\"scope\">\n                  <span :style=\"{ color: scope.row.growth >= 0 ? '#67C23A' : '#F56C6C' }\">\n                    {{ scope.row.growth >= 0 ? '+' : '' }}{{ scope.row.growth }}%\n                  </span>\n                </template>\n              </el-table-column>\n            </el-table>\n          </el-card>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-card shadow=\"hover\">\n            <div slot=\"header\">\n              <span>预测准确率分析</span>\n            </div>\n            <div ref=\"accuracyChart\" style=\"height: 300px;\"></div>\n          </el-card>\n        </el-col>\n      </el-row>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\n\nexport default {\n  name: 'OrderForecast',\n  data() {\n    return {\n      filterForm: {\n        category: 'all',\n        period: 'month',\n        algorithm: 'arima'\n      },\n      categoryOptions: [\n        { label: '全部产品', value: 'all' },\n        { label: '电子产品', value: 'electronics' },\n        { label: '家用电器', value: 'appliances' },\n        { label: '办公用品', value: 'office' }\n      ],\n      periodOptions: [\n        { label: '未来一周', value: 'week' },\n        { label: '未来一个月', value: 'month' },\n        { label: '未来一个季度', value: 'quarter' },\n        { label: '未来一年', value: 'year' }\n      ],\n      algorithmOptions: [\n        { label: 'ARIMA模型', value: 'arima' },\n        { label: '指数平滑法', value: 'exponential' },\n        { label: '季节性分解', value: 'seasonal' },\n        { label: '神经网络', value: 'neural' }\n      ],\n      chartType: 'line',\n      topProductsList: [\n        { rank: 1, productName: '智能手机A', forecast: 1250, growth: 15.3 },\n        { rank: 2, productName: '笔记本电脑B', forecast: 860, growth: 8.2 },\n        { rank: 3, productName: '平板电脑C', forecast: 720, growth: 5.7 },\n        { rank: 4, productName: '智能手表D', forecast: 580, growth: 12.1 },\n        { rank: 5, productName: '智能音箱E', forecast: 450, growth: 9.5 },\n        { rank: 6, productName: '耳机F', forecast: 390, growth: -2.8 },\n        { rank: 7, productName: '显示器G', forecast: 320, growth: 1.5 },\n        { rank: 8, productName: '键盘H', forecast: 280, growth: -1.2 }\n      ],\n      charts: {\n        forecastChart: null,\n        accuracyChart: null\n      }\n    }\n  },\n  mounted() {\n    this.initCharts()\n    window.addEventListener('resize', this.resizeCharts)\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.resizeCharts)\n    this.destroyCharts()\n  },\n  methods: {\n    initCharts() {\n      // 初始化销量预测图表\n      this.charts.forecastChart = echarts.init(this.$refs.forecastChart)\n      this.updateForecastChart()\n\n      // 初始化准确率分析图表\n      this.charts.accuracyChart = echarts.init(this.$refs.accuracyChart)\n      this.charts.accuracyChart.setOption({\n        title: {\n          text: '历史预测准确率',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          data: ['非常准确', '较为准确', '一般准确', '较不准确']\n        },\n        series: [\n          {\n            name: '预测准确率',\n            type: 'pie',\n            radius: '60%',\n            center: ['50%', '50%'],\n            data: [\n              { value: 42, name: '非常准确' },\n              { value: 35, name: '较为准确' },\n              { value: 18, name: '一般准确' },\n              { value: 5, name: '较不准确' }\n            ],\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }\n        ]\n      })\n    },\n    updateForecastChart() {\n      const dates = []\n      const historicalData = []\n      const forecastData = []\n      \n      // 根据选择的周期生成日期数据\n      const now = new Date()\n      let dateFormat = 'MM-dd'\n      let days = 7\n      \n      if (this.filterForm.period === 'week') {\n        days = 7\n        dateFormat = 'MM-dd'\n      } else if (this.filterForm.period === 'month') {\n        days = 30\n        dateFormat = 'MM-dd'\n      } else if (this.filterForm.period === 'quarter') {\n        days = 90\n        dateFormat = 'MM-dd'\n      } else if (this.filterForm.period === 'year') {\n        days = 12\n        dateFormat = 'yyyy-MM'\n      }\n      \n      // 生成历史数据\n      for (let i = 30; i > 0; i--) {\n        const date = new Date(now.getTime() - i * 24 * 60 * 60 * 1000)\n        historicalData.push(Math.floor(Math.random() * 500 + 500))\n        if (i <= days) {\n          dates.push(this.formatDate(date, dateFormat))\n        }\n      }\n      \n      // 生成预测数据\n      for (let i = 1; i <= days; i++) {\n        const date = new Date(now.getTime() + i * 24 * 60 * 60 * 1000)\n        dates.push(this.formatDate(date, dateFormat))\n        forecastData.push(Math.floor(Math.random() * 200 + 600))\n      }\n      \n      // 设置图表选项\n      const option = {\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['历史销量', '预测销量']\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: dates\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [\n          {\n            name: '历史销量',\n            type: this.chartType,\n            data: historicalData.slice(-days),\n            itemStyle: {\n              color: '#409EFF'\n            }\n          },\n          {\n            name: '预测销量',\n            type: this.chartType,\n            data: forecastData,\n            itemStyle: {\n              color: '#67C23A'\n            }\n          }\n        ]\n      }\n      \n      this.charts.forecastChart.setOption(option)\n    },\n    formatDate(date, format) {\n      const year = date.getFullYear()\n      const month = date.getMonth() + 1\n      const day = date.getDate()\n      \n      if (format === 'yyyy-MM') {\n        return `${year}-${month < 10 ? '0' + month : month}`\n      }\n      \n      return `${month < 10 ? '0' + month : month}-${day < 10 ? '0' + day : day}`\n    },\n    handleForecast() {\n      this.updateForecastChart()\n      this.$message.success('预测数据已更新')\n    },\n    resizeCharts() {\n      for (const key in this.charts) {\n        if (this.charts[key]) {\n          this.charts[key].resize()\n        }\n      }\n    },\n    destroyCharts() {\n      for (const key in this.charts) {\n        if (this.charts[key]) {\n          this.charts[key].dispose()\n          this.charts[key] = null\n        }\n      }\n    }\n  },\n  watch: {\n    chartType() {\n      this.updateForecastChart()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.filter-container {\n  margin-bottom: 20px;\n}\n.filter-item-container {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n}\n.filter-item {\n  display: flex;\n  align-items: center;\n  margin-right: 30px;\n  margin-bottom: 10px;\n}\n.label {\n  margin-right: 10px;\n}\n.chart-container {\n  margin-top: 20px;\n}\n</style> "]}]}