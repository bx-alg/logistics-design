{"remainingRequest":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bx/logistics-design/frontend/src/views/inventory/analysis.vue?vue&type=style&index=0&id=0606d649&scoped=true&lang=css","dependencies":[{"path":"/Users/bx/logistics-design/frontend/src/views/inventory/analysis.vue","mtime":1748583981599},{"path":"/Users/bx/logistics-design/frontend/node_modules/css-loader/dist/cjs.js","mtime":1747185535288},{"path":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1747185534140},{"path":"/Users/bx/logistics-design/frontend/node_modules/postcss-loader/src/index.js","mtime":1747185535100},{"path":"/Users/bx/logistics-design/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1747185535160},{"path":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/index.js","mtime":1747185534034}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5maWx0ZXItY29udGFpbmVyIHsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9Ci5maWx0ZXItaXRlbS1jb250YWluZXIgewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC13cmFwOiB3cmFwOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KLmZpbHRlci1pdGVtIHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgbWFyZ2luLXJpZ2h0OiAzMHB4OwogIG1hcmdpbi1ib3R0b206IDEwcHg7Cn0KLmxhYmVsIHsKICBtYXJnaW4tcmlnaHQ6IDEwcHg7Cn0KLmNoYXJ0LWNvbnRhaW5lciB7CiAgbWFyZ2luLXRvcDogMjBweDsKfQo="},{"version":3,"sources":["analysis.vue"],"names":[],"mappings":";AA4cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"analysis.vue","sourceRoot":"src/views/inventory","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-card class=\"filter-container\">\n      <div slot=\"header\">\n        <span>库存分析</span>\n      </div>\n      <div class=\"filter-item-container\">\n        <div class=\"filter-item\">\n          <span class=\"label\">仓库：</span>\n          <el-select v-model=\"filterForm.warehouseId\" placeholder=\"请选择\" style=\"width: 180px\">\n            <el-option v-for=\"item in warehouseOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\n          </el-select>\n        </div>\n        <div class=\"filter-item\">\n          <span class=\"label\">商品类别：</span>\n          <el-select v-model=\"filterForm.category\" placeholder=\"请选择\" style=\"width: 180px\">\n            <el-option v-for=\"item in categoryOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\n          </el-select>\n        </div>\n        <div class=\"filter-item\">\n          <span class=\"label\">时间范围：</span>\n          <el-date-picker\n            v-model=\"dateRange\"\n            type=\"daterange\"\n            align=\"right\"\n            unlink-panels\n            range-separator=\"至\"\n            start-placeholder=\"开始日期\"\n            end-placeholder=\"结束日期\"\n            value-format=\"yyyy-MM-dd\"\n            style=\"width: 280px\"\n          />\n        </div>\n        <el-button type=\"primary\" icon=\"el-icon-refresh\" @click=\"refreshData\">刷新数据</el-button>\n      </div>\n    </el-card>\n\n    <div class=\"chart-container\">\n      <el-row :gutter=\"20\">\n        <el-col :span=\"12\">\n          <el-card shadow=\"hover\">\n            <div slot=\"header\">\n              <span>库存周转率分析</span>\n            </div>\n            <div ref=\"turnoverRateChart\" style=\"height: 350px;\"></div>\n          </el-card>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-card shadow=\"hover\">\n            <div slot=\"header\">\n              <span>库存结构分析</span>\n            </div>\n            <div ref=\"inventoryStructureChart\" style=\"height: 350px;\"></div>\n          </el-card>\n        </el-col>\n      </el-row>\n\n      <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\n        <el-col :span=\"24\">\n          <el-card shadow=\"hover\">\n            <div slot=\"header\">\n              <span>库存变动趋势</span>\n              <el-radio-group v-model=\"trendTimeUnit\" size=\"mini\" style=\"float: right;\">\n                <el-radio-button label=\"day\">日</el-radio-button>\n                <el-radio-button label=\"month\">月</el-radio-button>\n                <el-radio-button label=\"quarter\">季</el-radio-button>\n              </el-radio-group>\n            </div>\n            <div ref=\"inventoryTrendChart\" style=\"height: 350px;\"></div>\n          </el-card>\n        </el-col>\n      </el-row>\n\n      <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\n        <el-col :span=\"12\">\n          <el-card shadow=\"hover\">\n            <div slot=\"header\">\n              <span>库存状态分布</span>\n            </div>\n            <div ref=\"inventoryStatusChart\" style=\"height: 350px;\"></div>\n          </el-card>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-card shadow=\"hover\">\n            <div slot=\"header\">\n              <span>滞销商品排行</span>\n            </div>\n            <el-table :data=\"slowMovingList\" border style=\"width: 100%\">\n              <el-table-column prop=\"rank\" label=\"排名\" width=\"80\" align=\"center\" />\n              <el-table-column prop=\"productName\" label=\"商品名称\" align=\"center\" />\n              <el-table-column prop=\"days\" label=\"滞销天数\" align=\"center\" />\n              <el-table-column prop=\"quantity\" label=\"库存数量\" align=\"center\" />\n              <el-table-column prop=\"value\" label=\"库存金额\" align=\"center\">\n                <template slot-scope=\"scope\">\n                  ¥ {{ scope.row.value }}\n                </template>\n              </el-table-column>\n            </el-table>\n          </el-card>\n        </el-col>\n      </el-row>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\n\nexport default {\n  name: 'InventoryAnalysis',\n  data() {\n    return {\n      filterForm: {\n        warehouseId: 'all',\n        category: 'all'\n      },\n      dateRange: [\n        this.getDateBefore(30),\n        this.getCurrentDate()\n      ],\n      trendTimeUnit: 'day',\n      warehouseOptions: [\n        { label: '全部仓库', value: 'all' },\n        { label: '织里成品仓', value: 'finished' },\n        { label: '织里面料仓', value: 'raw' },\n        { label: '织里辅料仓', value: 'accessory' },\n        { label: '织里婴儿服仓', value: 'baby' },\n        { label: '织里出口仓', value: 'export' }\n      ],\n      categoryOptions: [\n        { label: '全部分类', value: 'all' },\n        { label: '上衣', value: 'tops' },\n        { label: '裤子', value: 'pants' },\n        { label: '裙装', value: 'dresses' },\n        { label: '套装', value: 'suits' },\n        { label: '婴儿装', value: 'baby' },\n        { label: '面料', value: 'fabric' },\n        { label: '辅料', value: 'accessories' }\n      ],\n      slowMovingList: [\n        { rank: 1, productName: '儿童冬季棉服', days: 120, quantity: 158, value: 23700 },\n        { rank: 2, productName: '儿童羽绒服', days: 95, quantity: 85, value: 25500 },\n        { rank: 3, productName: '儿童毛衣', days: 85, quantity: 142, value: 14200 },\n        { rank: 4, productName: '儿童秋裤', days: 80, quantity: 175, value: 8750 },\n        { rank: 5, productName: '儿童马甲', days: 76, quantity: 98, value: 7840 },\n        { rank: 6, productName: '儿童连帽外套', days: 72, quantity: 126, value: 15120 },\n        { rank: 7, productName: '儿童针织衫', days: 68, quantity: 156, value: 12480 }\n      ],\n      charts: {\n        turnoverRateChart: null,\n        inventoryStructureChart: null,\n        inventoryTrendChart: null,\n        inventoryStatusChart: null\n      }\n    }\n  },\n  mounted() {\n    this.initCharts()\n    window.addEventListener('resize', this.resizeCharts)\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.resizeCharts)\n    this.destroyCharts()\n  },\n  methods: {\n    getCurrentDate() {\n      const now = new Date()\n      const year = now.getFullYear()\n      const month = (now.getMonth() + 1).toString().padStart(2, '0')\n      const day = now.getDate().toString().padStart(2, '0')\n      return `${year}-${month}-${day}`\n    },\n    getDateBefore(days) {\n      const date = new Date()\n      date.setDate(date.getDate() - days)\n      const year = date.getFullYear()\n      const month = (date.getMonth() + 1).toString().padStart(2, '0')\n      const day = date.getDate().toString().padStart(2, '0')\n      return `${year}-${month}-${day}`\n    },\n    initCharts() {\n      // 初始化库存周转率图表\n      this.charts.turnoverRateChart = echarts.init(this.$refs.turnoverRateChart)\n      this.charts.turnoverRateChart.setOption({\n        title: {\n          text: '近12个月库存周转率',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          data: ['6月', '7月', '8月', '9月', '10月', '11月', '12月', '1月', '2月', '3月', '4月', '5月']\n        },\n        yAxis: {\n          type: 'value',\n          name: '周转率（次/月）'\n        },\n        series: [\n          {\n            name: '周转率',\n            type: 'bar',\n            data: [3.2, 3.5, 3.8, 4.1, 4.0, 3.9, 3.6, 3.5, 3.3, 3.8, 4.0, 4.2],\n            itemStyle: {\n              color: '#409EFF'\n            },\n            emphasis: {\n              itemStyle: {\n                color: '#66b1ff'\n              }\n            }\n          }\n        ]\n      })\n\n      // 初始化库存结构图表\n      this.charts.inventoryStructureChart = echarts.init(this.$refs.inventoryStructureChart)\n      this.charts.inventoryStructureChart.setOption({\n        title: {\n          text: '库存结构分布',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 10,\n          data: ['上衣', '裤子', '裙装', '套装', '婴儿装', '面料', '辅料']\n        },\n        series: [\n          {\n            name: '库存占比',\n            type: 'pie',\n            radius: ['50%', '70%'],\n            avoidLabelOverlap: false,\n            label: {\n              show: false,\n              position: 'center'\n            },\n            emphasis: {\n              label: {\n                show: true,\n                fontSize: '18',\n                fontWeight: 'bold'\n              }\n            },\n            labelLine: {\n              show: false\n            },\n            data: [\n              { value: 35, name: '上衣' },\n              { value: 25, name: '裤子' },\n              { value: 15, name: '裙装' },\n              { value: 10, name: '套装' },\n              { value: 8, name: '婴儿装' },\n              { value: 4, name: '面料' },\n              { value: 3, name: '辅料' }\n            ]\n          }\n        ]\n      })\n\n      // 初始化库存变动趋势图表\n      this.updateTrendChart()\n\n      // 初始化库存状态图表\n      this.charts.inventoryStatusChart = echarts.init(this.$refs.inventoryStatusChart)\n      this.charts.inventoryStatusChart.setOption({\n        title: {\n          text: '库存状态分布',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 10,\n          data: ['库存充足', '库存正常', '库存偏低', '库存紧缺', '库存超量']\n        },\n        series: [\n          {\n            name: '库存状态',\n            type: 'pie',\n            radius: '55%',\n            center: ['50%', '60%'],\n            data: [\n              { value: 35, name: '库存充足', itemStyle: { color: '#67C23A' } },\n              { value: 40, name: '库存正常', itemStyle: { color: '#409EFF' } },\n              { value: 15, name: '库存偏低', itemStyle: { color: '#E6A23C' } },\n              { value: 5, name: '库存紧缺', itemStyle: { color: '#F56C6C' } },\n              { value: 5, name: '库存超量', itemStyle: { color: '#909399' } }\n            ],\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }\n        ]\n      })\n    },\n    updateTrendChart() {\n      if (!this.$refs.inventoryTrendChart) return\n\n      if (!this.charts.inventoryTrendChart) {\n        this.charts.inventoryTrendChart = echarts.init(this.$refs.inventoryTrendChart)\n      }\n\n      let xAxisData = []\n      let inboundData = []\n      let outboundData = []\n      let stockData = []\n\n      // 根据时间单位生成不同的数据\n      if (this.trendTimeUnit === 'day') {\n        for (let i = 1; i <= 30; i++) {\n          xAxisData.push(`${i}日`)\n          inboundData.push(Math.floor(Math.random() * 100 + 50))\n          outboundData.push(Math.floor(Math.random() * 80 + 40))\n          stockData.push(5000 + Math.floor(Math.random() * 1000 - 500))\n        }\n      } else if (this.trendTimeUnit === 'month') {\n        xAxisData = ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']\n        inboundData = [1250, 1420, 1580, 1320, 1450, 1620, 1380, 1520, 1680, 1420, 1520, 1650]\n        outboundData = [1150, 1320, 1480, 1350, 1380, 1550, 1420, 1480, 1620, 1380, 1480, 1580]\n        stockData = [5200, 5300, 5400, 5370, 5440, 5510, 5470, 5510, 5570, 5610, 5650, 5720]\n      } else if (this.trendTimeUnit === 'quarter') {\n        xAxisData = ['Q1', 'Q2', 'Q3', 'Q4']\n        inboundData = [4250, 4390, 4580, 4790]\n        outboundData = [3950, 4250, 4480, 4650]\n        stockData = [5300, 5440, 5540, 5680]\n      }\n\n      this.charts.inventoryTrendChart.setOption({\n        title: {\n          text: '库存变动趋势',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            crossStyle: {\n              color: '#999'\n            }\n          }\n        },\n        toolbox: {\n          feature: {\n            dataView: { show: true, readOnly: false },\n            magicType: { show: true, type: ['line', 'bar'] },\n            restore: { show: true },\n            saveAsImage: { show: true }\n          }\n        },\n        legend: {\n          data: ['入库量', '出库量', '库存量'],\n          bottom: 10\n        },\n        xAxis: [\n          {\n            type: 'category',\n            data: xAxisData,\n            axisPointer: {\n              type: 'shadow'\n            }\n          }\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            name: '入/出库量',\n            min: 0,\n            axisLabel: {\n              formatter: '{value}'\n            }\n          },\n          {\n            type: 'value',\n            name: '库存量',\n            min: 0,\n            axisLabel: {\n              formatter: '{value}'\n            }\n          }\n        ],\n        series: [\n          {\n            name: '入库量',\n            type: 'bar',\n            data: inboundData,\n            itemStyle: {\n              color: '#409EFF'\n            }\n          },\n          {\n            name: '出库量',\n            type: 'bar',\n            data: outboundData,\n            itemStyle: {\n              color: '#67C23A'\n            }\n          },\n          {\n            name: '库存量',\n            type: 'line',\n            yAxisIndex: 1,\n            data: stockData,\n            itemStyle: {\n              color: '#E6A23C'\n            }\n          }\n        ]\n      })\n    },\n    refreshData() {\n      this.$message.success('数据已更新')\n      this.updateTrendChart()\n    },\n    resizeCharts() {\n      for (const key in this.charts) {\n        if (this.charts[key]) {\n          this.charts[key].resize()\n        }\n      }\n    },\n    destroyCharts() {\n      for (const key in this.charts) {\n        if (this.charts[key]) {\n          this.charts[key].dispose()\n          this.charts[key] = null\n        }\n      }\n    }\n  },\n  watch: {\n    trendTimeUnit() {\n      this.updateTrendChart()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.filter-container {\n  margin-bottom: 20px;\n}\n.filter-item-container {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n}\n.filter-item {\n  display: flex;\n  align-items: center;\n  margin-right: 30px;\n  margin-bottom: 10px;\n}\n.label {\n  margin-right: 10px;\n}\n.chart-container {\n  margin-top: 20px;\n}\n</style> "]}]}