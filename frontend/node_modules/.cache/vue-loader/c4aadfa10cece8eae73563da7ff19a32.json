{"remainingRequest":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bx/logistics-design/frontend/src/views/dashboard/bigScreen.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/bx/logistics-design/frontend/src/views/dashboard/bigScreen.vue","mtime":1748569609386},{"path":"/Users/bx/logistics-design/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1747185535160},{"path":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/index.js","mtime":1747185534034}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["bigScreen.vue"],"names":[],"mappings":";AAofile":"bigScreen.vue","sourceRoot":"src/views/dashboard","sourcesContent":["<template>\n  <div class=\"board-container\">\n    <div class=\"time-stamp\">{{ nowTime }}</div>\n    <div class=\"board-title\"><span>智慧物流平台 - 大屏展示</span></div>\n    <div class=\"board-content flex-between\">\n      <div class=\"content-left flex-column-between\">\n        <div class=\"content-overview\">\n          <div class=\"box-title\">库存总览</div>\n          <div class=\"box-content flex-between\">\n            <div class=\"overview-object flex-column-center\">\n              <div class=\"object-count\">5</div>\n              <div class=\"object-name\">仓库总数</div>\n            </div>\n            <div class=\"overview-meter flex-column-center\">\n              <div class=\"object-count\">981</div>\n              <div class=\"object-name\">库位总数</div>\n            </div>\n            <div class=\"overview-alarm flex-column-center\">\n              <div class=\"object-count\">4</div>\n              <div class=\"object-name\">异常库位</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"content-status\">\n          <div class=\"box-title\">监控设备状态</div>\n          <div class=\"box-content\">\n            <div id=\"deviceStatusChart\" style=\"height: 100%;\"></div>\n          </div>\n        </div>\n        <div class=\"content-alarm\">\n          <div class=\"box-title\">报警信息</div>\n          <div class=\"box-content\">\n            <div class=\"alarm-list\">\n              <div v-for=\"(item, index) in alarmList\" :key=\"index\" class=\"alarm-item\">\n                <div class=\"alarm-time\">{{ item.time }}</div>\n                <div class=\"alarm-content\">\n                  <span class=\"alarm-type\" :class=\"getTypeClass(item.type)\">{{ getTypeText(item.type) }}</span>\n                  <span class=\"alarm-message\">{{ item.message }}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"content-middle flex-column-between\">\n        <div class=\"content-map\" id=\"boardMap\"></div>\n        <div class=\"content-chart\">\n          <div class=\"box-title\">今日仓库耗能</div>\n          <div class=\"box-content\">\n            <el-tabs\n              v-model=\"activeName\"\n              @tab-click=\"handleClick\"\n              class=\"trend-tabs\"\n            >\n              <el-tab-pane label=\"综合能耗\" name=\"total\">\n                <div id=\"totalEnergyChart\" style=\"height: 100%;\"></div>\n              </el-tab-pane>\n              <el-tab-pane label=\"电\" name=\"electricity\">\n                <div id=\"electricityChart\" style=\"height: 100%;\"></div>\n              </el-tab-pane>\n              <el-tab-pane label=\"水\" name=\"water\">\n                <div id=\"waterChart\" style=\"height: 100%;\"></div>\n              </el-tab-pane>\n            </el-tabs>\n          </div>\n        </div>\n      </div>\n      <div class=\"content-right flex-column-between\">\n        <div class=\"content-statistics\">\n          <div class=\"box-title\">入库统计</div>\n          <div class=\"box-content flex-between\">\n            <div class=\"statistics-item flex-column-center\">\n              <div class=\"item-count\">58</div>\n              <div style=\"text-align: center\">待入库</div>\n            </div>\n            <div class=\"statistics-item flex-column-center\">\n              <div class=\"item-count\">10</div>\n              <div style=\"text-align: center\">待质检</div>\n            </div>\n            <div class=\"statistics-item flex-column-center\">\n              <div class=\"item-count\">5</div>\n              <div style=\"text-align: center\">待上架</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"content-statistics\">\n          <div class=\"box-title\">出库统计</div>\n          <div class=\"box-content flex-between\">\n            <div class=\"statistics-item flex-column-center\">\n              <div class=\"item-count\">15</div>\n              <div style=\"text-align: center\">待配货</div>\n            </div>\n            <div class=\"statistics-item flex-column-center\">\n              <div class=\"item-count\">10</div>\n              <div style=\"text-align: center\">待拣货</div>\n            </div>\n            <div class=\"statistics-item flex-column-center\">\n              <div class=\"item-count\">5</div>\n              <div style=\"text-align: center\">待出库</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"content-statistics\">\n          <div class=\"box-title\">其他</div>\n          <div class=\"box-content flex-between\">\n            <div class=\"statistics-item flex-column-center\">\n              <div class=\"item-count\">15</div>\n              <div style=\"text-align: center\">待截单</div>\n            </div>\n            <div class=\"statistics-item flex-column-center\">\n              <div class=\"item-count\">10</div>\n              <div style=\"text-align: center\">异常单</div>\n            </div>\n            <div class=\"statistics-item flex-column-center\">\n              <div class=\"item-count\">5</div>\n              <div style=\"text-align: center\">今日到货</div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"content-carbon\">\n          <div class=\"box-title\">今日出入库流水</div>\n          <div class=\"box-content\">\n            <div id=\"warehouseFlowChart\" style=\"height: 100%;\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\nimport moment from 'moment'\n\nexport default {\n  name: 'BigScreen',\n  data() {\n    return {\n      nowTime: '',\n      timer: null,\n      activeName: 'total',\n      alarmList: [\n        {\n          time: '09:15:23',\n          type: 'warning',\n          message: '仓库A-12区温度过高，请检查'\n        },\n        {\n          time: '08:45:11',\n          type: 'error',\n          message: '仓库B-05区湿度异常，需要立即处理'\n        },\n        {\n          time: '08:32:45',\n          type: 'info',\n          message: '系统检测到库存商品即将过期'\n        },\n        {\n          time: '07:55:37',\n          type: 'warning',\n          message: '仓库C-08区监控设备离线'\n        },\n        {\n          time: '07:20:09',\n          type: 'error',\n          message: '仓库A-03区发现异常入侵'\n        }\n      ],\n      xData: ['00:00', '02:00', '04:00', '06:00', '08:00', '10:00', '12:00', '14:00', '16:00', '18:00', '20:00', '22:00'],\n      electricityData: [79, 52, 200, 334, 390, 330, 34, 79, 52, 123, 334, 34],\n      waterData: [45, 62, 100, 234, 290, 230, 64, 89, 42, 103, 214, 44],\n      energyData: [89, 72, 150, 284, 340, 280, 54, 99, 62, 113, 254, 54],\n      warehouseFlowData: [\n        [79, 52, 200, 334, 390, 330, 34, 79, 52, 123, 334, 34],\n        [45, 62, 100, 234, 290, 230, 64, 89, 42, 103, 214, 44]\n      ],\n      pieData: [\n        { value: 40, name: \"正常\", itemStyle: {color: '#6be6c3'} },\n        { value: 38, name: \"报警\", itemStyle: {color: '#e0c464'} },\n        { value: 32, name: \"离线\", itemStyle: {color: '#297ef8'} }\n      ],\n      charts: {},\n      map: null\n    }\n  },\n  methods: {\n    getCurrentTime() {\n      this.nowTime = moment().format('YYYY-MM-DD HH:mm:ss')\n    },\n    getTypeClass(type) {\n      switch (type) {\n        case 'warning':\n          return 'warning-type'\n        case 'error':\n          return 'error-type'\n        case 'info':\n          return 'info-type'\n        default:\n          return ''\n      }\n    },\n    getTypeText(type) {\n      switch (type) {\n        case 'warning':\n          return '警告'\n        case 'error':\n          return '错误'\n        case 'info':\n          return '提示'\n        default:\n          return '未知'\n      }\n    },\n    handleClick(tab) {\n      this.$nextTick(() => {\n        this.initEnergyCharts()\n      })\n    },\n    initCharts() {\n      this.initDeviceStatusChart()\n      this.initEnergyCharts()\n      this.initWarehouseFlowChart()\n      this.initMap()\n      \n      // 监听窗口大小变化，重新渲染图表\n      window.addEventListener('resize', this.resizeCharts)\n    },\n    resizeCharts() {\n      Object.keys(this.charts).forEach(key => {\n        if (this.charts[key]) {\n          this.charts[key].resize()\n        }\n      })\n    },\n    initDeviceStatusChart() {\n      this.charts.deviceStatus = echarts.init(document.getElementById('deviceStatusChart'))\n      this.charts.deviceStatus.setOption({\n        tooltip: {\n          trigger: 'item',\n          formatter: '{b}: {c} ({d}%)'\n        },\n        legend: {\n          bottom: '0',\n          itemWidth: 10,\n          itemHeight: 10,\n          textStyle: {\n            color: '#fff',\n            fontSize: 12\n          }\n        },\n        series: [\n          {\n            name: '设备状态',\n            type: 'pie',\n            radius: ['40%', '70%'],\n            avoidLabelOverlap: false,\n            label: {\n              show: false\n            },\n            emphasis: {\n              label: {\n                show: true,\n                fontSize: 16,\n                fontWeight: 'bold'\n              }\n            },\n            labelLine: {\n              show: false\n            },\n            data: this.pieData\n          }\n        ]\n      })\n    },\n    initEnergyCharts() {\n      const commonOption = {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#6a7985'\n            }\n          }\n        },\n        grid: {\n          top: '5%',\n          left: '2%',\n          right: '2%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [\n          {\n            type: 'category',\n            boundaryGap: false,\n            data: this.xData,\n            axisLabel: {\n              color: '#fff'\n            },\n            axisLine: {\n              lineStyle: {\n                color: '#1be5e7'\n              }\n            },\n            splitLine: {\n              lineStyle: {\n                color: '#1d3666'\n              }\n            }\n          }\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            axisLabel: {\n              color: '#fff'\n            },\n            splitLine: {\n              lineStyle: {\n                color: '#1d3666'\n              }\n            }\n          }\n        ],\n        series: [\n          {\n            type: 'line',\n            stack: 'Total',\n            smooth: true,\n            lineStyle: {\n              width: 0\n            },\n            showSymbol: false,\n            areaStyle: {\n              opacity: 0.8,\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                {\n                  offset: 0,\n                  color: 'rgba(41, 105, 232, 0.8)'\n                },\n                {\n                  offset: 1,\n                  color: 'rgba(27, 229, 231, 0.3)'\n                }\n              ])\n            },\n            emphasis: {\n              focus: 'series'\n            }\n          }\n        ]\n      }\n      \n      if (this.activeName === 'total') {\n        if (!this.charts.totalEnergy) {\n          this.charts.totalEnergy = echarts.init(document.getElementById('totalEnergyChart'))\n        }\n        const option = JSON.parse(JSON.stringify(commonOption))\n        option.series[0].name = '综合能耗'\n        option.series[0].data = this.energyData\n        option.yAxis[0].name = 'kgce'\n        this.charts.totalEnergy.setOption(option)\n      } else if (this.activeName === 'electricity') {\n        if (!this.charts.electricity) {\n          this.charts.electricity = echarts.init(document.getElementById('electricityChart'))\n        }\n        const option = JSON.parse(JSON.stringify(commonOption))\n        option.series[0].name = '电力消耗'\n        option.series[0].data = this.electricityData\n        option.yAxis[0].name = 'kW·h'\n        this.charts.electricity.setOption(option)\n      } else if (this.activeName === 'water') {\n        if (!this.charts.water) {\n          this.charts.water = echarts.init(document.getElementById('waterChart'))\n        }\n        const option = JSON.parse(JSON.stringify(commonOption))\n        option.series[0].name = '水资源消耗'\n        option.series[0].data = this.waterData\n        option.yAxis[0].name = 't'\n        this.charts.water.setOption(option)\n      }\n    },\n    initWarehouseFlowChart() {\n      this.charts.warehouseFlow = echarts.init(document.getElementById('warehouseFlowChart'))\n      this.charts.warehouseFlow.setOption({\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        legend: {\n          data: ['入库', '出库'],\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        grid: {\n          top: '15%',\n          left: '2%',\n          right: '2%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          data: this.xData,\n          axisTick: {\n            alignWithLabel: true\n          },\n          axisLabel: {\n            color: '#fff'\n          },\n          axisLine: {\n            lineStyle: {\n              color: '#1be5e7'\n            }\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          name: '件',\n          axisLabel: {\n            color: '#fff'\n          },\n          nameTextStyle: {\n            color: '#fff'\n          },\n          splitLine: {\n            lineStyle: {\n              color: '#1d3666'\n            }\n          }\n        }],\n        series: [\n          {\n            name: '入库',\n            type: 'bar',\n            stack: 'total',\n            barWidth: '40%',\n            data: this.warehouseFlowData[0],\n            itemStyle: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                { offset: 1, color: '#1c508e' },\n                { offset: 0, color: '#1be5e7' }\n              ])\n            }\n          },\n          {\n            name: '出库',\n            type: 'bar',\n            stack: 'total',\n            barWidth: '40%',\n            data: this.warehouseFlowData[1],\n            itemStyle: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                { offset: 1, color: '#e0c464' },\n                { offset: 0, color: '#6be6c3' }\n              ])\n            }\n          }\n        ]\n      })\n    },\n    initMap() {\n      // 简化地图实现，避免加载百度地图可能导致的问题\n      const mapEl = document.getElementById('boardMap');\n      if (mapEl) {\n        // 添加一个简单的地图背景\n        mapEl.innerHTML = `\n          <div style=\"height: 100%; display: flex; align-items: center; justify-content: center; background: rgba(0,30,60,0.8); color: #00d1ff; font-size: 16px; text-align: center; padding: 20px;\">\n            <div>\n              <div style=\"margin-bottom: 20px;\">地图数据区域</div>\n              <div>仓库分布: 苏州工业园区、昆山、吴江、常熟</div>\n            </div>\n          </div>\n        `;\n      }\n    }\n  },\n  mounted() {\n    this.getCurrentTime()\n    this.timer = setInterval(() => {\n      this.getCurrentTime()\n    }, 1000)\n    \n    this.$nextTick(() => {\n      try {\n        this.initCharts()\n      } catch (e) {\n        console.error('初始化图表失败:', e)\n      }\n    })\n  },\n  beforeDestroy() {\n    if (this.timer) {\n      clearInterval(this.timer)\n    }\n    \n    // 移除窗口大小变化监听\n    window.removeEventListener('resize', this.resizeCharts)\n    \n    // 销毁图表实例\n    Object.keys(this.charts).forEach(key => {\n      if (this.charts[key]) {\n        this.charts[key].dispose()\n      }\n    })\n  }\n}\n</script>\n\n<style scoped>\n.board-container {\n  width: 100%;\n  height: 100vh;\n  background-image: url(\"../../assets/images/board-bg.png\");\n  background-size: 100% 100%;\n  color: #fff;\n  position: relative;\n}\n\n.time-stamp {\n  position: absolute;\n  right: 2.5%;\n  top: 5%;\n  color: #00d1ff;\n  font-size: 20px;\n}\n\n.board-title {\n  background-image: linear-gradient(to top, #2571e9, #00e7ff);\n  background-clip: text;\n  -webkit-background-clip: text;\n  color: transparent;\n  font-size: 40px;\n  font-weight: bold;\n  letter-spacing: 8px;\n  height: 9%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.board-content {\n  height: 86%;\n  width: 95%;\n  margin: 6px auto 0;\n}\n\n.flex-between {\n  display: flex;\n  justify-content: space-between;\n}\n\n.flex-column-between {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.flex-column-center {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.content-left {\n  width: calc(25% - 12px);\n  margin-right: 12px;\n}\n\n.content-middle {\n  width: 50%;\n  margin-right: 12px;\n}\n\n.content-right {\n  width: calc(25% - 12px);\n}\n\n.content-overview,\n.content-status,\n.content-alarm,\n.content-statistics,\n.content-trend,\n.content-carbon,\n.content-chart,\n.content-map {\n  background-image: url(\"../../assets/images/box-bg1.png\");\n  background-size: 100% 100%;\n}\n\n.content-overview {\n  height: 20%;\n  margin-bottom: 12px;\n  padding: 12px 16px;\n}\n\n.box-title {\n  height: 20px;\n  margin-left: 12px;\n  display: flex;\n  align-items: center;\n  color: #01d1ff;\n}\n\n.box-title::before {\n  content: \" \";\n  width: 6px;\n  height: 100%;\n  border-radius: 10px;\n  display: inline-block;\n  margin-right: 6px;\n  background: linear-gradient(to bottom, #00d1ff, #2869e8);\n}\n\n.box-content {\n  height: calc(100% - 20px);\n  overflow: hidden;\n  padding: 20px 10px;\n}\n\n.overview-object,\n.overview-meter,\n.overview-alarm {\n  width: calc(33% - 10px);\n  align-items: center;\n  text-align: center;\n}\n\n.object-count {\n  color: #1be5e7;\n  font-size: 35px;\n  font-weight: bold;\n  margin-bottom: 6px;\n}\n\n.object-name {\n  font-size: 12px;\n}\n\n.content-status {\n  height: calc(40% - 12px);\n  margin-bottom: 12px;\n  padding: 20px 16px;\n}\n\n.content-alarm {\n  height: calc(40% - 12px);\n  padding: 16px 16px;\n}\n\n.content-map {\n  height: 65%;\n  margin-bottom: 12px;\n}\n\n.content-chart {\n  height: calc(35% - 12px);\n  padding: 18px 30px;\n}\n\n.content-statistics {\n  height: 20%;\n  padding: 12px 16px;\n  margin-bottom: 12px;\n}\n\n.content-carbon {\n  height: calc(40% - 12px);\n  padding: 18px 16px;\n}\n\n.statistics-item {\n  width: calc(33% - 8px);\n  align-items: center;\n  font-size: 12px;\n}\n\n.item-count {\n  text-align: center;\n  font-size: 28px;\n  font-weight: bold;\n  color: #1be5e7;\n  margin: 6px 0 6px;\n}\n\n.alarm-list {\n  width: 100%;\n  height: 100%;\n  overflow-y: auto;\n}\n\n.alarm-item {\n  padding: 8px;\n  margin-bottom: 8px;\n  border-radius: 4px;\n  background: rgba(0, 228, 255, 0.05);\n  border: 1px solid rgba(0, 228, 255, 0.1);\n  transition: all 0.3s ease;\n}\n\n.alarm-item:hover {\n  background: rgba(0, 228, 255, 0.1);\n  border-color: rgba(0, 228, 255, 0.3);\n}\n\n.alarm-time {\n  color: #00e4ff;\n  font-size: 12px;\n  margin-bottom: 4px;\n}\n\n.alarm-content {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.alarm-type {\n  padding: 2px 6px;\n  border-radius: 2px;\n  font-size: 12px;\n}\n\n.warning-type {\n  background: rgba(255, 215, 0, 0.1);\n  color: #ffd700;\n  border: 1px solid rgba(255, 215, 0, 0.3);\n}\n\n.error-type {\n  background: rgba(255, 77, 79, 0.1);\n  color: #ff4d4f;\n  border: 1px solid rgba(255, 77, 79, 0.3);\n}\n\n.info-type {\n  background: rgba(0, 228, 255, 0.1);\n  color: #00e4ff;\n  border: 1px solid rgba(0, 228, 255, 0.3);\n}\n\n.alarm-message {\n  flex: 1;\n  font-size: 14px;\n}\n\n.trend-tabs {\n  height: 100%;\n}\n</style>\n\n<style>\n.trend-tabs,\n.trend-tabs .el-tabs__content .el-tab-pane {\n  height: 100%;\n}\n\n.trend-tabs .el-tabs__item {\n  color: #fff;\n}\n\n.trend-tabs .el-tabs__item:hover,\n.trend-tabs .el-tabs__item.is-active {\n  color: #00d0fe;\n}\n\n.trend-tabs .el-tabs__active-bar {\n  background-color: #00d0fe;\n}\n\n.trend-tabs .el-tabs__nav-wrap::after {\n  background-color: #1d3666;\n}\n\n.trend-tabs .el-tabs__content {\n  height: calc(100% - 55px);\n}\n\n/* 地图信息窗口样式修改 */\n#boardMap .BMap_bubble_pop {\n  background-color: rgba(28, 37, 80, 0.8) !important;\n  border: 1px solid #186dbf !important;\n}\n\n#boardMap .BMap_bubble_pop img {\n  display: none;\n}\n\n#boardMap .BMap_bubble_pop .BMap_bubble_top .BMap_bubble_title,\n#boardMap .BMap_bubble_pop .BMap_bubble_center .BMap_bubble_content {\n  color: #fff !important;\n}\n</style>"]}]}