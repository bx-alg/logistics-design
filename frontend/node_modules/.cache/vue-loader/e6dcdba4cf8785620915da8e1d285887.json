{"remainingRequest":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bx/logistics-design/frontend/src/views/dashboard/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/bx/logistics-design/frontend/src/views/dashboard/index.vue","mtime":1748526942864},{"path":"/Users/bx/logistics-design/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1747185535160},{"path":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/index.js","mtime":1747185534034}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAqHA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/dashboard","sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <div class=\"dashboard-header\">\n      <div class=\"dashboard-title\">数据总览</div>\n    </div>\n    \n    <div class=\"card-row\">\n      <div class=\"data-card\">\n        <div class=\"card-header blue-header\">入库</div>\n        <div class=\"card-body\">\n          <div class=\"card-count\">33</div>\n          <div class=\"card-details\">\n            <div class=\"detail-item\"><span>待入库：</span><span>15</span></div>\n            <div class=\"detail-item\"><span>待质检：</span><span>15</span></div>\n            <div class=\"detail-item\"><span>待上架：</span><span>2</span></div>\n            <div class=\"detail-item\"><span>待完成：</span><span>1</span></div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"data-card\">\n        <div class=\"card-header yellow-header\">出库</div>\n        <div class=\"card-body\">\n          <div class=\"card-count\">20</div>\n          <div class=\"card-details\">\n            <div class=\"detail-item\"><span>待配货：</span><span>5</span></div>\n            <div class=\"detail-item\"><span>待波次：</span><span>5</span></div>\n            <div class=\"detail-item\"><span>待拣货：</span><span>5</span></div>\n            <div class=\"detail-item\"><span>待出库：</span><span>5</span></div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"data-card\">\n        <div class=\"card-header purple-header\">其他</div>\n        <div class=\"card-body\">\n          <div class=\"card-count\">15</div>\n          <div class=\"card-details\">\n            <div class=\"detail-item\"><span>待截单：</span><span>5</span></div>\n            <div class=\"detail-item\"><span>异常单：</span><span>5</span></div>\n            <div class=\"detail-item\"><span>今日到货：</span><span>5</span></div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"data-card\">\n        <div class=\"card-header red-header\">库存预警</div>\n        <div class=\"card-body\">\n          <div class=\"card-count\">5</div>\n          <div class=\"card-details\">\n            <div class=\"detail-item\"><span>松陵仓：</span><span>1</span></div>\n            <div class=\"detail-item\"><span>盛泽仓：</span><span>2</span></div>\n            <div class=\"detail-item\"><span>园区仓：</span><span>2</span></div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"chart-section\">\n      <div class=\"chart-item\">\n        <div class=\"chart-title\">\n          <i class=\"el-icon-pie-chart\"></i>\n          仓库货物占比\n        </div>\n        <div id=\"warehousePieChart\" class=\"chart\"></div>\n      </div>\n      \n      <div class=\"chart-item\">\n        <div class=\"chart-title\">\n          <i class=\"el-icon-data-line\"></i>\n          生产入库趋势\n        </div>\n        <div class=\"chart-tabs\">\n          <div class=\"tab active\">本月</div>\n          <div class=\"tab\">今年</div>\n        </div>\n        <div id=\"productionChart\" class=\"chart\"></div>\n      </div>\n    </div>\n    \n    <div class=\"chart-section small-charts\">\n      <div class=\"chart-item small-chart\">\n        <div class=\"chart-title\">\n          <i class=\"el-icon-shopping-cart-full\"></i>\n          近7日销售出库\n        </div>\n        <div id=\"salesChart\" class=\"chart\"></div>\n      </div>\n      \n      <div class=\"chart-item small-chart\">\n        <div class=\"chart-title\">\n          <i class=\"el-icon-box\"></i>\n          近7日领料出库\n        </div>\n        <div id=\"materialChart\" class=\"chart\"></div>\n      </div>\n      \n      <div class=\"chart-item small-chart\">\n        <div class=\"chart-title\">\n          <i class=\"el-icon-truck\"></i>\n          近7日移库\n        </div>\n        <div id=\"transferChart\" class=\"chart\"></div>\n      </div>\n      \n      <div class=\"chart-item small-chart\">\n        <div class=\"chart-title\">\n          <i class=\"el-icon-goods\"></i>\n          近7日退货入库\n        </div>\n        <div id=\"returnChart\" class=\"chart\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\n\nexport default {\n  name: 'Dashboard',\n  data() {\n    return {\n      charts: {}\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.initCharts()\n    })\n    \n    // 监听窗口大小变化，重新渲染图表\n    window.addEventListener('resize', this.resizeCharts)\n  },\n  methods: {\n    initCharts() {\n      this.initPieChart()\n      this.initProductionChart()\n      this.initSalesChart()\n      this.initMaterialChart()\n      this.initTransferChart()\n      this.initReturnChart()\n    },\n    resizeCharts() {\n      Object.keys(this.charts).forEach(key => {\n        if (this.charts[key]) {\n          this.charts[key].resize()\n        }\n      })\n    },\n    initPieChart() {\n      this.charts.pie = echarts.init(document.getElementById('warehousePieChart'))\n      this.charts.pie.setOption({\n        tooltip: {\n          trigger: 'item',\n          formatter: '{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'horizontal',\n          bottom: 0,\n          itemWidth: 12,\n          itemHeight: 12,\n          textStyle: {\n            color: '#606266',\n            fontSize: 12\n          }\n        },\n        series: [\n          {\n            name: '仓库货物',\n            type: 'pie',\n            radius: ['50%', '70%'],\n            avoidLabelOverlap: false,\n            itemStyle: {\n              borderRadius: 0,\n              borderColor: '#fff',\n              borderWidth: 2\n            },\n            label: {\n              show: false\n            },\n            emphasis: {\n              label: {\n                show: false\n              }\n            },\n            labelLine: {\n              show: false\n            },\n            data: [\n              { value: 59.0, name: '园区仓', itemStyle: { color: '#4668E8' } },\n              { value: 28.2, name: '盛泽仓', itemStyle: { color: '#56D48F' } },\n              { value: 12.8, name: '常熟仓', itemStyle: { color: '#FFCD40' } },\n              { value: 0.0, name: '吴江仓', itemStyle: { color: '#FF7773' } },\n              { value: 0.0, name: '南京仓', itemStyle: { color: '#37CAEF' } }\n            ]\n          }\n        ]\n      })\n    },\n    initProductionChart() {\n      this.charts.production = echarts.init(document.getElementById('productionChart'))\n      \n      const xAxisData = []\n      for (let i = 1; i <= 30; i++) {\n        xAxisData.push(`05-${i < 10 ? '0' + i : i}`)\n      }\n      \n      this.charts.production.setOption({\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [\n          {\n            type: 'category',\n            data: xAxisData,\n            axisTick: {\n              alignWithLabel: true,\n              show: false\n            },\n            axisLine: {\n              lineStyle: {\n                color: '#E4E7ED'\n              }\n            },\n            axisLabel: {\n              interval: 4,\n              color: '#606266'\n            }\n          }\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            splitLine: {\n              lineStyle: {\n                type: 'dashed',\n                color: '#E4E7ED'\n              }\n            },\n            axisLine: {\n              show: false\n            },\n            axisTick: {\n              show: false\n            },\n            axisLabel: {\n              color: '#606266'\n            }\n          }\n        ],\n        series: [\n          {\n            name: '入库量',\n            type: 'bar',\n            barWidth: '60%',\n            data: [24, 28, 29, 27, 25, 22, 18, 16, 24, 26, 28, 30, 15, 16, 24, 22, 28, 30, 15, 16, 18, 20, 24, 26, 28, 30, 18, 15, 26, 25],\n            itemStyle: {\n              color: '#4668E8'\n            }\n          },\n          {\n            name: '平均值',\n            type: 'line',\n            symbol: 'none',\n            lineStyle: {\n              type: 'dashed',\n              color: '#909399'\n            },\n            data: Array(30).fill(22.17)\n          }\n        ]\n      })\n    },\n    createAreaChart(chartId, title, color) {\n      const chart = echarts.init(document.getElementById(chartId))\n      \n      const xAxisData = ['05-23', '05-24', '05-25', '05-26', '05-27', '05-28', '05-29']\n      \n      // 生成随机数据\n      const generateRandomData = (min, max) => {\n        return Array.from({ length: 7 }, () => Math.floor(Math.random() * (max - min + 1)) + min)\n      }\n      \n      const data = generateRandomData(30, 180)\n      \n      chart.setOption({\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#909399'\n            }\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          top: '10%',\n          containLabel: true\n        },\n        xAxis: [\n          {\n            type: 'category',\n            boundaryGap: false,\n            data: xAxisData,\n            axisLine: {\n              lineStyle: {\n                color: '#E4E7ED'\n              }\n            },\n            axisTick: {\n              show: false\n            },\n            axisLabel: {\n              color: '#606266'\n            }\n          }\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            axisLabel: {\n              formatter: '{value} 件',\n              color: '#606266'\n            },\n            axisLine: {\n              show: false\n            },\n            axisTick: {\n              show: false\n            },\n            splitLine: {\n              lineStyle: {\n                type: 'dashed',\n                color: '#E4E7ED'\n              }\n            }\n          }\n        ],\n        series: [\n          {\n            name: title,\n            type: 'line',\n            smooth: true,\n            lineStyle: {\n              width: 0\n            },\n            showSymbol: false,\n            areaStyle: {\n              opacity: 0.8,\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                { offset: 0, color: color[0] },\n                { offset: 1, color: color[1] }\n              ])\n            },\n            emphasis: {\n              focus: 'series'\n            },\n            data: data\n          }\n        ]\n      })\n      \n      return chart\n    },\n    initSalesChart() {\n      this.charts.sales = this.createAreaChart('salesChart', '销售出库', ['rgba(255, 119, 115, 0.8)', 'rgba(255, 119, 115, 0.1)'])\n    },\n    initMaterialChart() {\n      this.charts.material = this.createAreaChart('materialChart', '领料出库', ['rgba(70, 104, 232, 0.8)', 'rgba(70, 104, 232, 0.1)'])\n    },\n    initTransferChart() {\n      this.charts.transfer = this.createAreaChart('transferChart', '移库', ['rgba(169, 125, 245, 0.8)', 'rgba(169, 125, 245, 0.1)'])\n    },\n    initReturnChart() {\n      this.charts.return = this.createAreaChart('returnChart', '退货入库', ['rgba(255, 205, 64, 0.8)', 'rgba(255, 205, 64, 0.1)'])\n    }\n  },\n  beforeDestroy() {\n    // 移除窗口大小变化监听\n    window.removeEventListener('resize', this.resizeCharts)\n    \n    // 销毁图表实例\n    Object.keys(this.charts).forEach(key => {\n      if (this.charts[key]) {\n        this.charts[key].dispose()\n      }\n    })\n  }\n}\n</script>\n\n<style scoped>\n.dashboard-container {\n  padding: 20px;\n  background-color: #f5f7fa;\n  min-height: calc(100vh - 60px);\n}\n\n.dashboard-header {\n  margin-bottom: 20px;\n}\n\n.dashboard-title {\n  font-size: 18px;\n  font-weight: bold;\n  color: #303133;\n  position: relative;\n  padding-left: 10px;\n  line-height: 28px;\n  border-left: 4px solid #409EFF;\n}\n\n.card-row {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  flex-wrap: wrap;\n}\n\n.data-card {\n  width: 24%;\n  background-color: #fff;\n  border-radius: 4px;\n  box-shadow: 0 1px 4px rgba(0, 21, 41, 0.08);\n  overflow: hidden;\n  margin-bottom: 15px;\n}\n\n.card-header {\n  height: 50px;\n  line-height: 50px;\n  padding: 0 15px;\n  font-size: 16px;\n  font-weight: 500;\n  color: #fff;\n}\n\n.blue-header {\n  background-color: #48C5FB;\n}\n\n.yellow-header {\n  background-color: #FFCD40;\n}\n\n.purple-header {\n  background-color: #A97DF5;\n}\n\n.red-header {\n  background-color: #FF7773;\n}\n\n.card-body {\n  padding: 15px;\n}\n\n.card-count {\n  font-size: 36px;\n  font-weight: bold;\n  color: #303133;\n  margin-bottom: 10px;\n}\n\n.card-details {\n  padding-top: 5px;\n}\n\n.detail-item {\n  display: flex;\n  justify-content: space-between;\n  font-size: 14px;\n  color: #606266;\n  margin-bottom: 6px;\n}\n\n.chart-section {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  flex-wrap: wrap;\n}\n\n.chart-item {\n  background-color: #fff;\n  border-radius: 4px;\n  box-shadow: 0 1px 4px rgba(0, 21, 41, 0.08);\n  padding: 15px;\n  width: 49%;\n  margin-bottom: 15px;\n}\n\n.chart-title {\n  font-size: 16px;\n  font-weight: 500;\n  color: #303133;\n  display: flex;\n  align-items: center;\n  border-left: 4px solid #409EFF;\n  padding-left: 10px;\n  height: 20px;\n  line-height: 20px;\n  margin-bottom: 15px;\n}\n\n.chart-title i {\n  margin-right: 8px;\n  color: #4668E8;\n  font-size: 18px;\n}\n\n.chart {\n  height: 320px;\n}\n\n.chart-tabs {\n  display: flex;\n  margin-bottom: 15px;\n  margin-top: 15px;\n  justify-content: flex-end;\n}\n\n.tab {\n  padding: 5px 20px;\n  cursor: pointer;\n  color: #606266;\n  font-size: 14px;\n  background-color: #f5f7fa;\n  margin-right: 10px;\n  border-radius: 4px;\n}\n\n.tab.active {\n  color: #fff;\n  background-color: #409EFF;\n}\n\n.small-charts .chart-item {\n  width: 24%;\n}\n\n.small-charts .chart {\n  height: 200px;\n}\n\n@media screen and (max-width: 1366px) {\n  .data-card {\n    width: 49%;\n  }\n  \n  .chart-item {\n    width: 100%;\n  }\n  \n  .small-charts .chart-item {\n    width: 49%;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .data-card, .small-charts .chart-item {\n    width: 100%;\n  }\n}\n</style> "]}]}