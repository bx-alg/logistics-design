{"remainingRequest":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bx/logistics-design/frontend/src/views/shipment/tracking.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/bx/logistics-design/frontend/src/views/shipment/tracking.vue","mtime":1747554621175},{"path":"/Users/bx/logistics-design/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1747185535160},{"path":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/index.js","mtime":1747185534034}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["tracking.vue"],"names":[],"mappings":";AA8FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tracking.vue","sourceRoot":"src/views/shipment","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-card class=\"map-container\">\n      <div slot=\"header\">\n        <span>物流实时追踪</span>\n      </div>\n      <div class=\"search-bar\">\n        <el-input v-model=\"searchTrackingCode\" placeholder=\"请输入运输单号\" style=\"width: 250px;\" class=\"search-input\">\n          <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"handleSearch\"></el-button>\n        </el-input>\n      </div>\n      \n      <div class=\"tracking-container\">\n        <div class=\"map-view\" ref=\"mapContainer\">\n          <!-- 高德地图容器 -->\n          <div id=\"amap-container\" class=\"amap-container\"></div>\n        </div>\n        \n        <div class=\"tracking-info\">\n          <div v-if=\"currentShipment\" class=\"shipment-detail\">\n            <h3>运输详情</h3>\n            <el-descriptions :column=\"1\" border>\n              <el-descriptions-item label=\"运输单号\">{{ currentShipment.shipmentNo }}</el-descriptions-item>\n              <el-descriptions-item label=\"承运商\">{{ currentShipment.carrierName }}</el-descriptions-item>\n              <el-descriptions-item label=\"发货仓库\">{{ currentShipment.fromWarehouse }}</el-descriptions-item>\n              <el-descriptions-item label=\"目的地\">{{ currentShipment.toAddress }}</el-descriptions-item>\n              <el-descriptions-item label=\"预计到达时间\">{{ currentShipment.estimatedArrivalTime }}</el-descriptions-item>\n              <el-descriptions-item label=\"运输状态\">\n                <el-tag :type=\"getStatusType(currentShipment.status)\">{{ getStatusLabel(currentShipment.status) }}</el-tag>\n              </el-descriptions-item>\n            </el-descriptions>\n            \n            <h3 style=\"margin-top: 20px;\">运输进度</h3>\n            <el-progress :percentage=\"currentShipment.progress\" :status=\"currentShipment.progress === 100 ? 'success' : ''\" :stroke-width=\"15\" style=\"margin-bottom: 20px;\"></el-progress>\n            \n            <h3>物流轨迹</h3>\n            <el-timeline>\n              <el-timeline-item\n                v-for=\"(track, index) in currentShipment.trackInfo\"\n                :key=\"index\"\n                :timestamp=\"track.time\"\n                :type=\"index === 0 ? 'primary' : ''\"\n                :icon=\"track.icon\"\n              >\n                {{ track.content }}\n              </el-timeline-item>\n            </el-timeline>\n          </div>\n          <div v-else class=\"empty-info\">\n            <i class=\"el-icon-location-information\"></i>\n            <p>请输入运输单号查询物流信息</p>\n          </div>\n        </div>\n      </div>\n    </el-card>\n\n    <el-card class=\"list-container\" style=\"margin-top: 20px;\">\n      <div slot=\"header\">\n        <span>在途运输概览</span>\n        <el-radio-group v-model=\"listViewType\" size=\"mini\" style=\"float: right;\">\n          <el-radio-button label=\"all\">全部</el-radio-button>\n          <el-radio-button label=\"urgent\">加急</el-radio-button>\n          <el-radio-button label=\"delay\">延误</el-radio-button>\n        </el-radio-group>\n      </div>\n      <el-table :data=\"filteredShipmentList\" border style=\"width: 100%\" @row-click=\"handleRowClick\">\n        <el-table-column prop=\"shipmentNo\" label=\"运输单号\" align=\"center\" width=\"150\" />\n        <el-table-column prop=\"carrierName\" label=\"承运商\" align=\"center\" width=\"150\" />\n        <el-table-column prop=\"fromWarehouse\" label=\"发货仓库\" align=\"center\" width=\"120\" />\n        <el-table-column prop=\"toAddress\" label=\"目的地\" align=\"center\" />\n        <el-table-column prop=\"estimatedArrivalTime\" label=\"预计到达时间\" align=\"center\" width=\"170\" />\n        <el-table-column label=\"运输状态\" align=\"center\" width=\"100\">\n          <template slot-scope=\"scope\">\n            <el-tag :type=\"getStatusType(scope.row.status)\">{{ getStatusLabel(scope.row.status) }}</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"运输进度\" align=\"center\" width=\"180\">\n          <template slot-scope=\"scope\">\n            <el-progress :percentage=\"scope.row.progress\" :status=\"scope.row.progress === 100 ? 'success' : ''\"></el-progress>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"状态\" align=\"center\" width=\"100\">\n          <template slot-scope=\"scope\">\n            <el-tag v-if=\"scope.row.isDelay\" type=\"danger\">延误</el-tag>\n            <el-tag v-else-if=\"scope.row.isUrgent\" type=\"warning\">加急</el-tag>\n            <el-tag v-else type=\"success\">正常</el-tag>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ShipmentTracking',\n  data() {\n    return {\n      searchTrackingCode: '',\n      listViewType: 'all',\n      currentShipment: null,\n      map: null,\n      marker: null,\n      startMarker: null,\n      endMarker: null,\n      polyline: null,\n      shipmentList: [\n        {\n          shipmentNo: 'SHP20230001',\n          carrierName: '顺丰速运',\n          fromWarehouse: '上海仓',\n          toAddress: '北京市朝阳区望京SOHO',\n          estimatedArrivalTime: '2023-06-15 15:00:00',\n          status: 2,\n          progress: 45,\n          isUrgent: true,\n          isDelay: false,\n          fromLocation: [121.4737, 31.2304], // 上海坐标\n          toLocation: [116.4809, 39.9984], // 北京望京坐标\n          currentLocation: [115.0328, 35.7538], // 当前位置坐标\n          trackInfo: [\n            { time: '2023-06-05 10:25:09', content: '运输中，当前位置：河南省郑州市', icon: 'el-icon-truck' },\n            { time: '2023-06-03 16:28:10', content: '快件已从上海仓库发出', icon: 'el-icon-box' },\n            { time: '2023-06-03 14:52:36', content: '顺丰速运已收取快件', icon: 'el-icon-takeaway-box' },\n            { time: '2023-06-03 10:25:09', content: '快件信息已生成，等待揽收', icon: 'el-icon-receiving' }\n          ]\n        },\n        {\n          shipmentNo: 'SHP20230002',\n          carrierName: '京东物流',\n          fromWarehouse: '北京仓',\n          toAddress: '上海市浦东新区张江高科技园区',\n          estimatedArrivalTime: '2023-06-12 10:30:00',\n          status: 2,\n          progress: 25,\n          isUrgent: false,\n          isDelay: false,\n          fromLocation: [116.4074, 39.9042], // 北京坐标\n          toLocation: [121.5980, 31.2304], // 上海张江坐标\n          currentLocation: [118.7969, 32.0603], // 南京坐标\n          trackInfo: [\n            { time: '2023-06-04 08:15:22', content: '运输中，当前位置：江苏省南京市', icon: 'el-icon-truck' },\n            { time: '2023-06-03 18:42:15', content: '快件已从北京仓库发出', icon: 'el-icon-box' },\n            { time: '2023-06-03 15:32:46', content: '京东物流已收取快件', icon: 'el-icon-takeaway-box' },\n            { time: '2023-06-03 09:18:53', content: '快件信息已生成，等待揽收', icon: 'el-icon-receiving' }\n          ]\n        },\n        {\n          shipmentNo: 'SHP20230003',\n          carrierName: '中通快递',\n          fromWarehouse: '广州仓',\n          toAddress: '深圳市南山区科技园',\n          estimatedArrivalTime: '2023-06-13 16:45:00',\n          status: 2,\n          progress: 65,\n          isUrgent: false,\n          isDelay: true,\n          fromLocation: [113.2644, 23.1291], // 广州坐标\n          toLocation: [113.9438, 22.5255], // 深圳南山坐标\n          currentLocation: [114.4126, 23.1116], // 惠州坐标\n          trackInfo: [\n            { time: '2023-06-05 14:35:42', content: '运输中，当前位置：广东省惠州市', icon: 'el-icon-truck' },\n            { time: '2023-06-04 09:28:17', content: '快件已从广州仓库发出', icon: 'el-icon-box' },\n            { time: '2023-06-04 07:52:31', content: '中通快递已收取快件', icon: 'el-icon-takeaway-box' },\n            { time: '2023-06-03 17:45:09', content: '快件信息已生成，等待揽收', icon: 'el-icon-receiving' }\n          ]\n        },\n        {\n          shipmentNo: 'SHP20230004',\n          carrierName: '德邦物流',\n          fromWarehouse: '深圳仓',\n          toAddress: '成都市高新区天府大道',\n          estimatedArrivalTime: '2023-06-10 09:15:00',\n          status: 2,\n          progress: 78,\n          isUrgent: true,\n          isDelay: true,\n          fromLocation: [114.0579, 22.5431], // 深圳坐标\n          toLocation: [104.0680, 30.5728], // 成都坐标\n          currentLocation: [104.6795, 31.4670], // 绵阳坐标\n          trackInfo: [\n            { time: '2023-06-06 12:25:33', content: '运输中，当前位置：四川省绵阳市', icon: 'el-icon-truck' },\n            { time: '2023-06-04 14:48:26', content: '快件已从深圳仓库发出', icon: 'el-icon-box' },\n            { time: '2023-06-04 11:32:41', content: '德邦物流已收取快件', icon: 'el-icon-takeaway-box' },\n            { time: '2023-06-04 08:15:19', content: '快件信息已生成，等待揽收', icon: 'el-icon-receiving' }\n          ]\n        }\n      ]\n    }\n  },\n  computed: {\n    filteredShipmentList() {\n      if (this.listViewType === 'all') {\n        return this.shipmentList\n      } else if (this.listViewType === 'urgent') {\n        return this.shipmentList.filter(item => item.isUrgent)\n      } else if (this.listViewType === 'delay') {\n        return this.shipmentList.filter(item => item.isDelay)\n      }\n      return this.shipmentList\n    }\n  },\n  mounted() {\n    // 加载高德地图脚本\n    this.loadAMapScript()\n  },\n  methods: {\n    // 加载高德地图脚本\n    loadAMapScript() {\n      const key = '885e5e784f95d95af217334223071400' // 替换为您的高德地图 API Key\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.async = true\n      script.src = `https://webapi.amap.com/maps?v=2.0&key=${key}&plugin=AMap.Driving`\n      script.onload = () => {\n        this.initMap()\n      }\n      document.head.appendChild(script)\n    },\n    \n    // 初始化地图\n    initMap() {\n      this.map = new AMap.Map('amap-container', {\n        zoom: 6,\n        center: [116.397428, 39.90923] // 默认中心点，中国中心\n      })\n      \n      // 如果有当前运输信息，展示路线\n      if (this.currentShipment) {\n        this.showShipmentRoute(this.currentShipment)\n      }\n    },\n    \n    // 显示物流路线\n    showShipmentRoute(shipment) {\n      // 清除之前的标记和路线\n      this.clearMapOverlays()\n      \n      // 创建起点标记\n      this.startMarker = new AMap.Marker({\n        position: shipment.fromLocation,\n        map: this.map,\n        icon: new AMap.Icon({\n          size: new AMap.Size(25, 34),\n          image: '//a.amap.com/jsapi_demos/static/demo-center/icons/poi-marker-default.png',\n          imageSize: new AMap.Size(25, 34)\n        }),\n        title: shipment.fromWarehouse\n      })\n      \n      // 创建终点标记\n      this.endMarker = new AMap.Marker({\n        position: shipment.toLocation,\n        map: this.map,\n        icon: new AMap.Icon({\n          size: new AMap.Size(25, 34),\n          image: '//a.amap.com/jsapi_demos/static/demo-center/icons/poi-marker-red.png',\n          imageSize: new AMap.Size(25, 34)\n        }),\n        title: shipment.toAddress\n      })\n      \n      // 创建车辆当前位置标记\n      this.marker = new AMap.Marker({\n        position: shipment.currentLocation,\n        map: this.map,\n        icon: new AMap.Icon({\n          size: new AMap.Size(32, 32),\n          image: '//a.amap.com/jsapi_demos/static/demo-center/icons/blue.png',\n          imageSize: new AMap.Size(32, 32)\n        }),\n        title: '运输车辆'\n      })\n      \n      // 规划路线\n      const driving = new AMap.Driving({\n        map: this.map,\n        policy: AMap.DrivingPolicy.LEAST_TIME\n      })\n      \n      driving.search(\n        shipment.fromLocation,\n        shipment.toLocation,\n        (status, result) => {\n          if (status === 'complete') {\n            // 根据起终点经纬度规划驾车导航路线\n            this.map.setFitView()\n          } else {\n            // 如果规划失败，使用直线连接\n            this.polyline = new AMap.Polyline({\n              path: [shipment.fromLocation, shipment.currentLocation, shipment.toLocation],\n              strokeColor: '#3366FF',\n              strokeWeight: 5,\n              strokeOpacity: 0.8,\n              map: this.map\n            })\n            this.map.setFitView()\n          }\n        }\n      )\n    },\n    \n    // 清除地图上的标记和路线\n    clearMapOverlays() {\n      if (this.marker) {\n        this.marker.setMap(null)\n        this.marker = null\n      }\n      if (this.startMarker) {\n        this.startMarker.setMap(null)\n        this.startMarker = null\n      }\n      if (this.endMarker) {\n        this.endMarker.setMap(null)\n        this.endMarker = null\n      }\n      if (this.polyline) {\n        this.polyline.setMap(null)\n        this.polyline = null\n      }\n    },\n    \n    handleSearch() {\n      if (!this.searchTrackingCode) {\n        this.$message.warning('请输入运输单号')\n        return\n      }\n      const found = this.shipmentList.find(item => item.shipmentNo === this.searchTrackingCode)\n      if (found) {\n        this.currentShipment = found\n        this.$message.success('查询成功')\n        \n        // 查找成功后显示路线\n        if (this.map) {\n          this.showShipmentRoute(found)\n        }\n      } else {\n        this.$message.error('未查询到相关运输单信息')\n      }\n    },\n    \n    handleRowClick(row) {\n      this.currentShipment = row\n      this.searchTrackingCode = row.shipmentNo\n      \n      // 点击行后显示路线\n      if (this.map) {\n        this.showShipmentRoute(row)\n      }\n    },\n    getStatusType(status) {\n      const statusMap = {\n        0: 'info',\n        1: 'primary',\n        2: 'warning',\n        3: 'success',\n        4: 'danger'\n      }\n      return statusMap[status]\n    },\n    getStatusLabel(status) {\n      const statusMap = {\n        0: '待发货',\n        1: '已发货',\n        2: '运输中',\n        3: '已送达',\n        4: '已取消'\n      }\n      return statusMap[status]\n    }\n  }\n}\n</script>\n\n<style scoped>\n.search-bar {\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: center;\n}\n.tracking-container {\n  display: flex;\n  height: 500px;\n}\n.map-view {\n  flex: 1;\n  border: 1px solid #ebeef5;\n  border-radius: 4px;\n  overflow: hidden;\n  position: relative;\n}\n.amap-container {\n  width: 100%;\n  height: 100%;\n}\n.tracking-info {\n  width: 350px;\n  margin-left: 20px;\n  overflow-y: auto;\n  border: 1px solid #ebeef5;\n  border-radius: 4px;\n  padding: 15px;\n}\n.empty-info {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: #909399;\n}\n.empty-info i {\n  font-size: 48px;\n  margin-bottom: 10px;\n}\n.list-container {\n  margin-top: 20px;\n}\n</style> "]}]}