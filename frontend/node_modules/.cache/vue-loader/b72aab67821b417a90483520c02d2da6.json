{"remainingRequest":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bx/logistics-design/frontend/src/views/dashboard/dataOverview.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/bx/logistics-design/frontend/src/views/dashboard/dataOverview.vue","mtime":1748569593469},{"path":"/Users/bx/logistics-design/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1747185535160},{"path":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/index.js","mtime":1747185534034}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["dataOverview.vue"],"names":[],"mappings":";AAqfile":"dataOverview.vue","sourceRoot":"src/views/dashboard","sourcesContent":["<template>\n  <div class=\"board-container\">\n    <div class=\"board-title\"><span>智慧物流平台 - 数据总览</span></div>\n    <div class=\"time-stamp\">{{ nowTime }}</div>\n    \n    <div class=\"board-content flex-between\">\n      <div class=\"content-left flex-column-between\">\n        <div class=\"content-overview\">\n          <div class=\"box-title\">库存总览</div>\n          <div class=\"box-content flex-between\">\n            <div class=\"overview-object flex-column-center\">\n              <div class=\"object-count\">5</div>\n              <div class=\"object-name\">仓库总数</div>\n            </div>\n            <div class=\"overview-meter flex-column-center\">\n              <div class=\"object-count\">981</div>\n              <div class=\"object-name\">库位总数</div>\n            </div>\n            <div class=\"overview-alarm flex-column-center\">\n              <div class=\"object-count\">4</div>\n              <div class=\"object-name\">异常库位</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"content-status\">\n          <div class=\"box-title\">监控设备状态</div>\n          <div class=\"box-content\">\n            <div id=\"deviceStatusChart\" style=\"height: 100%;\"></div>\n          </div>\n        </div>\n        <div class=\"content-alarm\">\n          <div class=\"box-title\">报警信息</div>\n          <div class=\"box-content\">\n            <div class=\"alarm-list\">\n              <div v-for=\"(item, index) in alarmList\" :key=\"index\" class=\"alarm-item\">\n                <div class=\"alarm-time\">{{ item.time }}</div>\n                <div class=\"alarm-content\">\n                  <span class=\"alarm-type\" :class=\"getTypeClass(item.type)\">{{ getTypeText(item.type) }}</span>\n                  <span class=\"alarm-message\">{{ item.message }}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"content-middle flex-column-between\">\n        <div class=\"content-map\" id=\"warehouseMap\"></div>\n        <div class=\"content-chart\">\n          <div class=\"box-title\">今日仓库耗能</div>\n          <div class=\"box-content\">\n            <el-tabs\n              v-model=\"activeName\"\n              @tab-click=\"handleClick\"\n              class=\"trend-tabs\"\n            >\n              <el-tab-pane label=\"综合能耗\" name=\"total\">\n                <div id=\"totalEnergyChart\" style=\"height: 100%;\"></div>\n              </el-tab-pane>\n              <el-tab-pane label=\"电\" name=\"electricity\">\n                <div id=\"electricityChart\" style=\"height: 100%;\"></div>\n              </el-tab-pane>\n              <el-tab-pane label=\"水\" name=\"water\">\n                <div id=\"waterChart\" style=\"height: 100%;\"></div>\n              </el-tab-pane>\n            </el-tabs>\n          </div>\n        </div>\n      </div>\n      <div class=\"content-right flex-column-between\">\n        <div class=\"content-statistics\">\n          <div class=\"box-title\">入库统计</div>\n          <div class=\"box-content flex-between\">\n            <div class=\"statistics-item flex-column-center\">\n              <div class=\"item-count\">58</div>\n              <div style=\"text-align: center\">待入库</div>\n            </div>\n            <div class=\"statistics-item flex-column-center\">\n              <div class=\"item-count\">10</div>\n              <div style=\"text-align: center\">待质检</div>\n            </div>\n            <div class=\"statistics-item flex-column-center\">\n              <div class=\"item-count\">5</div>\n              <div style=\"text-align: center\">待上架</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"content-statistics\">\n          <div class=\"box-title\">出库统计</div>\n          <div class=\"box-content flex-between\">\n            <div class=\"statistics-item flex-column-center\">\n              <div class=\"item-count\">15</div>\n              <div style=\"text-align: center\">待配货</div>\n            </div>\n            <div class=\"statistics-item flex-column-center\">\n              <div class=\"item-count\">10</div>\n              <div style=\"text-align: center\">待拣货</div>\n            </div>\n            <div class=\"statistics-item flex-column-center\">\n              <div class=\"item-count\">5</div>\n              <div style=\"text-align: center\">待出库</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"content-statistics\">\n          <div class=\"box-title\">其他</div>\n          <div class=\"box-content flex-between\">\n            <div class=\"statistics-item flex-column-center\">\n              <div class=\"item-count\">15</div>\n              <div style=\"text-align: center\">待截单</div>\n            </div>\n            <div class=\"statistics-item flex-column-center\">\n              <div class=\"item-count\">10</div>\n              <div style=\"text-align: center\">异常单</div>\n            </div>\n            <div class=\"statistics-item flex-column-center\">\n              <div class=\"item-count\">5</div>\n              <div style=\"text-align: center\">今日到货</div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"content-carbon\">\n          <div class=\"box-title\">今日出入库流水</div>\n          <div class=\"box-content\">\n            <div id=\"warehouseFlowChart\" style=\"height: 100%;\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\nimport moment from 'moment'\n\nexport default {\n  name: 'DataOverview',\n  data() {\n    return {\n      nowTime: '',\n      timer: null,\n      activeName: 'total',\n      alarmList: [\n        {\n          time: '09:15:23',\n          type: 'warning',\n          message: '仓库A-12区温度过高，请检查'\n        },\n        {\n          time: '08:45:11',\n          type: 'error',\n          message: '仓库B-05区湿度异常，需要立即处理'\n        },\n        {\n          time: '08:32:45',\n          type: 'info',\n          message: '系统检测到库存商品即将过期'\n        },\n        {\n          time: '07:55:37',\n          type: 'warning',\n          message: '仓库C-08区监控设备离线'\n        },\n        {\n          time: '07:20:09',\n          type: 'error',\n          message: '仓库A-03区发现异常入侵'\n        }\n      ],\n      xData: ['00:00', '02:00', '04:00', '06:00', '08:00', '10:00', '12:00', '14:00', '16:00', '18:00', '20:00', '22:00'],\n      electricityData: [79, 52, 200, 334, 390, 330, 34, 79, 52, 123, 334, 34],\n      waterData: [45, 62, 100, 234, 290, 230, 64, 89, 42, 103, 214, 44],\n      energyData: [89, 72, 150, 284, 340, 280, 54, 99, 62, 113, 254, 54],\n      warehouseFlowData: [\n        [79, 52, 200, 334, 390, 330, 34, 79, 52, 123, 334, 34],\n        [45, 62, 100, 234, 290, 230, 64, 89, 42, 103, 214, 44]\n      ],\n      pieData: [\n        { value: 40, name: \"正常\", itemStyle: {color: '#6be6c3'} },\n        { value: 38, name: \"报警\", itemStyle: {color: '#e0c464'} },\n        { value: 32, name: \"离线\", itemStyle: {color: '#297ef8'} }\n      ],\n      charts: {}\n    }\n  },\n  methods: {\n    getCurrentTime() {\n      this.nowTime = moment().format('YYYY-MM-DD HH:mm:ss')\n    },\n    handleClick() {\n      this.$nextTick(() => {\n        this.initEnergyCharts()\n      })\n    },\n    getTypeClass(type) {\n      switch (type) {\n        case 'warning':\n          return 'warning-type'\n        case 'error':\n          return 'error-type'\n        case 'info':\n          return 'info-type'\n        default:\n          return ''\n      }\n    },\n    getTypeText(type) {\n      switch (type) {\n        case 'warning':\n          return '警告'\n        case 'error':\n          return '错误'\n        case 'info':\n          return '提示'\n        default:\n          return '未知'\n      }\n    },\n    initCharts() {\n      this.initDeviceStatusChart()\n      this.initWarehouseMap()\n      this.initEnergyCharts()\n      this.initWarehouseFlowChart()\n      \n      // 监听窗口大小变化，重新渲染图表\n      window.addEventListener('resize', this.resizeCharts)\n    },\n    resizeCharts() {\n      Object.keys(this.charts).forEach(key => {\n        if (this.charts[key]) {\n          this.charts[key].resize()\n        }\n      })\n    },\n    initDeviceStatusChart() {\n      this.charts.deviceStatus = echarts.init(document.getElementById('deviceStatusChart'))\n      this.charts.deviceStatus.setOption({\n        tooltip: {\n          trigger: 'item',\n          appendToBody: true,\n          backgroundColor: 'rgba(0, 11, 42, 0.8)',\n          borderColor: '#00e4ff',\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        legend: {\n          top: \"bottom\",\n          textStyle: {\n            color: '#fff'\n          },\n          itemStyle: {\n            borderColor: '#00e4ff'\n          }\n        },\n        series: [\n          {\n            name: \"设备状态\",\n            type: \"pie\",\n            radius: [0, '65%'],\n            center: [\"50%\", \"40%\"],\n            roseType: \"area\",\n            label: {\n              show: true,\n              position: \"outside\",\n              color: '#00e4ff',\n              formatter: '{b}({d}%)'\n            },\n            emphasis: {\n              label: {\n                show: true,\n                fontSize: 16,\n                color: '#00e4ff'\n              }\n            },\n            data: [\n              { value: 40, name: \"正常\", itemStyle: {color: '#00e4ff'} },\n              { value: 38, name: \"报警\", itemStyle: {color: '#ffd700'} },\n              { value: 32, name: \"离线\", itemStyle: {color: '#0066ff'} }\n            ],\n            animationDuration: 1500\n          }\n        ]\n      })\n    },\n    initWarehouseMap() {\n      this.charts.warehouseMap = echarts.init(document.getElementById('warehouseMap'))\n      this.charts.warehouseMap.setOption({\n        title: {\n          text: '仓库分布',\n          textStyle: {\n            color: '#00e4ff',\n            fontSize: 16\n          }\n        },\n        tooltip: {\n          trigger: 'item',\n          backgroundColor: 'rgba(0, 11, 42, 0.8)',\n          borderColor: '#00e4ff',\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          textStyle: {\n            color: '#fff'\n          },\n          itemStyle: {\n            borderColor: '#00e4ff'\n          }\n        },\n        series: [\n          {\n            name: '仓库分布',\n            type: 'pie',\n            radius: '60%',\n            center: ['50%', '50%'],\n            data: [\n              { value: 35, name: '华东区' },\n              { value: 25, name: '华南区' },\n              { value: 20, name: '华北区' },\n              { value: 15, name: '西南区' },\n              { value: 5, name: '西北区' }\n            ],\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 228, 255, 0.5)'\n              }\n            },\n            itemStyle: {\n              normal: {\n                color: function(params) {\n                  const colorList = ['#00e4ff', '#0066ff', '#00ff9d', '#ffd700', '#0099ff'];\n                  return colorList[params.dataIndex];\n                }\n              }\n            }\n          }\n        ]\n      })\n    },\n    initEnergyCharts() {\n      const commonOption = {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#00e4ff'\n            }\n          },\n          backgroundColor: 'rgba(0, 11, 42, 0.9)',\n          borderColor: '#00e4ff',\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        grid: {\n          top: '5%',\n          left: '2%',\n          right: '2%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [\n          {\n            type: 'category',\n            boundaryGap: false,\n            data: this.xData,\n            axisLabel: {\n              color: '#fff'\n            },\n            axisLine: {\n              lineStyle: {\n                color: '#00e4ff'\n              }\n            },\n            splitLine: {\n              lineStyle: {\n                color: 'rgba(0, 228, 255, 0.1)'\n              }\n            }\n          }\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            axisLabel: {\n              color: '#fff'\n            },\n            splitLine: {\n              lineStyle: {\n                color: 'rgba(0, 228, 255, 0.1)'\n              }\n            }\n          }\n        ],\n        series: [\n          {\n            type: 'line',\n            stack: 'Total',\n            smooth: true,\n            lineStyle: {\n              width: 2,\n              color: '#00e4ff'\n            },\n            showSymbol: false,\n            areaStyle: {\n              opacity: 0.8,\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                {\n                  offset: 0,\n                  color: 'rgba(0, 228, 255, 0.5)'\n                },\n                {\n                  offset: 1,\n                  color: 'rgba(0, 11, 42, 0.1)'\n                }\n              ])\n            },\n            emphasis: {\n              focus: 'series'\n            }\n          }\n        ]\n      }\n      \n      if (this.activeName === 'total') {\n        if (!this.charts.totalEnergy) {\n          this.charts.totalEnergy = echarts.init(document.getElementById('totalEnergyChart'))\n        }\n        const option = JSON.parse(JSON.stringify(commonOption))\n        option.series[0].name = '综合能耗'\n        option.series[0].data = this.energyData\n        option.yAxis[0].name = 'kgce'\n        this.charts.totalEnergy.setOption(option)\n      } else if (this.activeName === 'electricity') {\n        if (!this.charts.electricity) {\n          this.charts.electricity = echarts.init(document.getElementById('electricityChart'))\n        }\n        const option = JSON.parse(JSON.stringify(commonOption))\n        option.series[0].name = '电力消耗'\n        option.series[0].data = this.electricityData\n        option.yAxis[0].name = 'kW·h'\n        this.charts.electricity.setOption(option)\n      } else if (this.activeName === 'water') {\n        if (!this.charts.water) {\n          this.charts.water = echarts.init(document.getElementById('waterChart'))\n        }\n        const option = JSON.parse(JSON.stringify(commonOption))\n        option.series[0].name = '水资源消耗'\n        option.series[0].data = this.waterData\n        option.yAxis[0].name = 't'\n        this.charts.water.setOption(option)\n      }\n    },\n    initWarehouseFlowChart() {\n      this.charts.warehouseFlow = echarts.init(document.getElementById('warehouseFlowChart'))\n      this.charts.warehouseFlow.setOption({\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          },\n          backgroundColor: 'rgba(0, 11, 42, 0.9)',\n          borderColor: '#00e4ff',\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        legend: {\n          data: ['入库', '出库'],\n          textStyle: {\n            color: '#fff'\n          },\n          itemStyle: {\n            borderColor: '#00e4ff'\n          }\n        },\n        grid: {\n          top: '15%',\n          left: '2%',\n          right: '2%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          data: this.xData,\n          axisTick: {\n            alignWithLabel: true\n          },\n          axisLabel: {\n            color: '#fff'\n          },\n          axisLine: {\n            lineStyle: {\n              color: '#00e4ff'\n            }\n          },\n          splitLine: {\n            lineStyle: {\n              color: 'rgba(0, 228, 255, 0.1)'\n            }\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          name: '件',\n          axisLabel: {\n            color: '#fff'\n          },\n          nameTextStyle: {\n            color: '#fff'\n          },\n          splitLine: {\n            lineStyle: {\n              color: 'rgba(0, 228, 255, 0.1)'\n            }\n          }\n        }],\n        series: [\n          {\n            name: '入库',\n            type: 'bar',\n            stack: 'total',\n            barWidth: '40%',\n            data: this.warehouseFlowData[0],\n            itemStyle: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                { offset: 0, color: '#00e4ff' },\n                { offset: 1, color: 'rgba(0, 228, 255, 0.1)' }\n              ])\n            }\n          },\n          {\n            name: '出库',\n            type: 'bar',\n            stack: 'total',\n            barWidth: '40%',\n            data: this.warehouseFlowData[1],\n            itemStyle: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                { offset: 0, color: '#0066ff' },\n                { offset: 1, color: 'rgba(0, 102, 255, 0.1)' }\n              ])\n            }\n          }\n        ]\n      })\n    }\n  },\n  mounted() {\n    this.getCurrentTime()\n    this.timer = setInterval(() => {\n      this.getCurrentTime()\n    }, 1000)\n    \n    this.$nextTick(() => {\n      try {\n        this.initCharts()\n      } catch (e) {\n        console.error('初始化图表失败:', e)\n      }\n    })\n  },\n  beforeDestroy() {\n    if (this.timer) {\n      clearInterval(this.timer)\n    }\n    \n    // 移除窗口大小变化监听\n    window.removeEventListener('resize', this.resizeCharts)\n    \n    // 销毁图表实例\n    Object.keys(this.charts).forEach(key => {\n      if (this.charts[key]) {\n        this.charts[key].dispose()\n      }\n    })\n  }\n}\n</script>\n\n<style scoped>\n.board-container {\n  width: 100%;\n  height: 100vh;\n  background-color: #000b2a;\n  color: #fff;\n  padding: 20px;\n  box-sizing: border-box;\n  overflow: hidden;\n  position: relative;\n  background-image: linear-gradient(to bottom, #000b2a, #001959);\n}\n\n.board-title {\n  text-align: center;\n  font-size: 28px;\n  font-weight: bold;\n  margin-bottom: 20px;\n  color: #00e4ff;\n  text-shadow: 0 0 10px rgba(0, 228, 255, 0.5);\n  position: relative;\n}\n\n.board-title::before,\n.board-title::after {\n  content: '';\n  position: absolute;\n  top: 50%;\n  width: 100px;\n  height: 2px;\n  background: linear-gradient(to right, transparent, #00e4ff, transparent);\n}\n\n.board-title::before {\n  left: 25%;\n}\n\n.board-title::after {\n  right: 25%;\n}\n\n.time-stamp {\n  position: absolute;\n  right: 20px;\n  top: 20px;\n  color: #00e4ff;\n  font-size: 16px;\n  background: rgba(0, 228, 255, 0.1);\n  padding: 5px 15px;\n  border-radius: 4px;\n  border: 1px solid rgba(0, 228, 255, 0.3);\n}\n\n.board-content {\n  display: flex;\n  height: calc(100% - 60px);\n  gap: 20px;\n}\n\n.flex-between {\n  display: flex;\n  justify-content: space-between;\n}\n\n.flex-column-between {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.flex-column-center {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.content-left, .content-right {\n  width: 25%;\n  height: 100%;\n}\n\n.content-middle {\n  width: 50%;\n  height: 100%;\n}\n\n.box-title {\n  font-size: 16px;\n  font-weight: bold;\n  padding: 10px;\n  border-bottom: 1px solid rgba(0, 228, 255, 0.3);\n  color: #00e4ff;\n  display: flex;\n  align-items: center;\n  position: relative;\n}\n\n.box-title::before {\n  content: '';\n  display: inline-block;\n  width: 4px;\n  height: 16px;\n  background: #00e4ff;\n  margin-right: 8px;\n  border-radius: 2px;\n  box-shadow: 0 0 8px rgba(0, 228, 255, 0.5);\n}\n\n.box-title::after {\n  content: '';\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 30px;\n  height: 4px;\n  background: linear-gradient(to right, #00e4ff, transparent);\n}\n\n.box-content {\n  padding: 10px;\n  height: calc(100% - 37px);\n}\n\n.content-overview, .content-status, .content-alarm,\n.content-statistics, .content-carbon {\n  background: rgba(0, 11, 42, 0.6);\n  border: 1px solid rgba(0, 228, 255, 0.3);\n  border-radius: 4px;\n  margin-bottom: 20px;\n  height: 30%;\n  position: relative;\n  backdrop-filter: blur(10px);\n}\n\n.content-overview::before,\n.content-status::before,\n.content-alarm::before,\n.content-statistics::before,\n.content-carbon::before,\n.content-map::before,\n.content-chart::before {\n  content: '';\n  position: absolute;\n  width: 10px;\n  height: 10px;\n  border-top: 2px solid #00e4ff;\n  border-left: 2px solid #00e4ff;\n  top: -2px;\n  left: -2px;\n}\n\n.content-overview::after,\n.content-status::after,\n.content-alarm::after,\n.content-statistics::after,\n.content-carbon::after,\n.content-map::after,\n.content-chart::after {\n  content: '';\n  position: absolute;\n  width: 10px;\n  height: 10px;\n  border-bottom: 2px solid #00e4ff;\n  border-right: 2px solid #00e4ff;\n  bottom: -2px;\n  right: -2px;\n}\n\n.object-count {\n  font-size: 28px;\n  font-weight: bold;\n  color: #00e4ff;\n  text-shadow: 0 0 10px rgba(0, 228, 255, 0.5);\n}\n\n.object-name {\n  font-size: 14px;\n  margin-top: 5px;\n}\n\n.statistics-item {\n  width: 30%;\n  height: 100%;\n  position: relative;\n  padding: 10px;\n  border-radius: 4px;\n  background: rgba(0, 228, 255, 0.05);\n  transition: all 0.3s ease;\n}\n\n.statistics-item:hover {\n  background: rgba(0, 228, 255, 0.1);\n  transform: translateY(-2px);\n}\n\n.item-count {\n  font-size: 24px;\n  font-weight: bold;\n  color: #00e4ff;\n  text-shadow: 0 0 10px rgba(0, 228, 255, 0.5);\n  margin-bottom: 5px;\n}\n\n.trend-tabs :deep(.el-tabs__header) {\n  margin-bottom: 10px;\n}\n\n.trend-tabs :deep(.el-tabs__nav-wrap::after) {\n  background-color: rgba(27, 229, 231, 0.3);\n}\n\n.trend-tabs :deep(.el-tabs__item) {\n  color: #fff;\n}\n\n.trend-tabs :deep(.el-tabs__item.is-active) {\n  color: #1be5e7;\n}\n\n.trend-tabs :deep(.el-tabs__active-bar) {\n  background-color: #1be5e7;\n}\n\n/* 报警信息样式 */\n.alarm-list {\n  width: 100%;\n  height: 100%;\n  overflow-y: auto;\n}\n\n.alarm-item {\n  padding: 8px;\n  margin-bottom: 8px;\n  border-radius: 4px;\n  background: rgba(0, 228, 255, 0.05);\n  border: 1px solid rgba(0, 228, 255, 0.1);\n  transition: all 0.3s ease;\n}\n\n.alarm-item:hover {\n  background: rgba(0, 228, 255, 0.1);\n  border-color: rgba(0, 228, 255, 0.3);\n}\n\n.alarm-time {\n  color: #00e4ff;\n  font-size: 12px;\n  margin-bottom: 4px;\n}\n\n.alarm-content {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.alarm-type {\n  padding: 2px 6px;\n  border-radius: 2px;\n  font-size: 12px;\n}\n\n.warning-type {\n  background: rgba(255, 215, 0, 0.1);\n  color: #ffd700;\n  border: 1px solid rgba(255, 215, 0, 0.3);\n}\n\n.error-type {\n  background: rgba(255, 77, 79, 0.1);\n  color: #ff4d4f;\n  border: 1px solid rgba(255, 77, 79, 0.3);\n}\n\n.info-type {\n  background: rgba(0, 228, 255, 0.1);\n  color: #00e4ff;\n  border: 1px solid rgba(0, 228, 255, 0.3);\n}\n\n.alarm-message {\n  flex: 1;\n  font-size: 14px;\n}\n\n.alarm-list::-webkit-scrollbar {\n  width: 4px;\n}\n\n.alarm-list::-webkit-scrollbar-thumb {\n  background-color: rgba(27, 229, 231, 0.3);\n  border-radius: 2px;\n}\n\n.alarm-list::-webkit-scrollbar-track {\n  background-color: rgba(28, 37, 80, 0.5);\n}\n\n.content-map {\n  background: rgba(0, 11, 42, 0.6);\n  border: 1px solid rgba(0, 228, 255, 0.3);\n  border-radius: 4px;\n  height: 60%;\n  position: relative;\n  backdrop-filter: blur(10px);\n}\n\n.content-chart {\n  background: rgba(0, 11, 42, 0.6);\n  border: 1px solid rgba(0, 228, 255, 0.3);\n  border-radius: 4px;\n  height: 38%;\n  position: relative;\n  backdrop-filter: blur(10px);\n}\n\n.board-container::before {\n  content: '';\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 2px;\n  background: linear-gradient(to right,\n    transparent,\n    rgba(0, 228, 255, 0.5) 20%,\n    rgba(0, 228, 255, 0.8) 50%,\n    rgba(0, 228, 255, 0.5) 80%,\n    transparent\n  );\n  animation: scanline 4s linear infinite;\n}\n\n@keyframes scanline {\n  0% {\n    transform: translateY(-100%);\n  }\n  100% {\n    transform: translateY(100vh);\n  }\n}\n</style>"]}]}