{"remainingRequest":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--5!/Users/bx/logistics-design/frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bx/logistics-design/frontend/src/views/layout/Layout.vue?vue&type=template&id=60f35ab6&scoped=true","dependencies":[{"path":"/Users/bx/logistics-design/frontend/src/views/layout/Layout.vue","mtime":1748570025164},{"path":"/Users/bx/logistics-design/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1747185535160},{"path":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1747185534147},{"path":"/Users/bx/logistics-design/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1747185535160},{"path":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/index.js","mtime":1747185534034}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHsKICB2YXIgX3ZtID0gdGhpcywKICAgIF9jID0gX3ZtLl9zZWxmLl9jCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiYXBwLXdyYXBwZXIiIH0sIFsKICAgIF9jKAogICAgICAiZGl2IiwKICAgICAgeyBzdGF0aWNDbGFzczogInNpZGViYXItY29udGFpbmVyIiB9LAogICAgICBbCiAgICAgICAgX3ZtLl9tKDApLAogICAgICAgIF9jKAogICAgICAgICAgImVsLW1lbnUiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogInNpZGViYXItbWVudSIsCiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgImRlZmF1bHQtYWN0aXZlIjogX3ZtLmFjdGl2ZU1lbnUsCiAgICAgICAgICAgICAgImJhY2tncm91bmQtY29sb3IiOiAiIzMwNDE1NiIsCiAgICAgICAgICAgICAgInRleHQtY29sb3IiOiAiI2JmY2JkOSIsCiAgICAgICAgICAgICAgImFjdGl2ZS10ZXh0LWNvbG9yIjogIiM0MDlFRkYiLAogICAgICAgICAgICAgIHJvdXRlcjogIiIsCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9LAogICAgICAgICAgWwogICAgICAgICAgICBfYygiZWwtbWVudS1pdGVtIiwgeyBhdHRyczogeyBpbmRleDogIi9kYXNoYm9hcmQiIH0gfSwgWwogICAgICAgICAgICAgIF9jKCJpIiwgeyBzdGF0aWNDbGFzczogImVsLWljb24tcy1ob21lIiB9KSwKICAgICAgICAgICAgICBfYygic3BhbiIsIHsgYXR0cnM6IHsgc2xvdDogInRpdGxlIiB9LCBzbG90OiAidGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigi6aaW6aG1IiksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiZWwtbWVudS1pdGVtIiwgeyBhdHRyczogeyBpbmRleDogIi9kYXRhLW92ZXJ2aWV3IiB9IH0sIFsKICAgICAgICAgICAgICBfYygiaSIsIHsgc3RhdGljQ2xhc3M6ICJlbC1pY29uLXMtZGF0YSIgfSksCiAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IGF0dHJzOiB7IHNsb3Q6ICJ0aXRsZSIgfSwgc2xvdDogInRpdGxlIiB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoIuaVsOaNruaAu+iniCIpLAogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX3ZtLl9sKAogICAgICAgICAgICAgIF92bS5yb3V0ZXMuZmlsdGVyKChyb3V0ZSkgPT4gcm91dGUucGF0aCAhPT0gIi8iKSwKICAgICAgICAgICAgICBmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgICAgcmV0dXJuIFsKICAgICAgICAgICAgICAgICAgaXRlbS5jaGlsZHJlbiAmJiBpdGVtLmNoaWxkcmVuLmxlbmd0aCA+IDEKICAgICAgICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAgICAgICAiZWwtc3VibWVudSIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsga2V5OiBpdGVtLnBhdGgsIGF0dHJzOiB7IGluZGV4OiBpdGVtLnBhdGggfSB9LAogICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInRlbXBsYXRlIiwgeyBzbG90OiAidGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0ubWV0YSAmJiBpdGVtLm1ldGEuaWNvbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKCJpIiwgeyBjbGFzczogaXRlbS5tZXRhLmljb24gfSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKGl0ZW0ubWV0YSA/IGl0ZW0ubWV0YS50aXRsZSA6ICIiKSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX2woCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtLmNoaWxkcmVuLmZpbHRlcigKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGMpID0+ICFjLmhpZGRlbiAmJiAhKGMubWV0YSAmJiBjLm1ldGEuaGlkZGVuKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIChjaGlsZCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImVsLW1lbnUtaXRlbSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OiBjaGlsZC5wYXRoLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXg6IF92bS5yZXNvbHZlUGF0aCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtLnBhdGgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGQucGF0aAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIiAiICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZC5tZXRhID8gY2hpbGQubWV0YS50aXRsZSA6ICIiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIiAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgIDIKICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICA6ICFpdGVtLmhpZGRlbgogICAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJlbC1tZW51LWl0ZW0iLAogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OiBpdGVtLnBhdGggKyAiLW1lbnUiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGluZGV4OiBpdGVtLnBhdGggfSwKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5nZXRNZW51SWNvbihpdGVtKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygiaSIsIHsgY2xhc3M6IF92bS5nZXRNZW51SWNvbihpdGVtKSB9KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzcGFuIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgc2xvdDogInRpdGxlIiB9LCBzbG90OiAidGl0bGUiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KF92bS5fcyhfdm0uZ2V0TWVudVRpdGxlKGl0ZW0pKSldCiAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICApLAogICAgICAgICAgXSwKICAgICAgICAgIDIKICAgICAgICApLAogICAgICBdLAogICAgICAxCiAgICApLAogICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJtYWluLWNvbnRhaW5lciIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImhlYWRlciIgfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImRpdiIsCiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAicmlnaHQtbWVudSIgfSwKICAgICAgICAgIFsKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImVsLWRyb3Bkb3duIiwKICAgICAgICAgICAgICB7IGF0dHJzOiB7IHRyaWdnZXI6ICJjbGljayIgfSB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogInVzZXItaW5mbyIgfSwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoIiDnrqHnkIblkZggIiksCiAgICAgICAgICAgICAgICAgIF9jKCJpIiwgeyBzdGF0aWNDbGFzczogImVsLWljb24tY2FyZXQtYm90dG9tIiB9KSwKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJlbC1kcm9wZG93bi1tZW51IiwKICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyBzbG90OiAiZHJvcGRvd24iIH0sIHNsb3Q6ICJkcm9wZG93biIgfSwKICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgIF9jKCJlbC1kcm9wZG93bi1pdGVtIiwgW192bS5fdigi5Liq5Lq65Lit5b+DIildKSwKICAgICAgICAgICAgICAgICAgICBfYygiZWwtZHJvcGRvd24taXRlbSIsIHsgYXR0cnM6IHsgZGl2aWRlZDogIiIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIumAgOWHuueZu+W9lSIpLAogICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApLAogICAgICAgICAgXSwKICAgICAgICAgIDEKICAgICAgICApLAogICAgICBdKSwKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgeyBzdGF0aWNDbGFzczogImFwcC1tYWluIiB9LAogICAgICAgIFsKICAgICAgICAgIF92bS5zaG93RGVidWcKICAgICAgICAgICAgPyBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImRlYnVnLWluZm8iIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJwIiwgW192bS5fdigi5b2T5YmN6Lev55SxOiAiICsgX3ZtLl9zKF92bS4kcm91dGUucGF0aCkpXSksCiAgICAgICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICLlj6/nlKjot6/nlLE6ICIgKyBfdm0uX3MoSlNPTi5zdHJpbmdpZnkoX3ZtLnJvdXRlcywgbnVsbCwgMikpCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBdKQogICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgX2MoInJvdXRlci12aWV3IiksCiAgICAgICAgXSwKICAgICAgICAxCiAgICAgICksCiAgICBdKSwKICBdKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24gKCkgewogICAgdmFyIF92bSA9IHRoaXMsCiAgICAgIF9jID0gX3ZtLl9zZWxmLl9jCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJsb2dvIiB9LCBbCiAgICAgIF9jKCJoMSIsIFtfdm0uX3YoIuaZuuaFp+eJqea1geW5s+WPsCIpXSksCiAgICBdKQogIH0sCl0KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}