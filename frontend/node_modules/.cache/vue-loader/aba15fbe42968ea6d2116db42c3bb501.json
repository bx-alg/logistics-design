{"remainingRequest":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bx/logistics-design/frontend/src/views/order/forecast.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/bx/logistics-design/frontend/src/views/order/forecast.vue","mtime":1748574586333},{"path":"/Users/bx/logistics-design/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1747185535160},{"path":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/index.js","mtime":1747185534034}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCAqIGFzIGVjaGFydHMgZnJvbSAnZWNoYXJ0cycKaW1wb3J0IEZpbGVTYXZlciBmcm9tICdmaWxlLXNhdmVyJwppbXBvcnQgKiBhcyBYTFNYIGZyb20gJ3hsc3gnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ09yZGVyRm9yZWNhc3QnLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgZmlsdGVyRm9ybTogewogICAgICAgIGNhdGVnb3J5OiBbXSwKICAgICAgICBwZXJpb2Q6ICdtb250aCcsCiAgICAgICAgYWxnb3JpdGhtOiAnYXJpbWEnLAogICAgICAgIGNvbmZpZGVuY2U6IDk1LAogICAgICAgIGRhdGVSYW5nZTogW10KICAgICAgfSwKICAgICAgY2F0ZWdvcnlPcHRpb25zOiBbCiAgICAgICAgewogICAgICAgICAgdmFsdWU6ICdlbGVjdHJvbmljcycsCiAgICAgICAgICBsYWJlbDogJ+eUteWtkOS6p+WTgScsCiAgICAgICAgICBjaGlsZHJlbjogWwogICAgICAgICAgICB7IHZhbHVlOiAncGhvbmUnLCBsYWJlbDogJ+aJi+acuicgfSwKICAgICAgICAgICAgeyB2YWx1ZTogJ2xhcHRvcCcsIGxhYmVsOiAn56yU6K6w5pysJyB9LAogICAgICAgICAgICB7IHZhbHVlOiAndGFibGV0JywgbGFiZWw6ICflubPmnb8nIH0KICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHZhbHVlOiAnYXBwbGlhbmNlcycsCiAgICAgICAgICBsYWJlbDogJ+WutueUqOeUteWZqCcsCiAgICAgICAgICBjaGlsZHJlbjogWwogICAgICAgICAgICB7IHZhbHVlOiAndHYnLCBsYWJlbDogJ+eUteinhicgfSwKICAgICAgICAgICAgeyB2YWx1ZTogJ2ZyaWRnZScsIGxhYmVsOiAn5Yaw566xJyB9LAogICAgICAgICAgICB7IHZhbHVlOiAnd2FzaGVyJywgbGFiZWw6ICfmtJfooaPmnLonIH0KICAgICAgICAgIF0KICAgICAgICB9CiAgICAgIF0sCiAgICAgIHBlcmlvZE9wdGlvbnM6IFsKICAgICAgICB7IGxhYmVsOiAn5pyq5p2l5LiA5ZGoJywgdmFsdWU6ICd3ZWVrJyB9LAogICAgICAgIHsgbGFiZWw6ICfmnKrmnaXkuIDkuKrmnIgnLCB2YWx1ZTogJ21vbnRoJyB9LAogICAgICAgIHsgbGFiZWw6ICfmnKrmnaXkuIDkuKrlraPluqYnLCB2YWx1ZTogJ3F1YXJ0ZXInIH0sCiAgICAgICAgeyBsYWJlbDogJ+acquadpeS4gOW5tCcsIHZhbHVlOiAneWVhcicgfQogICAgICBdLAogICAgICBhbGdvcml0aG1PcHRpb25zOiBbCiAgICAgICAgeyBsYWJlbDogJ0FSSU1B5qih5Z6LJywgdmFsdWU6ICdhcmltYScgfSwKICAgICAgICB7IGxhYmVsOiAn5oyH5pWw5bmz5ruR5rOVJywgdmFsdWU6ICdleHBvbmVudGlhbCcgfSwKICAgICAgICB7IGxhYmVsOiAn5a2j6IqC5oCn5YiG6KejJywgdmFsdWU6ICdzZWFzb25hbCcgfSwKICAgICAgICB7IGxhYmVsOiAn56We57uP572R57ucJywgdmFsdWU6ICduZXVyYWwnIH0KICAgICAgXSwKICAgICAgY29uZmlkZW5jZU9wdGlvbnM6IFsKICAgICAgICB7IGxhYmVsOiAnOTAlJywgdmFsdWU6IDkwIH0sCiAgICAgICAgeyBsYWJlbDogJzk1JScsIHZhbHVlOiA5NSB9LAogICAgICAgIHsgbGFiZWw6ICc5OSUnLCB2YWx1ZTogOTkgfQogICAgICBdLAogICAgICBwaWNrZXJPcHRpb25zOiB7CiAgICAgICAgc2hvcnRjdXRzOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIHRleHQ6ICfmnIDov5HkuIDlkagnLAogICAgICAgICAgICBvbkNsaWNrKHBpY2tlcikgewogICAgICAgICAgICAgIGNvbnN0IGVuZCA9IG5ldyBEYXRlKCkKICAgICAgICAgICAgICBjb25zdCBzdGFydCA9IG5ldyBEYXRlKCkKICAgICAgICAgICAgICBzdGFydC5zZXRUaW1lKHN0YXJ0LmdldFRpbWUoKSAtIDM2MDAgKiAxMDAwICogMjQgKiA3KQogICAgICAgICAgICAgIHBpY2tlci4kZW1pdCgncGljaycsIFtzdGFydCwgZW5kXSkKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgdGV4dDogJ+acgOi/keS4gOS4quaciCcsCiAgICAgICAgICAgIG9uQ2xpY2socGlja2VyKSB7CiAgICAgICAgICAgICAgY29uc3QgZW5kID0gbmV3IERhdGUoKQogICAgICAgICAgICAgIGNvbnN0IHN0YXJ0ID0gbmV3IERhdGUoKQogICAgICAgICAgICAgIHN0YXJ0LnNldE1vbnRoKHN0YXJ0LmdldE1vbnRoKCkgLSAxKQogICAgICAgICAgICAgIHBpY2tlci4kZW1pdCgncGljaycsIFtzdGFydCwgZW5kXSkKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgdGV4dDogJ+acgOi/keS4ieS4quaciCcsCiAgICAgICAgICAgIG9uQ2xpY2socGlja2VyKSB7CiAgICAgICAgICAgICAgY29uc3QgZW5kID0gbmV3IERhdGUoKQogICAgICAgICAgICAgIGNvbnN0IHN0YXJ0ID0gbmV3IERhdGUoKQogICAgICAgICAgICAgIHN0YXJ0LnNldE1vbnRoKHN0YXJ0LmdldE1vbnRoKCkgLSAzKQogICAgICAgICAgICAgIHBpY2tlci4kZW1pdCgncGljaycsIFtzdGFydCwgZW5kXSkKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIF0KICAgICAgfSwKICAgICAgY2hhcnRUeXBlOiAnbGluZScsCiAgICAgIHNob3dDb25maWRlbmNlSW50ZXJ2YWw6IHRydWUsCiAgICAgIHJhbmtpbmdUeXBlOiAndm9sdW1lJywKICAgICAgdG9wUHJvZHVjdHNMaXN0OiBbXSwKICAgICAgZm9yZWNhc3RBY2N1cmFjeTogODUsCiAgICAgIGF2ZXJhZ2VFcnJvcjogOC41LAogICAgICB0cmVuZDogewogICAgICAgIHR5cGU6ICd1cCcsCiAgICAgICAgdGV4dDogJ+S4iuWNh+i2i+WKvycKICAgICAgfSwKICAgICAgc2Vhc29uYWxpdHlJbmRleDogMC44MiwKICAgICAgc2hvd0FkdmFuY2VkU2V0dGluZ3M6IGZhbHNlLAogICAgICBhZHZhbmNlZFNldHRpbmdzOiB7CiAgICAgICAgc2Vhc29uYWxpdHk6IDEyLAogICAgICAgIGRlY29tcG9zaXRpb246ICdtdWx0aXBsaWNhdGl2ZScsCiAgICAgICAgb3V0bGllck1ldGhvZDogJ21vdmluZ19hdmVyYWdlJywKICAgICAgICBmb3JlY2FzdFN0ZXBzOiAzMAogICAgICB9LAogICAgICBjaGFydHM6IHsKICAgICAgICBmb3JlY2FzdENoYXJ0OiBudWxsCiAgICAgIH0sCiAgICAgIGFjY3VyYWN5Q29sb3JzOiBbCiAgICAgICAge2NvbG9yOiAnI0Y1NkM2QycsIHBlcmNlbnRhZ2U6IDYwfSwKICAgICAgICB7Y29sb3I6ICcjRTZBMjNDJywgcGVyY2VudGFnZTogNzB9LAogICAgICAgIHtjb2xvcjogJyM2N0MyM0EnLCBwZXJjZW50YWdlOiA4MH0sCiAgICAgICAge2NvbG9yOiAnIzQwOUVGRicsIHBlcmNlbnRhZ2U6IDkwfQogICAgICBdCiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5pbml0Q2hhcnRzKCkKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnJlc2l6ZUNoYXJ0cykKICAgIHRoaXMuZ2VuZXJhdGVNb2NrRGF0YSgpCiAgfSwKICBiZWZvcmVEZXN0cm95KCkgewogICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMucmVzaXplQ2hhcnRzKQogICAgdGhpcy5kZXN0cm95Q2hhcnRzKCkKICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXRDaGFydHMoKSB7CiAgICAgIHRoaXMuY2hhcnRzLmZvcmVjYXN0Q2hhcnQgPSBlY2hhcnRzLmluaXQodGhpcy4kcmVmcy5mb3JlY2FzdENoYXJ0KQogICAgICB0aGlzLnVwZGF0ZUZvcmVjYXN0Q2hhcnQoKQogICAgfSwKICAgIGdlbmVyYXRlTW9ja0RhdGEoKSB7CiAgICAgIC8vIOeUn+aIkOaooeaLn+eahOS6p+WTgeaOkuWQjeaVsOaNrgogICAgICB0aGlzLnRvcFByb2R1Y3RzTGlzdCA9IFsKICAgICAgICB7IHJhbms6IDEsIHByb2R1Y3ROYW1lOiAn5pm66IO95omL5py6QScsIGZvcmVjYXN0OiAxMjUwMCwgZ3Jvd3RoOiAxNS4zIH0sCiAgICAgICAgeyByYW5rOiAyLCBwcm9kdWN0TmFtZTogJ+eslOiusOacrOeUteiEkUInLCBmb3JlY2FzdDogODYwMCwgZ3Jvd3RoOiA4LjIgfSwKICAgICAgICB7IHJhbms6IDMsIHByb2R1Y3ROYW1lOiAn5bmz5p2/55S16ISRQycsIGZvcmVjYXN0OiA3MjAwLCBncm93dGg6IDUuNyB9LAogICAgICAgIHsgcmFuazogNCwgcHJvZHVjdE5hbWU6ICfmmbrog73miYvooahEJywgZm9yZWNhc3Q6IDU4MDAsIGdyb3d0aDogMTIuMSB9LAogICAgICAgIHsgcmFuazogNSwgcHJvZHVjdE5hbWU6ICfmmbrog73pn7PnrrFFJywgZm9yZWNhc3Q6IDQ1MDAsIGdyb3d0aDogOS41IH0sCiAgICAgICAgeyByYW5rOiA2LCBwcm9kdWN0TmFtZTogJ+iAs+acukYnLCBmb3JlY2FzdDogMzkwMCwgZ3Jvd3RoOiAtMi44IH0sCiAgICAgICAgeyByYW5rOiA3LCBwcm9kdWN0TmFtZTogJ+aYvuekuuWZqEcnLCBmb3JlY2FzdDogMzIwMCwgZ3Jvd3RoOiAxLjUgfSwKICAgICAgICB7IHJhbms6IDgsIHByb2R1Y3ROYW1lOiAn6ZSu55uYSCcsIGZvcmVjYXN0OiAyODAwLCBncm93dGg6IC0xLjIgfQogICAgICBdCiAgICB9LAogICAgdXBkYXRlRm9yZWNhc3RDaGFydCgpIHsKICAgICAgY29uc3QgZGF0ZXMgPSBbXQogICAgICBjb25zdCBoaXN0b3JpY2FsRGF0YSA9IFtdCiAgICAgIGNvbnN0IGZvcmVjYXN0RGF0YSA9IFtdCiAgICAgIGNvbnN0IGNvbmZpZGVuY2VVcHBlciA9IFtdCiAgICAgIGNvbnN0IGNvbmZpZGVuY2VMb3dlciA9IFtdCiAgICAgIAogICAgICAvLyDnlJ/miJDml6XmnJ/lkozmlbDmja4KICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKQogICAgICBsZXQgZGF0ZUZvcm1hdCA9ICdNTS1kZCcKICAgICAgbGV0IGRheXMgPSAzMAogICAgICAKICAgICAgc3dpdGNoICh0aGlzLmZpbHRlckZvcm0ucGVyaW9kKSB7CiAgICAgICAgY2FzZSAnd2Vlayc6CiAgICAgICAgICBkYXlzID0gNwogICAgICAgICAgZGF0ZUZvcm1hdCA9ICdNTS1kZCcKICAgICAgICAgIGJyZWFrCiAgICAgICAgY2FzZSAnbW9udGgnOgogICAgICAgICAgZGF5cyA9IDMwCiAgICAgICAgICBkYXRlRm9ybWF0ID0gJ01NLWRkJwogICAgICAgICAgYnJlYWsKICAgICAgICBjYXNlICdxdWFydGVyJzoKICAgICAgICAgIGRheXMgPSA5MAogICAgICAgICAgZGF0ZUZvcm1hdCA9ICdNTS1kZCcKICAgICAgICAgIGJyZWFrCiAgICAgICAgY2FzZSAneWVhcic6CiAgICAgICAgICBkYXlzID0gMzY1CiAgICAgICAgICBkYXRlRm9ybWF0ID0gJ3l5eXktTU0nCiAgICAgICAgICBicmVhawogICAgICB9CiAgICAgIAogICAgICAvLyDnlJ/miJDljoblj7LmlbDmja7lkozpooTmtYvmlbDmja4KICAgICAgZm9yIChsZXQgaSA9IDMwOyBpID4gMDsgaS0tKSB7CiAgICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKG5vdy5nZXRUaW1lKCkgLSBpICogMjQgKiA2MCAqIDYwICogMTAwMCkKICAgICAgICBjb25zdCBiYXNlVmFsdWUgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA1MDAgKyA1MDApCiAgICAgICAgaGlzdG9yaWNhbERhdGEucHVzaChiYXNlVmFsdWUpCiAgICAgICAgCiAgICAgICAgaWYgKGkgPD0gZGF5cykgewogICAgICAgICAgZGF0ZXMucHVzaCh0aGlzLmZvcm1hdERhdGUoZGF0ZSwgZGF0ZUZvcm1hdCkpCiAgICAgICAgfQogICAgICB9CiAgICAgIAogICAgICAvLyDnlJ/miJDpooTmtYvmlbDmja7lkoznva7kv6HljLrpl7QKICAgICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gZGF5czsgaSsrKSB7CiAgICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKG5vdy5nZXRUaW1lKCkgKyBpICogMjQgKiA2MCAqIDYwICogMTAwMCkKICAgICAgICBkYXRlcy5wdXNoKHRoaXMuZm9ybWF0RGF0ZShkYXRlLCBkYXRlRm9ybWF0KSkKICAgICAgICAKICAgICAgICBjb25zdCBiYXNlVmFsdWUgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyMDAgKyA2MDApCiAgICAgICAgZm9yZWNhc3REYXRhLnB1c2goYmFzZVZhbHVlKQogICAgICAgIAogICAgICAgIGlmICh0aGlzLnNob3dDb25maWRlbmNlSW50ZXJ2YWwpIHsKICAgICAgICAgIGNvbnN0IGludGVydmFsID0gYmFzZVZhbHVlICogMC4xCiAgICAgICAgICBjb25maWRlbmNlVXBwZXIucHVzaChiYXNlVmFsdWUgKyBpbnRlcnZhbCkKICAgICAgICAgIGNvbmZpZGVuY2VMb3dlci5wdXNoKGJhc2VWYWx1ZSAtIGludGVydmFsKQogICAgICAgIH0KICAgICAgfQogICAgICAKICAgICAgLy8g6YWN572u5Zu+6KGo6YCJ6aG5CiAgICAgIGNvbnN0IG9wdGlvbiA9IHsKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycsCiAgICAgICAgICBheGlzUG9pbnRlcjogewogICAgICAgICAgICB0eXBlOiAnY3Jvc3MnCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgIGRhdGE6IFsn5Y6G5Y+y6ZSA6YePJywgJ+mihOa1i+mUgOmHjyddLmNvbmNhdCh0aGlzLnNob3dDb25maWRlbmNlSW50ZXJ2YWwgPyBbJ+e9ruS/oeWMuumXtCddIDogW10pCiAgICAgICAgfSwKICAgICAgICBncmlkOiB7CiAgICAgICAgICBsZWZ0OiAnMyUnLAogICAgICAgICAgcmlnaHQ6ICc0JScsCiAgICAgICAgICBib3R0b206ICczJScsCiAgICAgICAgICBjb250YWluTGFiZWw6IHRydWUKICAgICAgICB9LAogICAgICAgIHhBeGlzOiB7CiAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLAogICAgICAgICAgYm91bmRhcnlHYXA6IHRoaXMuY2hhcnRUeXBlID09PSAnYmFyJywKICAgICAgICAgIGRhdGE6IGRhdGVzLAogICAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICAgIHJvdGF0ZTogNDUKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHlBeGlzOiB7CiAgICAgICAgICB0eXBlOiAndmFsdWUnLAogICAgICAgICAgbmFtZTogJ+mUgOmHjycKICAgICAgICB9LAogICAgICAgIHNlcmllczogWwogICAgICAgICAgewogICAgICAgICAgICBuYW1lOiAn5Y6G5Y+y6ZSA6YePJywKICAgICAgICAgICAgdHlwZTogdGhpcy5jaGFydFR5cGUsCiAgICAgICAgICAgIGRhdGE6IGhpc3RvcmljYWxEYXRhLnNsaWNlKC1kYXlzKSwKICAgICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjNDA5RUZGJwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICBuYW1lOiAn6aKE5rWL6ZSA6YePJywKICAgICAgICAgICAgdHlwZTogdGhpcy5jaGFydFR5cGUsCiAgICAgICAgICAgIGRhdGE6IGZvcmVjYXN0RGF0YSwKICAgICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjNjdDMjNBJwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgXS5jb25jYXQodGhpcy5zaG93Q29uZmlkZW5jZUludGVydmFsID8gWwogICAgICAgICAgewogICAgICAgICAgICBuYW1lOiAn572u5L+h5Yy66Ze0JywKICAgICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgICBkYXRhOiBjb25maWRlbmNlVXBwZXIsCiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIG9wYWNpdHk6IDAuMywKICAgICAgICAgICAgICB0eXBlOiAnZGFzaGVkJwogICAgICAgICAgICB9LAogICAgICAgICAgICBhcmVhU3R5bGU6IHsKICAgICAgICAgICAgICBvcGFjaXR5OiAwLjEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc3RhY2s6ICdjb25maWRlbmNlJywKICAgICAgICAgICAgc3ltYm9sOiAnbm9uZScKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgIG5hbWU6ICfnva7kv6HljLrpl7QnLAogICAgICAgICAgICB0eXBlOiAnbGluZScsCiAgICAgICAgICAgIGRhdGE6IGNvbmZpZGVuY2VMb3dlciwKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgb3BhY2l0eTogMC4zLAogICAgICAgICAgICAgIHR5cGU6ICdkYXNoZWQnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGFyZWFTdHlsZTogewogICAgICAgICAgICAgIG9wYWNpdHk6IDAuMQogICAgICAgICAgICB9LAogICAgICAgICAgICBzdGFjazogJ2NvbmZpZGVuY2UnLAogICAgICAgICAgICBzeW1ib2w6ICdub25lJwogICAgICAgICAgfQogICAgICAgIF0gOiBbXSkKICAgICAgfQogICAgICAKICAgICAgdGhpcy5jaGFydHMuZm9yZWNhc3RDaGFydC5zZXRPcHRpb24ob3B0aW9uKQogICAgfSwKICAgIGZvcm1hdERhdGUoZGF0ZSwgZm9ybWF0KSB7CiAgICAgIGNvbnN0IHllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCkKICAgICAgY29uc3QgbW9udGggPSBkYXRlLmdldE1vbnRoKCkgKyAxCiAgICAgIGNvbnN0IGRheSA9IGRhdGUuZ2V0RGF0ZSgpCiAgICAgIAogICAgICBpZiAoZm9ybWF0ID09PSAneXl5eS1NTScpIHsKICAgICAgICByZXR1cm4gYCR7eWVhcn0tJHttb250aCA8IDEwID8gJzAnICsgbW9udGggOiBtb250aH1gCiAgICAgIH0KICAgICAgCiAgICAgIHJldHVybiBgJHttb250aCA8IDEwID8gJzAnICsgbW9udGggOiBtb250aH0tJHtkYXkgPCAxMCA/ICcwJyArIGRheSA6IGRheX1gCiAgICB9LAogICAgaGFuZGxlRm9yZWNhc3QoKSB7CiAgICAgIHRoaXMubG9hZGluZyA9IHRydWUKICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgdGhpcy51cGRhdGVGb3JlY2FzdENoYXJ0KCkKICAgICAgICB0aGlzLmdlbmVyYXRlTW9ja0RhdGEoKQogICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlCiAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfpooTmtYvmlbDmja7lt7Lmm7TmlrAnKQogICAgICB9LCAxNTAwKQogICAgfSwKICAgIGhhbmRsZUFkdmFuY2VkU2V0dGluZ3NTYXZlKCkgewogICAgICB0aGlzLnNob3dBZHZhbmNlZFNldHRpbmdzID0gZmFsc2UKICAgICAgdGhpcy5oYW5kbGVGb3JlY2FzdCgpCiAgICB9LAogICAgZXhwb3J0RGF0YSgpIHsKICAgICAgY29uc3QgZGF0YSA9IFsKICAgICAgICBbJ+S6p+WTgeWQjeensCcsICfpooTmtYvplIDph48nLCAn5aKe6ZW/546HJ10sCiAgICAgICAgLi4udGhpcy50b3BQcm9kdWN0c0xpc3QubWFwKGl0ZW0gPT4gWwogICAgICAgICAgaXRlbS5wcm9kdWN0TmFtZSwKICAgICAgICAgIGl0ZW0uZm9yZWNhc3QsCiAgICAgICAgICBgJHtpdGVtLmdyb3d0aH0lYAogICAgICAgIF0pCiAgICAgIF0KICAgICAgCiAgICAgIGNvbnN0IHdzID0gWExTWC51dGlscy5hb2FfdG9fc2hlZXQoZGF0YSkKICAgICAgY29uc3Qgd2IgPSBYTFNYLnV0aWxzLmJvb2tfbmV3KCkKICAgICAgWExTWC51dGlscy5ib29rX2FwcGVuZF9zaGVldCh3Yiwgd3MsICfplIDph4/pooTmtYvmlbDmja4nKQogICAgICAKICAgICAgY29uc3Qgd2JvdXQgPSBYTFNYLndyaXRlKHdiLCB7IGJvb2tUeXBlOiAneGxzeCcsIHR5cGU6ICdhcnJheScgfSkKICAgICAgY29uc3QgYmxvYiA9IG5ldyBCbG9iKFt3Ym91dF0sIHsgdHlwZTogJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScgfSkKICAgICAgRmlsZVNhdmVyLnNhdmVBcyhibG9iLCBg6ZSA6YeP6aKE5rWL5oql5ZGKXyR7bmV3IERhdGUoKS50b0xvY2FsZURhdGVTdHJpbmcoKX0ueGxzeGApCiAgICB9LAogICAgcmVzaXplQ2hhcnRzKCkgewogICAgICBmb3IgKGNvbnN0IGtleSBpbiB0aGlzLmNoYXJ0cykgewogICAgICAgIGlmICh0aGlzLmNoYXJ0c1trZXldKSB7CiAgICAgICAgICB0aGlzLmNoYXJ0c1trZXldLnJlc2l6ZSgpCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgZGVzdHJveUNoYXJ0cygpIHsKICAgICAgZm9yIChjb25zdCBrZXkgaW4gdGhpcy5jaGFydHMpIHsKICAgICAgICBpZiAodGhpcy5jaGFydHNba2V5XSkgewogICAgICAgICAgdGhpcy5jaGFydHNba2V5XS5kaXNwb3NlKCkKICAgICAgICAgIHRoaXMuY2hhcnRzW2tleV0gPSBudWxsCiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgY2hhcnRUeXBlKCkgewogICAgICB0aGlzLnVwZGF0ZUZvcmVjYXN0Q2hhcnQoKQogICAgfSwKICAgIHNob3dDb25maWRlbmNlSW50ZXJ2YWwoKSB7CiAgICAgIHRoaXMudXBkYXRlRm9yZWNhc3RDaGFydCgpCiAgICB9LAogICAgcmFua2luZ1R5cGUoKSB7CiAgICAgIC8vIOagueaNruaOkuWQjeexu+Wei+mHjeaWsOaOkuW6jwogICAgICB0aGlzLnRvcFByb2R1Y3RzTGlzdC5zb3J0KChhLCBiKSA9PiB7CiAgICAgICAgcmV0dXJuIHRoaXMucmFua2luZ1R5cGUgPT09ICd2b2x1bWUnCiAgICAgICAgICA/IGIuZm9yZWNhc3QgLSBhLmZvcmVjYXN0CiAgICAgICAgICA6IGIuZ3Jvd3RoIC0gYS5ncm93dGgKICAgICAgfSkKICAgICAgCiAgICAgIC8vIOabtOaWsOaOkuWQjQogICAgICB0aGlzLnRvcFByb2R1Y3RzTGlzdC5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4gewogICAgICAgIGl0ZW0ucmFuayA9IGluZGV4ICsgMQogICAgICB9KQogICAgfQogIH0KfQo="},{"version":3,"sources":["forecast.vue"],"names":[],"mappings":";AAyfile":"forecast.vue","sourceRoot":"src/views/order","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-card class=\"filter-container\">\n      <div slot=\"header\">\n        <span>销量预测</span>\n        <el-button style=\"float: right; margin-left: 10px;\" type=\"success\" icon=\"el-icon-download\" @click=\"exportData\">导出预测数据</el-button>\n      </div>\n      <div class=\"filter-item-container\">\n        <div class=\"filter-item\">\n          <span class=\"label\">产品类别：</span>\n          <el-cascader\n            v-model=\"filterForm.category\"\n            :options=\"categoryOptions\"\n            :props=\"{ checkStrictly: true }\"\n            clearable\n            placeholder=\"请选择产品类别\"\n            style=\"width: 220px\"\n          />\n        </div>\n        <div class=\"filter-item\">\n          <span class=\"label\">预测周期：</span>\n          <el-select v-model=\"filterForm.period\" placeholder=\"请选择\" style=\"width: 180px\">\n            <el-option v-for=\"item in periodOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\n          </el-select>\n        </div>\n        <div class=\"filter-item\">\n          <span class=\"label\">预测算法：</span>\n          <el-select v-model=\"filterForm.algorithm\" placeholder=\"请选择\" style=\"width: 180px\">\n            <el-option v-for=\"item in algorithmOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\n          </el-select>\n        </div>\n        <div class=\"filter-item\">\n          <span class=\"label\">置信区间：</span>\n          <el-select v-model=\"filterForm.confidence\" placeholder=\"请选择\" style=\"width: 140px\">\n            <el-option v-for=\"item in confidenceOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\n          </el-select>\n        </div>\n        <div class=\"filter-item\">\n          <span class=\"label\">历史数据：</span>\n          <el-date-picker\n            v-model=\"filterForm.dateRange\"\n            type=\"daterange\"\n            range-separator=\"至\"\n            start-placeholder=\"开始日期\"\n            end-placeholder=\"结束日期\"\n            :picker-options=\"pickerOptions\"\n            style=\"width: 320px\"\n          />\n        </div>\n      </div>\n      <div class=\"filter-item-container\" style=\"margin-top: 10px;\">\n        <el-button type=\"primary\" icon=\"el-icon-refresh\" @click=\"handleForecast\">生成预测</el-button>\n        <el-button type=\"info\" icon=\"el-icon-setting\" @click=\"showAdvancedSettings = true\">高级设置</el-button>\n      </div>\n    </el-card>\n\n    <div class=\"chart-container\" v-loading=\"loading\">\n      <el-row :gutter=\"20\">\n        <el-col :span=\"24\">\n          <el-card shadow=\"hover\">\n            <div slot=\"header\">\n              <span>销量预测图表</span>\n              <div style=\"float: right;\">\n                <el-radio-group v-model=\"chartType\" size=\"mini\" style=\"margin-right: 15px;\">\n                  <el-radio-button label=\"line\">折线图</el-radio-button>\n                  <el-radio-button label=\"bar\">柱状图</el-radio-button>\n                </el-radio-group>\n                <el-switch\n                  v-model=\"showConfidenceInterval\"\n                  active-text=\"显示置信区间\"\n                  inactive-text=\"\"\n                />\n              </div>\n            </div>\n            <div ref=\"forecastChart\" style=\"height: 400px;\"></div>\n          </el-card>\n        </el-col>\n      </el-row>\n\n      <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\n        <el-col :span=\"12\">\n          <el-card shadow=\"hover\">\n            <div slot=\"header\">\n              <span>产品预测排行</span>\n              <el-select v-model=\"rankingType\" size=\"mini\" style=\"float: right; width: 120px\">\n                <el-option label=\"销量排名\" value=\"volume\" />\n                <el-option label=\"增长率排名\" value=\"growth\" />\n              </el-select>\n            </div>\n            <el-table :data=\"topProductsList\" border style=\"width: 100%\">\n              <el-table-column prop=\"rank\" label=\"排名\" width=\"80\" align=\"center\" />\n              <el-table-column prop=\"productName\" label=\"产品名称\" align=\"center\" />\n              <el-table-column prop=\"forecast\" label=\"预测销量\" align=\"center\">\n                <template slot-scope=\"scope\">\n                  {{ scope.row.forecast.toLocaleString() }}\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"growth\" label=\"增长率\" align=\"center\">\n                <template slot-scope=\"scope\">\n                  <span :class=\"['growth-rate', scope.row.growth >= 0 ? 'positive' : 'negative']\">\n                    {{ scope.row.growth >= 0 ? '+' : '' }}{{ scope.row.growth }}%\n                  </span>\n                </template>\n              </el-table-column>\n            </el-table>\n          </el-card>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-card shadow=\"hover\">\n            <div slot=\"header\">\n              <span>预测分析报告</span>\n            </div>\n            <div class=\"analysis-container\">\n              <div class=\"analysis-item\">\n                <div class=\"analysis-label\">预测准确率</div>\n                <el-progress type=\"circle\" :percentage=\"forecastAccuracy\" :color=\"accuracyColors\"></el-progress>\n              </div>\n              <div class=\"analysis-stats\">\n                <div class=\"stat-item\">\n                  <div class=\"stat-label\">平均误差率</div>\n                  <div class=\"stat-value\">{{ averageError }}%</div>\n                </div>\n                <div class=\"stat-item\">\n                  <div class=\"stat-label\">预测趋势</div>\n                  <div class=\"stat-value\" :class=\"trend.type\">{{ trend.text }}</div>\n                </div>\n                <div class=\"stat-item\">\n                  <div class=\"stat-label\">季节性指数</div>\n                  <div class=\"stat-value\">{{ seasonalityIndex }}</div>\n                </div>\n              </div>\n            </div>\n          </el-card>\n        </el-col>\n      </el-row>\n    </div>\n\n    <!-- 高级设置对话框 -->\n    <el-dialog title=\"预测高级设置\" :visible.sync=\"showAdvancedSettings\" width=\"600px\">\n      <el-form :model=\"advancedSettings\" label-width=\"140px\">\n        <el-form-item label=\"季节性周期\">\n          <el-input-number v-model=\"advancedSettings.seasonality\" :min=\"1\" :max=\"52\"></el-input-number>\n        </el-form-item>\n        <el-form-item label=\"趋势分解方法\">\n          <el-select v-model=\"advancedSettings.decomposition\" style=\"width: 100%\">\n            <el-option label=\"加法模型\" value=\"additive\" />\n            <el-option label=\"乘法模型\" value=\"multiplicative\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"异常值处理\">\n          <el-select v-model=\"advancedSettings.outlierMethod\" style=\"width: 100%\">\n            <el-option label=\"移动平均\" value=\"moving_average\" />\n            <el-option label=\"中位数替换\" value=\"median\" />\n            <el-option label=\"保持原值\" value=\"keep\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"预测步长\">\n          <el-input-number v-model=\"advancedSettings.forecastSteps\" :min=\"1\" :max=\"365\"></el-input-number>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\">\n        <el-button @click=\"showAdvancedSettings = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"handleAdvancedSettingsSave\">确定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\nimport FileSaver from 'file-saver'\nimport * as XLSX from 'xlsx'\n\nexport default {\n  name: 'OrderForecast',\n  data() {\n    return {\n      loading: false,\n      filterForm: {\n        category: [],\n        period: 'month',\n        algorithm: 'arima',\n        confidence: 95,\n        dateRange: []\n      },\n      categoryOptions: [\n        {\n          value: 'electronics',\n          label: '电子产品',\n          children: [\n            { value: 'phone', label: '手机' },\n            { value: 'laptop', label: '笔记本' },\n            { value: 'tablet', label: '平板' }\n          ]\n        },\n        {\n          value: 'appliances',\n          label: '家用电器',\n          children: [\n            { value: 'tv', label: '电视' },\n            { value: 'fridge', label: '冰箱' },\n            { value: 'washer', label: '洗衣机' }\n          ]\n        }\n      ],\n      periodOptions: [\n        { label: '未来一周', value: 'week' },\n        { label: '未来一个月', value: 'month' },\n        { label: '未来一个季度', value: 'quarter' },\n        { label: '未来一年', value: 'year' }\n      ],\n      algorithmOptions: [\n        { label: 'ARIMA模型', value: 'arima' },\n        { label: '指数平滑法', value: 'exponential' },\n        { label: '季节性分解', value: 'seasonal' },\n        { label: '神经网络', value: 'neural' }\n      ],\n      confidenceOptions: [\n        { label: '90%', value: 90 },\n        { label: '95%', value: 95 },\n        { label: '99%', value: 99 }\n      ],\n      pickerOptions: {\n        shortcuts: [\n          {\n            text: '最近一周',\n            onClick(picker) {\n              const end = new Date()\n              const start = new Date()\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\n              picker.$emit('pick', [start, end])\n            }\n          },\n          {\n            text: '最近一个月',\n            onClick(picker) {\n              const end = new Date()\n              const start = new Date()\n              start.setMonth(start.getMonth() - 1)\n              picker.$emit('pick', [start, end])\n            }\n          },\n          {\n            text: '最近三个月',\n            onClick(picker) {\n              const end = new Date()\n              const start = new Date()\n              start.setMonth(start.getMonth() - 3)\n              picker.$emit('pick', [start, end])\n            }\n          }\n        ]\n      },\n      chartType: 'line',\n      showConfidenceInterval: true,\n      rankingType: 'volume',\n      topProductsList: [],\n      forecastAccuracy: 85,\n      averageError: 8.5,\n      trend: {\n        type: 'up',\n        text: '上升趋势'\n      },\n      seasonalityIndex: 0.82,\n      showAdvancedSettings: false,\n      advancedSettings: {\n        seasonality: 12,\n        decomposition: 'multiplicative',\n        outlierMethod: 'moving_average',\n        forecastSteps: 30\n      },\n      charts: {\n        forecastChart: null\n      },\n      accuracyColors: [\n        {color: '#F56C6C', percentage: 60},\n        {color: '#E6A23C', percentage: 70},\n        {color: '#67C23A', percentage: 80},\n        {color: '#409EFF', percentage: 90}\n      ]\n    }\n  },\n  mounted() {\n    this.initCharts()\n    window.addEventListener('resize', this.resizeCharts)\n    this.generateMockData()\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.resizeCharts)\n    this.destroyCharts()\n  },\n  methods: {\n    initCharts() {\n      this.charts.forecastChart = echarts.init(this.$refs.forecastChart)\n      this.updateForecastChart()\n    },\n    generateMockData() {\n      // 生成模拟的产品排名数据\n      this.topProductsList = [\n        { rank: 1, productName: '智能手机A', forecast: 12500, growth: 15.3 },\n        { rank: 2, productName: '笔记本电脑B', forecast: 8600, growth: 8.2 },\n        { rank: 3, productName: '平板电脑C', forecast: 7200, growth: 5.7 },\n        { rank: 4, productName: '智能手表D', forecast: 5800, growth: 12.1 },\n        { rank: 5, productName: '智能音箱E', forecast: 4500, growth: 9.5 },\n        { rank: 6, productName: '耳机F', forecast: 3900, growth: -2.8 },\n        { rank: 7, productName: '显示器G', forecast: 3200, growth: 1.5 },\n        { rank: 8, productName: '键盘H', forecast: 2800, growth: -1.2 }\n      ]\n    },\n    updateForecastChart() {\n      const dates = []\n      const historicalData = []\n      const forecastData = []\n      const confidenceUpper = []\n      const confidenceLower = []\n      \n      // 生成日期和数据\n      const now = new Date()\n      let dateFormat = 'MM-dd'\n      let days = 30\n      \n      switch (this.filterForm.period) {\n        case 'week':\n          days = 7\n          dateFormat = 'MM-dd'\n          break\n        case 'month':\n          days = 30\n          dateFormat = 'MM-dd'\n          break\n        case 'quarter':\n          days = 90\n          dateFormat = 'MM-dd'\n          break\n        case 'year':\n          days = 365\n          dateFormat = 'yyyy-MM'\n          break\n      }\n      \n      // 生成历史数据和预测数据\n      for (let i = 30; i > 0; i--) {\n        const date = new Date(now.getTime() - i * 24 * 60 * 60 * 1000)\n        const baseValue = Math.floor(Math.random() * 500 + 500)\n        historicalData.push(baseValue)\n        \n        if (i <= days) {\n          dates.push(this.formatDate(date, dateFormat))\n        }\n      }\n      \n      // 生成预测数据和置信区间\n      for (let i = 1; i <= days; i++) {\n        const date = new Date(now.getTime() + i * 24 * 60 * 60 * 1000)\n        dates.push(this.formatDate(date, dateFormat))\n        \n        const baseValue = Math.floor(Math.random() * 200 + 600)\n        forecastData.push(baseValue)\n        \n        if (this.showConfidenceInterval) {\n          const interval = baseValue * 0.1\n          confidenceUpper.push(baseValue + interval)\n          confidenceLower.push(baseValue - interval)\n        }\n      }\n      \n      // 配置图表选项\n      const option = {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross'\n          }\n        },\n        legend: {\n          data: ['历史销量', '预测销量'].concat(this.showConfidenceInterval ? ['置信区间'] : [])\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: this.chartType === 'bar',\n          data: dates,\n          axisLabel: {\n            rotate: 45\n          }\n        },\n        yAxis: {\n          type: 'value',\n          name: '销量'\n        },\n        series: [\n          {\n            name: '历史销量',\n            type: this.chartType,\n            data: historicalData.slice(-days),\n            itemStyle: {\n              color: '#409EFF'\n            }\n          },\n          {\n            name: '预测销量',\n            type: this.chartType,\n            data: forecastData,\n            itemStyle: {\n              color: '#67C23A'\n            }\n          }\n        ].concat(this.showConfidenceInterval ? [\n          {\n            name: '置信区间',\n            type: 'line',\n            data: confidenceUpper,\n            lineStyle: {\n              opacity: 0.3,\n              type: 'dashed'\n            },\n            areaStyle: {\n              opacity: 0.1\n            },\n            stack: 'confidence',\n            symbol: 'none'\n          },\n          {\n            name: '置信区间',\n            type: 'line',\n            data: confidenceLower,\n            lineStyle: {\n              opacity: 0.3,\n              type: 'dashed'\n            },\n            areaStyle: {\n              opacity: 0.1\n            },\n            stack: 'confidence',\n            symbol: 'none'\n          }\n        ] : [])\n      }\n      \n      this.charts.forecastChart.setOption(option)\n    },\n    formatDate(date, format) {\n      const year = date.getFullYear()\n      const month = date.getMonth() + 1\n      const day = date.getDate()\n      \n      if (format === 'yyyy-MM') {\n        return `${year}-${month < 10 ? '0' + month : month}`\n      }\n      \n      return `${month < 10 ? '0' + month : month}-${day < 10 ? '0' + day : day}`\n    },\n    handleForecast() {\n      this.loading = true\n      setTimeout(() => {\n        this.updateForecastChart()\n        this.generateMockData()\n        this.loading = false\n        this.$message.success('预测数据已更新')\n      }, 1500)\n    },\n    handleAdvancedSettingsSave() {\n      this.showAdvancedSettings = false\n      this.handleForecast()\n    },\n    exportData() {\n      const data = [\n        ['产品名称', '预测销量', '增长率'],\n        ...this.topProductsList.map(item => [\n          item.productName,\n          item.forecast,\n          `${item.growth}%`\n        ])\n      ]\n      \n      const ws = XLSX.utils.aoa_to_sheet(data)\n      const wb = XLSX.utils.book_new()\n      XLSX.utils.book_append_sheet(wb, ws, '销量预测数据')\n      \n      const wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'array' })\n      const blob = new Blob([wbout], { type: 'application/octet-stream' })\n      FileSaver.saveAs(blob, `销量预测报告_${new Date().toLocaleDateString()}.xlsx`)\n    },\n    resizeCharts() {\n      for (const key in this.charts) {\n        if (this.charts[key]) {\n          this.charts[key].resize()\n        }\n      }\n    },\n    destroyCharts() {\n      for (const key in this.charts) {\n        if (this.charts[key]) {\n          this.charts[key].dispose()\n          this.charts[key] = null\n        }\n      }\n    }\n  },\n  watch: {\n    chartType() {\n      this.updateForecastChart()\n    },\n    showConfidenceInterval() {\n      this.updateForecastChart()\n    },\n    rankingType() {\n      // 根据排名类型重新排序\n      this.topProductsList.sort((a, b) => {\n        return this.rankingType === 'volume'\n          ? b.forecast - a.forecast\n          : b.growth - a.growth\n      })\n      \n      // 更新排名\n      this.topProductsList.forEach((item, index) => {\n        item.rank = index + 1\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.filter-container {\n  margin-bottom: 20px;\n}\n.filter-item-container {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n}\n.filter-item {\n  display: flex;\n  align-items: center;\n  margin-right: 30px;\n  margin-bottom: 10px;\n}\n.label {\n  margin-right: 10px;\n  white-space: nowrap;\n}\n.chart-container {\n  margin-top: 20px;\n}\n.analysis-container {\n  display: flex;\n  padding: 20px;\n}\n.analysis-item {\n  text-align: center;\n  margin-right: 40px;\n}\n.analysis-label {\n  margin-bottom: 10px;\n  font-size: 14px;\n  color: #606266;\n}\n.analysis-stats {\n  flex: 1;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 20px;\n}\n.stat-item {\n  text-align: center;\n}\n.stat-label {\n  font-size: 14px;\n  color: #606266;\n  margin-bottom: 5px;\n}\n.stat-value {\n  font-size: 20px;\n  font-weight: bold;\n  color: #303133;\n}\n.stat-value.up {\n  color: #67C23A;\n}\n.stat-value.down {\n  color: #F56C6C;\n}\n.growth-rate {\n  font-weight: bold;\n}\n.growth-rate.positive {\n  color: #67C23A;\n}\n.growth-rate.negative {\n  color: #F56C6C;\n}\n</style>"]}]}