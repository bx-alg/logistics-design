{"remainingRequest":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bx/logistics-design/frontend/src/views/order/list.vue?vue&type=style&index=0&id=96626e4e&scoped=true&lang=css","dependencies":[{"path":"/Users/bx/logistics-design/frontend/src/views/order/list.vue","mtime":1747831606522},{"path":"/Users/bx/logistics-design/frontend/node_modules/css-loader/dist/cjs.js","mtime":1747185535288},{"path":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1747185534140},{"path":"/Users/bx/logistics-design/frontend/node_modules/postcss-loader/src/index.js","mtime":1747185535100},{"path":"/Users/bx/logistics-design/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1747185535160},{"path":"/Users/bx/logistics-design/frontend/node_modules/vue-loader/lib/index.js","mtime":1747185534034}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5tYjggewogIG1hcmdpbi1ib3R0b206IDhweDsKfQo="},{"version":3,"sources":["list.vue"],"names":[],"mappings":";AAwUA;AACA;AACA","file":"list.vue","sourceRoot":"src/views/order","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-card>\n      <div slot=\"header\">\n        <span>订单管理</span>\n      </div>\n      \n      <!-- 搜索区域 -->\n      <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\">\n        <el-form-item label=\"订单编号\" prop=\"orderNo\">\n          <el-input\n            v-model=\"queryParams.orderNo\"\n            placeholder=\"请输入订单编号\"\n            clearable\n            style=\"width: 200px\"\n            @keyup.enter.native=\"handleQuery\"\n          />\n        </el-form-item>\n        \n        <el-form-item label=\"客户\" prop=\"customerId\">\n          <el-select\n            v-model=\"queryParams.customerId\"\n            placeholder=\"请选择客户\"\n            clearable\n            style=\"width: 200px\"\n          >\n            <el-option\n              v-for=\"item in customerOptions\"\n              :key=\"item.id\"\n              :label=\"item.customerName\"\n              :value=\"item.id\"\n            />\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"订单状态\" prop=\"status\">\n          <el-select\n            v-model=\"queryParams.status\"\n            placeholder=\"请选择订单状态\"\n            clearable\n            style=\"width: 200px\"\n          >\n            <el-option\n              v-for=\"(label, value) in statusOptions\"\n              :key=\"value\"\n              :label=\"label\"\n              :value=\"Number(value)\"\n            />\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"日期范围\" prop=\"dateRange\">\n          <el-date-picker\n            v-model=\"dateRange\"\n            type=\"daterange\"\n            range-separator=\"至\"\n            start-placeholder=\"开始日期\"\n            end-placeholder=\"结束日期\"\n            style=\"width: 240px\"\n          />\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"handleQuery\">查询</el-button>\n          <el-button icon=\"el-icon-refresh\" @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n      \n      <!-- 操作按钮区域 -->\n      <el-row :gutter=\"10\" class=\"mb8\">\n        <el-col :span=\"1.5\">\n          <el-button\n            type=\"primary\"\n            icon=\"el-icon-plus\"\n            @click=\"handleAdd\"\n          >新增订单</el-button>\n        </el-col>\n        <el-col :span=\"1.5\">\n          <el-button\n            type=\"success\"\n            icon=\"el-icon-download\"\n            @click=\"handleExport\"\n          >导出</el-button>\n        </el-col>\n      </el-row>\n      \n      <!-- 表格区域 -->\n      <el-table\n        v-loading=\"loading\"\n        :data=\"orderList\"\n        border\n        style=\"width: 100%\"\n        @row-click=\"handleRowClick\"\n      >\n        <el-table-column type=\"index\" label=\"序号\" width=\"50\" align=\"center\" />\n        <el-table-column prop=\"orderNo\" label=\"订单编号\" width=\"160\" />\n        <el-table-column prop=\"customerName\" label=\"客户名称\" min-width=\"180\" :show-overflow-tooltip=\"true\" />\n        <el-table-column prop=\"totalAmount\" label=\"订单金额\" width=\"100\">\n          <template slot-scope=\"scope\">\n            {{ scope.row.totalAmount | money }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"contactName\" label=\"联系人\" width=\"100\" />\n        <el-table-column prop=\"contactPhone\" label=\"联系电话\" width=\"120\" />\n        <el-table-column prop=\"status\" label=\"订单状态\" width=\"100\">\n          <template slot-scope=\"scope\">\n            <el-tag :type=\"getStatusType(scope.row.status)\">{{ scope.row.statusName }}</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"expectedDeliveryDate\" label=\"预计交付日期\" width=\"120\" />\n        <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"160\" />\n        <el-table-column label=\"操作\" width=\"180\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <el-button\n              size=\"mini\"\n              type=\"text\"\n              icon=\"el-icon-view\"\n              @click.stop=\"handleView(scope.row)\"\n            >查看</el-button>\n            <el-button\n              size=\"mini\"\n              type=\"text\"\n              icon=\"el-icon-edit\"\n              @click.stop=\"handleUpdate(scope.row)\"\n              v-if=\"scope.row.status === 0\"\n            >修改</el-button>\n            <el-button\n              size=\"mini\"\n              type=\"text\"\n              icon=\"el-icon-delete\"\n              @click.stop=\"handleDelete(scope.row)\"\n              v-if=\"scope.row.status === 0\"\n            >删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <!-- 分页区域 -->\n      <pagination\n        v-show=\"total > 0\"\n        :total=\"total\"\n        :page.sync=\"queryParams.page\"\n        :limit.sync=\"queryParams.size\"\n        @pagination=\"getList\"\n      />\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport axios from '@/utils/request'\n\nexport default {\n  name: 'OrderList',\n  components: {\n    Pagination: () => import('@/components/Pagination')\n  },\n  filters: {\n    money(val) {\n      if (!val) return '0.00'\n      return Number(val).toFixed(2)\n    }\n  },\n  data() {\n    return {\n      // 遮罩层\n      loading: false,\n      // 选中数组\n      ids: [],\n      // 总条数\n      total: 0,\n      // 订单表格数据\n      orderList: [],\n      // 日期范围\n      dateRange: [],\n      // 查询参数\n      queryParams: {\n        page: 1,\n        size: 10,\n        orderNo: undefined,\n        customerId: undefined,\n        status: undefined\n      },\n      // 状态选项\n      statusOptions: {\n        0: '待确认',\n        1: '已确认',\n        2: '生产中',\n        3: '已发货',\n        4: '已完成',\n        5: '已取消'\n      },\n      // 客户选项\n      customerOptions: []\n    }\n  },\n  created() {\n    this.getList()\n    this.getCustomers()\n  },\n  methods: {\n    /** 查询订单列表 */\n    getList() {\n      this.loading = true\n      \n      // 处理日期范围\n      let params = { ...this.queryParams }\n      if (this.dateRange && this.dateRange.length > 0) {\n        params.startDate = this.dateRange[0]\n        params.endDate = this.dateRange[1]\n      }\n      \n      axios.get('/orders', { params }).then(res => {\n        if (res.code == 200) {\n          this.orderList = res.data.content\n          this.total = res.data.totalElements\n        } else {\n          this.$message.error(res.message || '获取订单列表失败')\n          this.orderList = []\n          this.total = 0\n        }\n        this.loading = false\n      }).catch((error) => {\n        console.error('获取订单列表失败:', error)\n        this.$message.error('获取订单列表失败')\n        this.loading = false\n      })\n    },\n    \n    /** 获取客户列表 */\n    getCustomers() {\n      axios.get('/customers').then(res => {\n        if (res.code == 200) {\n          this.customerOptions = res.data\n        } else {\n          this.$message.error(res.message || '获取客户列表失败')\n          this.customerOptions = []\n        }\n      }).catch(error => {\n        console.error('获取客户列表失败:', error)\n        this.$message.error('获取客户列表失败')\n      })\n    },\n    \n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.page = 1\n      this.getList()\n    },\n    \n    /** 重置按钮操作 */\n    resetQuery() {\n      this.dateRange = []\n      this.$refs.queryForm.resetFields()\n      this.handleQuery()\n    },\n    \n    /** 新增按钮操作 */\n    handleAdd() {\n      this.$router.push('/order/create')\n    },\n    \n    /** 查看详情按钮操作 */\n    handleView(row) {\n      this.$router.push(`/order/detail/${row.id}`)\n    },\n    \n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.$router.push(`/order/edit/${row.id}`)\n    },\n    \n    /** 删除按钮操作 */\n    handleDelete(row) {\n      this.$confirm(`是否确认删除订单编号为\"${row.orderNo}\"的数据项?`, '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        axios.delete(`/orders/${row.id}`).then(res => {\n          const response = res.data\n          if (response.success) {\n            this.$message.success('删除成功')\n            this.getList()\n          } else {\n            this.$message.error(response.message || '删除失败')\n          }\n        }).catch(error => {\n          console.error('删除订单失败:', error)\n          this.$message.error('删除失败')\n        })\n      }).catch(() => {})\n    },\n    \n    /** 导出按钮操作 */\n    handleExport() {\n      this.$confirm('是否确认导出所有订单数据?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$message.success('导出成功')\n        // 实际项目中可以实现文件下载功能\n      }).catch(() => {})\n    },\n    \n    /** 行点击事件 */\n    handleRowClick(row) {\n      this.$router.push(`/order/detail/${row.id}`)\n    },\n    \n    /** 获取状态标签类型 */\n    getStatusType(status) {\n      const statusMap = {\n        0: 'info',    // 待确认\n        1: 'primary', // 已确认\n        2: 'warning', // 生产中\n        3: 'warning', // 已发货\n        4: 'success', // 已完成\n        5: 'danger'   // 已取消\n      }\n      return statusMap[status] || 'info'\n    }\n  }\n}\n</script>\n\n<style scoped>\n.mb8 {\n  margin-bottom: 8px;\n}\n</style> "]}]}